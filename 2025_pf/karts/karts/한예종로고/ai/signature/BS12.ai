%!PS-Adobe-3.0 
%%Creator: Adobe Illustrator(R) 8.0
%%AI8_CreatorVersion: 12.0.0
%%For: (admin) ()
%%Title: (BS12.ai)
%%CreationDate: 4/27/2007 2:07 PM
%%BoundingBox: -1 52 596 791
%%HiResBoundingBox: -0.362305 52.3809 595.9141 790.3887
%%DocumentProcessColors: Black
%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.2 0
%%+ procset AGM_Gradient 1.0 0
%%+ procset Adobe_ColorImage_AI6 1.3 0
%%+ procset Adobe_Illustrator_AI5 1.3 0
%%+ procset Adobe_pattern_AI5 1.0 0
%%+ procset Adobe_cshow 2.0 8
%%+ procset Adobe_shading_AI8 1.0 0
%AI5_FileFormat 4.0
%AI3_ColorUsage: Color
%AI7_ImageSettings: 0
%%DocumentCustomColors: (PANTONE 199 C)
%%CMYKCustomColor: 0 1 0.7 0 (PANTONE 199 C)
%%+ 0 0 0 0.5 (PANTONE Cool Gray 10 C)
%%+ 1 1 1 1 ([Registration])
%%AI6_ColorSeparationSet: 1 1 (AI6 Default Color Separation Set) 
%%+ Options: 1 16 0 1 1 1 1 1 0 1 1 1 1 18 0 0 0 0 0 0 0 0 -1 -1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 1 2 3 4
%%+ PPD: 1 21 0 0 60 45 2 2 1 0 0 1 0 0 0 0 0 0 0 0 1 0 () 
%AI3_TemplateBox: 298.5 420.3887 298.5 420.3887
%AI3_TileBox: 12.1377 12.505 581.8977 830.125
%AI3_DocumentPreview: None
%AI5_ArtSize: 595.2756 737.0079
%AI5_RulerUnits: 1
%AI5_ArtFlags: 0 0 0 1 0 0 1 0 0
%AI5_TargetResolution: 800
%AI5_NumLayers: 1
%AI8_OpenToView: -265 790.8887 1.39 1582 1045 18 0 1 10 115 0 0
%AI5_OpenViewLayers: 7
%%PageOrigin:2.5 -51.6104
%AI7_GridSettings: 72 8 72 8 1 0 0.8 0.8 0.8 0.9 0.9 0.9
%AI9_Flatten: 1
%AI12_CMSettings: 00.6
%AI7_Thumbnail: 104 128 8
%%BeginData: 6187 Hex Bytes
%0000330000660000990000CC0033000033330033660033990033CC0033FF
%0066000066330066660066990066CC0066FF009900009933009966009999
%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66
%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333
%3333663333993333CC3333FF3366003366333366663366993366CC3366FF
%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99
%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033
%6600666600996600CC6600FF6633006633336633666633996633CC6633FF
%6666006666336666666666996666CC6666FF669900669933669966669999
%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33
%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF
%9933009933339933669933999933CC9933FF996600996633996666996699
%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33
%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF
%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399
%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933
%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF
%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC
%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699
%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33
%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100
%000011111111220000002200000022222222440000004400000044444444
%550000005500000055555555770000007700000077777777880000008800
%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB
%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF
%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF
%524C45FDFCFFFDFCFFFDFCFFFD38FFA8FD68FF7DA87D7D7DA8A8FD60FFFD
%04A87DA87DA8FD63FF7DA87DA8A8FD62FFA87D7D7D52A8FDFCFFFD8CFFFD
%05A8FFA8A8A8FFA8A8A8FFFD09A8FD08FFC3A7FD47FFA8527D52A8A87D7D
%FF7D7D7DA8A8A87DA87DA87D7D7DA8A8FD07FFB5CAFD47FFA8FFA8FD11FF
%A8FD09FFCFBCCAFD66FFBCCAFD66FFCACAFD66FFBCCAFD65FFCABCCAFD66
%FFBCFD67FFBCCAFD66FFBCFDFCFFFD3AFFA8CACAFD66FFC3CAFD66FFCFCA
%FDFCFFFDFCFFFDFCFFFD86FF7DFFFFA8FFA8FD5EFFA8A8FFA8527DA852FF
%7DFFA8FD5AFF7DFF7D7DFFFFA8FFA8A8A8FFFD04A8FD58FFA87DA8A8FD09
%FFA87D7DFD56FF7D7DA8A8FD0CFF7DFF7DA8FD52FFA87DFF7DFD0FFFA87D
%7DFD52FF7D7D7DFD11FFA8FFA8FD50FFA8FF7DA8FD12FF7D7DFD50FF7D7D
%FD15FFA8A8A8FD4EFFA87DA8FD14FFA8A8FDB3FFFD04A8FFA87DFD06A8FF
%7DFFFFA87DA8A8A87DA8A8A87DA8A8FFA8A8A8FD48FF527D7DA8A8FF7DA8
%7D7D52A87D7D7DFF7D7D7DFF527D7DA87D7D7DA8A8FFA8A8FD47FFA87D7D
%7DA8A852A87D7D52FD077D527DA8A87DA8A8A852A8A8FF7DA8A8FD48FFA8
%FFA8FFA8A87DFFA8FF52A87D527DFF7DA87DFFA8A87DFFA8A87DA8A87D7D
%FD49FFA87DA8FFFFFFA8A8FFFFA8A8A87DA8FFA87DA8FFA87D7DA8FFFFFF
%FD05A8FD4CFFA8FD66FF7D7DA8FD13FFA87D7DFD50FFA8A8A8FD12FFA8A8
%FD51FFA852A8FD12FFA8A8A8FD50FFFD04A8FD10FF7D7DA8FD52FFA8A87D
%FD0FFF7DA87DA8FD53FFA8A87DA8FD0DFFA87DFD56FFA87DA87DA8FD07FF
%A8A87DFFFFA8FD57FFA8A87DA87DFF7DA8A8FFFF7D7DA8A8FD5AFFA8A87D
%FD04A87DA8FF7D7DA8FD60FFA8FFA8FDFCFFFDFCFFFDFCFFFD37FFA8FFA8
%FFA8FFA8FD60FFA8A87DA87DA87DA8A8FDFCFFFD32FFA8FFA8FFFFFFA8FF
%FFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFF
%A8FD40FFA8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FF
%A8A8A8FFA8A8A8FFA8A8A8FFFD05A8FD40FFA8FFA8FFA8FFA8FFA8FFA8FF
%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FD40FF
%FD29A8FD40FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF
%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FD40FFFD05A8FFA8A8A8FFA8A8A8FF
%A8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FD40FF
%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF
%A8FFA8FFA8FFA8FFA8FD40FFFD0FA8FFFD19A8FD40FFA8FFA8FFA8FFA8FF
%A8FFA8FFA8FFA8FFA8FF52A8A87DA87DA8FFA8FFA8FFA8FFA8FFA8FFA8FF
%A8FD40FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A87D7DFFA87D7DA87DA87DA8
%7DFD04A8FFA8A8A8FFA8A8A8FFA8FD3EFFA8FFA8FFA8FFA8FFA8FFA8FFA8
%FF7DA87D7DA8FFA8FFFD06A8527DA8FFA8FFA8FFA8FFA8FFA8FD3EFFFD0B
%A8FFA87D7DA87DFD0BA87D7D7DA87DFD0AA8FD40FFA8FFA8FFA8FFA8FFA8
%A87D7DA8A8A8FFA8FFA8FFA8FFA8FFA8FFA8A8527DA8FFA8FFA8FFA8FFA8
%FD40FFFD05A8FFA8A8A87D52FD06A8FFA8A8A8FFA8A8A8FFA8FFA87D7DA8
%A8FFA8A8A8FFA8A8A8FD40FFA8FFA8FFA8FFA8FF7D7D7DFFA8FFA8FFA8FF
%A8FFA8FFA8FFA8FFA8FFA8A852A8A8FFA8FFA8FFA8FD40FFFD08A87DA87D
%FD13A87DFD0AA8FD40FFA8FFA8FFA8FFA87D52A8A8FFA8FFA8FFA8FFA8FF
%A8FFA8FFA8FFA8FFA8FF7DA8A8FFA8FFA8FFA8FD40FFA8A8A8FFA8A8A8FF
%A8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFFD07A8FFA8A8A8FFA8FD
%40FFA8FFA8FFA8A8A8FFA8A8A8FFA8FFA8FFA8A8A8FFA8A8A8FFA8A8A8FF
%A8A8A8FFA8A8A8FFA8FFA8FD40FFFD04A87D7D52FD087D527DA852A8A87D
%527D7D7D527D7D7D527D7DA87D7D7DFFA8A8A8FD3EFFA8FFA8FFA8A8527D
%7DA87DA8FD047D52A87D7D52A87D7D52A87D7D7DA8FD047DA8A87DA8A8FF
%A8FD3EFFA8A8A8FFFD08A8527DA87D7D527D7D527D7D7D527D7DA87D7D7D
%A87D7D7DA8527D7DFFA8A8A8FD40FFA8FFA8A87DA87DFFA8FF7DA8A8FF52
%A8527D7DFF7DA87DA87D7D52A8A8A87DA87D7D7DA8A8FFA8FD40FFFD06A8
%7DFD0BA87DA8A8A87DA8A8A87DFD0EA8FD40FFA8FFA8FFA8FFA8A87DA8A8
%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF7DA8A8FFA8FFA8FFA8FD40
%FFA8A8A8FFA8A8A8FF7D7D7DFD04A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8
%7DA87DA8A8FFA8A8A8FFA8FD40FFA8FFA8FFA8FFA8FF7D7D7DFFA8FFA8FF
%A8FFA8FFA8FFA8FFA8FFA8FFA87D7DA8A8FFA8FFA8FFA8FD40FFFD09A87D
%527DA8FFFD10A87DA87DFFFD07A8FD40FFA8FFA8FFA8FFA8FFA8A87DA8A8
%FFA8FFA8FFA8FFA8FFA8FFA8FFA8A87D7D7DFFA8FFA8FFA8FFA8FD40FFFD
%05A8FFA8A8A8FFA8A852A8A8FFA8FFA8A8A8FFA8A8A8FFA8A8527D7DA8A8
%FFA8A8A8FFA8A8A8FD3EFFA8FFA8FFA8FFA8FFA8FFA8FF7DA87D7DA8FFA8
%FFA8FFA8FFA8FFFD04A87DFFA8FFA8FFA8FFA8FFA8FD3EFFA8FFFD0BA8FF
%A8FD047DFD07A87D7D52FD0EA8FD40FFA8FFA8FFA8FFA8FFA8FFA8FFA8A8
%7DA87DA87DA87DA8A87D7DA8A8FFA8FFA8FFA8FFA8FFA8FFA8FD40FFA8A8
%A8FFA8A8A8FFA8A8A8FFFD04A87D7D7DA8A87DA8FF7D7DA8FFA8A8A8FFA8
%A8A8FFA8A8A8FFA8FD40FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8A8A8
%FFA8A8A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FD40FFFD15A8FFFD13A8
%FD40FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8
%FFA8FFA8FFA8FFA8FFA8FFA8FD40FFFD05A8FFA8A8A8FFA8A8A8FFA8A8A8
%FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FD40FFA8FFA8
%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8
%FFA8FFA8FFA8FD40FFFD29A8FD40FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8
%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FD4AFFA8FD67
%FFA8A8FD08FFA8A8FD08FFA8A8FD08FFA8A8FD3EFFA8FD13FFA8FD09FFA8
%FD09FFA8FDFCFFFDFCFFFDFCFFFD66FFFF
%%EndData
%%EndComments
%%BeginProlog
%%BeginResource: procset Adobe_level2_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)
%%Version: 1.2 0
%%CreationDate: (04/10/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_level2_AI5 26 dict dup begin
	put
	/packedarray where not
	{
		userdict begin
		/packedarray
		{
			array astore readonly
		} bind def
		/setpacking /pop load def
		/currentpacking false def
	 end
		0
	} if
	pop
	userdict /defaultpacking currentpacking put true setpacking
	/initialize
	{
		Adobe_level2_AI5 begin
	} bind def
	/terminate
	{
		currentdict Adobe_level2_AI5 eq
		{
		 end
		} if
	} bind def
	mark
	/setcustomcolor where not
	{
		/findcmykcustomcolor
		{
			(AI8_CMYK_CustomColor)
			6 packedarray
		} bind def
		/findrgbcustomcolor
		{
			(AI8_RGB_CustomColor)
			5 packedarray
		} bind def
		/setcustomcolor
		{
			exch 
			aload pop dup
			(AI8_CMYK_CustomColor) eq
			{
				pop pop
				4
				{
					4 index mul
					4 1 roll
				} repeat
				5 -1 roll pop
				setcmykcolor
			}
			{
				dup (AI8_RGB_CustomColor) eq
				{
					pop pop
					3
					{
						1 exch sub
						3 index mul 
						1 exch sub
						3 1 roll
					} repeat
					4 -1 roll pop
					setrgbcolor
				}
				{
					pop
					4
					{
						4 index mul 4 1 roll
					} repeat
					5 -1 roll pop
					setcmykcolor
				} ifelse
			} ifelse
		}
		def
	} if
	/setAIseparationgray
	{
		false setoverprint
		0 setgray
		/setseparationgray where{
			pop setseparationgray
		}{
			/setcolorspace where{
				pop
				[/Separation (All) /DeviceCMYK {dup dup dup}] setcolorspace
				1 exch sub setcolor
			}{
				setgray
			}ifelse
		}ifelse
	} def
	
	/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def
	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put
	userdict /level2?
	systemdict /languagelevel known dup
	{
		pop systemdict /languagelevel get 2 ge
	} if
	put
/level2ScreenFreq
{
 begin
		60
		HalftoneType 1 eq
		{
			pop Frequency
		} if
		HalftoneType 2 eq
		{
			pop GrayFrequency
		} if
		HalftoneType 5 eq
		{
			pop Default level2ScreenFreq
		} if
 end
} bind def
userdict /currentScreenFreq  
	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse put
level2? not
	{
		/setcmykcolor where not
		{
			/setcmykcolor
			{
				exch .11 mul add exch .59 mul add exch .3 mul add
				1 exch sub setgray
			} def
		} if
		/currentcmykcolor where not
		{
			/currentcmykcolor
			{
				0 0 0 1 currentgray sub
			} def
		} if
		/setoverprint where not
		{
			/setoverprint /pop load def
		} if
		/selectfont where not
		{
			/selectfont
			{
				exch findfont exch
				dup type /arraytype eq
				{
					makefont
				}
				{
					scalefont
				} ifelse
				setfont
			} bind def
		} if
		/cshow where not
		{
			/cshow
			{
				[
				0 0 5 -1 roll aload pop
				] cvx bind forall
			} bind def
		} if
	} if
	cleartomark
	/anyColor?
	{
		add add add 0 ne
	} bind def
	/testColor
	{
		gsave
		setcmykcolor currentcmykcolor
		grestore
	} bind def
	/testCMYKColorThrough
	{
		testColor anyColor?
	} bind def
	userdict /composite?
	1 0 0 0 testCMYKColorThrough
	0 1 0 0 testCMYKColorThrough
	0 0 1 0 testCMYKColorThrough
	0 0 0 1 testCMYKColorThrough
	and and and
	put
	composite? not
	{
		userdict begin
		gsave
		/cyan? 1 0 0 0 testCMYKColorThrough def
		/magenta? 0 1 0 0 testCMYKColorThrough def
		/yellow? 0 0 1 0 testCMYKColorThrough def
		/black? 0 0 0 1 testCMYKColorThrough def
		grestore
		/isCMYKSep? cyan? magenta? yellow? black? or or or def
		/customColor? isCMYKSep? not def
	 end
	} if
 end defaultpacking setpacking
%%EndResource
%%BeginResource: procset AGM_Gradient_Sep 1.0 0
%%Title: (AGM Gradient Procset)
%%Version: 1.0 0
%%CreationDate: (4/26/96) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient_Sep 5 dict dup begin put
/AGM_Gradient_Sep_private 100 dict def
/initialize{
	AGM_Gradient_Sep begin
	AGM_Gradient_Sep_private begin
	_compositeJob{
		initializeSinglePassSeps
	}{
		initializeMultiPassSeps
	}ifelse
	initializeSeps
	AGM_Gradient_private begin
		/_fillSD newSpotDict def
		/_rampSD newSpotDict def
		/_nCustomColorSD nd
 end
	AGM_Gradient_Sep_private 
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
	AGM_Gradient_Sep
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
 end
	
	currentdict readonly pop	
 end
}def
/terminate{
	currentdict AGM_Gradient_Sep eq{
	 end
	}if
}def
AGM_Gradient_Sep_private begin
/initializeSeps{
	/currentoverprint { _of } def
	_noImage not _level2PS not and{
		/linealFill{
			currentoverprint{
				0 0 1 1 rectfill
			}{
				mySave
				8 setImageParms
				_color{
					_nCustomColorSD begin
						cyan magenta yellow black
	
						_spotColor{
							spot1/tintImage spot1/tintValue get 1 exch sub makeByte8 put
							spot2/tintImage spot2/tintValue get 1 exch sub makeByte8 put
						}if
				 end
	
					4{
						makeByte8 4 1 roll
					}repeat
					true 4 _nCustomColorSD ncolorimage
				}{
					_nCustomColorSD/black get 1 exch sub makeByte8 
					_nCustomColorSD bwImage
				}ifelse
				myRestore
			}ifelse
		}def
	}if
	/_whiteBytes 1 makeByte8 pt
	 /knockOut{
		_noImage _level2PS or currentoverprint or{
			gsave
			false setoverprint
			1 setgray 
			0 0 1 1 rectfill
			grestore
		}{
			8 setImageParms _whiteBytes /_image load 5 execImage
		}ifelse
	}def
	/newSpotDict{
		11 dict dup begin
			/nSpots 2 def
			/spot1 7 dict def
			/spot2 7 dict def
	 end
	}def
	/initSpotData
	{
	 begin
			/name nd
			/tintImage nd
			/tintValue nd
			/spot_C nd
			/spot_M nd
			/spot_Y nd
			/spot_K nd
	 end
	}def
	/initSpotDict{
	 begin
			/cyanInk nd
			/magentaInk nd
			/yellowInk nd
			/blackInk nd
			/cyan nd
			/magenta nd
			/yellow nd
			/black nd
			spot1 initSpotData
			spot2 initSpotData
	 end
	}def
	/copySpotDict{
		/_dst xp
	 begin
			cyanInk magentaInk yellowInk blackInk
			cyan magenta yellow black
			spot1 spot2
	 end
		_dst begin
			/spot1 spot1 maxlength dict def
			/spot2 spot2 maxlength dict def
			spot2 copy pop
			spot1 copy pop
			/black xd
			/yellow xd
			/magenta xd
			/cyan xd
			/blackInk xd
			/yellowInk xd
			/magentaInk xd
			/cyanInk xd
	 end
	}def
	/setCustomColor
	{
		1 index /Black eq{
			6 1 roll 5 npop
			1 exch sub
			setgray
		}{
			6 1 roll _ccAry1 astore exch
			dup null eq{
				pop 0
			}if
			setcustomcolor
		}ifelse
	}def
	/setCStop{
		/_colorStyle exch pt
		
		_colorStyle 0 eq{
			0 0 0
			4 -1 roll
			1 exch sub
			_spotColor{
				/_colorStyle 3 pt
				/Black
				1 index
				1 exch sub
			}if
		}if
		_colorStyle 2 eq{
			3 npop
		}if
		_rampSD _fillSD copySpotDict
		
		_colorStyle 4 eq{ 
			pop
			9 2 roll 3 npop 6 -2 roll
		} if
		
		_colorStyle 3 eq _colorStyle 4 eq or{ 	
				
			_fillSD begin
				/_spot1 spot1 pt
				/_spot2 spot2 pt
		 end
			
			exch dup _spot1/name get eq{
				_spot1 _spot2
			}{
				_spot2 _spot1
			}ifelse
		 begin
			 begin
					/name xd
					1 exch sub /tintValue xd
					4{
						tintValue mul 4 1 roll
					}repeat
					_spotColor not{
						/tintValue null def
					}if
			 end
				/tintValue 0 def
		 end
		}if
		_fillSD nsetcustomcolor
	}def
	/renderCMYK{
		spot1/name get null eq
		spot2/name get null eq and
		dup not{
			pop
			spot1 spotConverted
		}if
		dup not{
			pop
			spot2 spotConverted
		}if
	}def
	/currentInk{
		true
		_inRipSep{
			currentcolorspace 0 get
			dup /DeviceGray eq
			1 index /DeviceCMYK eq or{
				pop
				currentcmykcolor add add add 0 eq{
					pop false
				}if
			}{
				/Separation eq{
					currentcolor 0 eq{
						pop false
					}if
				}if
			}ifelse
		}{
			currentgray 1 eq{
				pop false
			}if
		}ifelse
	}def
	/currentInkN{
	
		_nCustomColorSD begin
			/_spot1 spot1 pt
			/_spot2 spot2 pt
			renderCMYK
	 end
		{
			currentInk
		}{
			gsave
			_spot1 begin
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					currentInk
				}{
					false
				}ifelse
		 end
			_spot2 begin
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					currentInk
				}{
					false
				}ifelse
		 end
			grestore
			
			or
		} ifelse
	}def
	/fill_ /fill load def
	/fillOvp{
		currentoverprint{
			_inRipSep{
				currentcolorspace 0 get
				dup /DeviceGray eq
				1 index /DeviceCMYK eq or{
					pop
					currentcmykcolor add add add 0 eq{
						newpath
					}if
				}{
					/Separation eq{
						currentcolor 0 eq{
							newpath
						}if
					}if
				}ifelse
			}{
				currentgray 1 eq{
					newpath
				}if
			}ifelse
		}if
		fill_
	}def
	/fill{
		_nCustomColorSD begin
			/_spot1 spot1 pt
			/_spot2 spot2 pt
			renderCMYK
	 end
		
		{
			fillOvp
		}{
			_spot1 begin
				gsave
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
				}{
					1 setgray
				}ifelse
				fillOvp 
				grestore
		 end
			_spot2 begin
				name null ne{
					gsave
					true setoverprint
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					fillOvp
					grestore
				}if
		 end
			newpath
		}ifelse
	}def
	/expandSpot{
		_spotColor{
			/_len xp
			_rampSD begin
				spot1 begin
					tintImage null ne{
						tintImage _len expandOne /tintImage xd
					}if
			 end
				spot2 begin
					tintImage null ne{
						tintImage _len expandOne /tintImage xd
					}if
			 end
		 end
		}{
			pop
		}ifelse
	}def
	/rampImage{
		currentoverprint{
			rectImage
		}{
			_enabledSmoothShade{
				fillRamp
			}{
				_color{
					_rampSD begin
						/cyanInk _cyanData 0 ne def
						/magentaInk _magentaData 0 ne def
						/yellowInk _yellowData 0 ne def
						/blackInk _blackData 0 ne def
				 end
					
					_nSamples setImageParms
					_nSamples expandSpot
					_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
					true 4 _rampSD ncolorimage
				}{
					_rampSD begin
						/cyanInk false def
						/magentaInk false def
						/yellowInk false def
						/blackInk true def
				 end
					_nSamples setImageParms 
					_blackData _rampSD bwImage
				}ifelse
			}ifelse
		}ifelse
	}def
	/nsetcustomcolor where{
		pop
	}{
		/nsetcustomcolor
		{
			/_nCustomColorSD xp
			_nCustomColorSD begin
				4 copy
				/black xd
				/yellow xd
				/magenta xd
				/cyan xd
				4 copy
				0 ne /blackInk xd
				0 ne /yellowInk xd
				0 ne /magentaInk xd
				0 ne /cyanInk xd
		 end
			setcmykcolor
		}def
	}ifelse
	/nsetcustomcolorend where{
		pop
	}{
		/nsetcustomcolorend
		{
			/_nCustomColorSD null pt
		}def
	}ifelse
}def
/initializeSinglePassSeps{
	/_decodeNorm	[0 1] pt
	/_decodeInvert 	[1 0] pt
	/spotConverted
	{
	 begin
			name null eq{
				false
			}{
				tintValue null eq tintImage null eq and{
					true
				}{
					_inDistiller{
						false
					}{
						false
						currentpagedevice/SeparationColorNames get{name eq or}forall
						not
					}ifelse
				}ifelse
			}ifelse
	 end
	}def
	/dictImage
	{
		20 dict dup begin
			/Dict xd
			/Decode xd
			/DataSource xd
			/ImageMatrix xd
			/BitsPerComponent xd
			/Height xd
			/Width xd
			/ImageType 1 def
			Dict
	 end
		/_image load 1 execImage
	}def
	/bwImage{
	 begin
			gsave
			currentoverprint{
				blackInk{
					[/Separation /Black /DeviceGray{}] setcolorspace
					_decodeInvert dictImage
				}{
					5 npop
				}ifelse
			}{
				/DeviceGray setcolorspace
				_decodeNorm dictImage
			}ifelse
			grestore
	 end
	}def
	/ncolorimage where{
		pop
	}{
		/ncolorimage{
		 begin
				renderCMYK{
					cyanInk 
					magentaInk and
					yellowInk and
					blackInk and
					not
					currentoverprint 
					and{	
						pop pop
						gsave
						cyanInk{
							8 copy
							[/Separation /Cyan /DeviceGray{}] setcolorspace
							3 npop
							_decodeNorm dictImage
						}if
						magentaInk{
							8 copy
							[/Separation /Magenta /DeviceGray{}] setcolorspace
							4 -1 roll
							3 npop
							_decodeNorm dictImage
						}if
						yellowInk{
							8 copy
							[/Separation /Yellow /DeviceGray{}] setcolorspace
							4 -2 roll
							3 npop
							_decodeNorm dictImage
						}if
						blackInk{
							4 -3 roll
							[/Separation /Black /DeviceGray{}] setcolorspace
							3 npop
							_decodeNorm dictImage
						}{
							8 npop
						}ifelse
						grestore
					}{
						/_colorimage load 10 execImage
					}ifelse
				}{
					6 npop
					gsave
					spot1 begin
						name null ne tintImage null ne and{
							[/Separation name /DeviceGray{}] setcolorspace
							4 copy
							tintImage 
							name /Black eq{
								_decodeNorm
							}{
								_decodeInvert
							}ifelse 
							dictImage
						}{
							1 setgray fill
						}ifelse
				 end
					spot2 begin
						true setoverprint
						name null ne tintImage null ne and{
							[/Separation name /DeviceGray{}] setcolorspace
							tintImage 
							name /Black eq{
								_decodeNorm
							}{
								_decodeInvert
							}ifelse 
							dictImage
						}{
							4 npop
							1 setgray fill
						}ifelse
				 end
					grestore
				}ifelse
		 end
		}def
	}ifelse
	/getRampColorSpace{
		
		/_renderCMYK _rampSD begin renderCMYK end pt
		
		_renderCMYK not{
			_rampSD begin
				[/DeviceN 
					[
					spot1 begin
						name null ne tintImage null ne and{
							name
						}if
				 end
					spot2 begin
						name null ne tintImage null ne and{
							name
						}if
				 end
					]
					_inDistiller {
						/DeviceCMYK [
							spot1 begin
								name null ne tintImage null ne and{
									spot_C spot_M spot_Y spot_K 1
								}{
									0 0 0 0 0
								}ifelse
						 end
							spot2 begin
								name null ne tintImage null ne and{
									spot_C spot_M spot_Y spot_K 2
								}{
									0 0 0 0 0
								}ifelse
						 end
							5 1 roll 6 -2 roll add
							dup 1 eq {
								pop
								8 /index cvx 1 /exch cvx /sub cvx
								9 1 /roll cvx
							}{
								2 eq {
									8 /index cvx 1 /exch cvx /sub cvx
									10 1 /roll cvx
								}if
							}ifelse
							4 1 /roll cvx 5 -2 /roll cvx
							8 /index cvx /mul cvx /exch cvx 9 /index cvx /mul cvx /add cvx 7 1 /roll cvx
							3 1 /roll cvx 4 -2 /roll cvx
							7 /index cvx /mul cvx /exch cvx 8 /index cvx /mul cvx /add cvx 6 1 /roll cvx
							2 1 /roll cvx 3 -2 /roll cvx
							6 /index cvx /mul cvx /exch cvx 7 /index cvx /mul cvx /add cvx 5 1 /roll cvx
							5 /index cvx /mul cvx /exch cvx 6 /index cvx /mul cvx /add cvx 4 1 /roll cvx
							6 -2 /roll cvx /pop cvx /pop cvx
						] cvx bind
					}{
						/DeviceCMYK {}
					}ifelse
				] setcolorspace
		 end
			/_nColorSpace currentcolorspace pt
		}if
		
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		_renderCMYK{
			/_C0 [currentcolor] pt
			/_C0_Space currentcolorspace pt
		}{
			/_C0 [
				_nCustomColorSD begin
					spot1 begin 
						name null ne{
							tintValue
						}if
				 end
					spot2 begin 
						name null ne{
							tintValue
						}if
				 end
			 end
			] pt
			/_C0_Space _nColorSpace pt
		}ifelse
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		_renderCMYK{
			/_C1 [currentcolor] pt
			/_C1_Space currentcolorspace pt
		}{
			/_C1 [
				_nCustomColorSD begin
					spot1 begin 
						name null ne{
							tintValue
						}if
				 end
					spot2 begin 
						name null ne{
							tintValue
						}if
				 end
			 end
			] pt
			/_C1_Space _nColorSpace pt
		}ifelse
		
		/_rampColorSpace _C0_Space pt
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
/initializeMultiPassSeps{
	/invertXfer{
		[
		{
			1 exch sub
		}/exec load systemdict /currenttransfer get exec /exec load
		] cvx systemdict /settransfer get exec
	}def
	/ccThrough{
		gsave
		1 setCustomColor
		currentcmykcolor
		grestore
		add add add 0 ne
	}def
	/spotConverted
	{
	 begin
			_isCMYKSep not{
				false
			}{
				name null eq{
					false
				}{
					tintValue null eq tintImage null eq and{
						true
					}{
						spot_C spot_M spot_Y spot_K name ccThrough
					}ifelse
				}ifelse
			}ifelse
	 end
	}def
	/spotChannel
	{
		_isCMYKSep{
			pop false
		}{
			/_spotDict xp
				_spotDict/name get null eq{
					false
				}{
					_spotDict/spot_C get
					_spotDict/spot_M get
					_spotDict/spot_Y get
					_spotDict/spot_K get
					_spotDict/name get
					ccThrough 
				}ifelse
		}ifelse
	}def
	/getChannelData
	{
		_isCMYKSep dup{
			pop renderCMYK
		}if
		{
			_blackPlate{
				4 1 roll 3 npop blackInk
			}{
				_yellowPlate{
					4 2 roll 3 npop yellowInk
				}{
					_magentaPlate{
						4 3 roll 3 npop magentaInk
					}{
						3 npop cyanInk
					}ifelse
				}ifelse
			}ifelse
			{
				true /nonZeroData
			}{
				true /zeroData
			}ifelse
		}{
			4 npop
			spot1/name get null ne 
			spot1 spotChannel and{
				spot1/tintImage get dup null ne{
					false /nonZeroData
				}{
					pop false /noData
				}ifelse
			}{
				spot2/name get null ne 
				spot2 spotChannel and{
					spot2/tintImage get dup null ne{
						false /nonZeroData
					}{
						pop false /noData
					}ifelse
				}{
					false /noData
				}ifelse
			}ifelse
		}ifelse
	}def
	/renderChannelData
	{
		/_tmp xp
		_tmp /nonZeroData ne currentoverprint and{
			pop
			_tmp /zeroData eq{pop}if
			4 npop
		}{
			_tmp /nonZeroData eq{
				{
					invertXfer
				}if
					systemdict/image
				get 5 execImage
			}{
				pop
				_tmp /zeroData eq{pop}if
				4 npop
				knockOut
			}ifelse
		}ifelse
	}def
	/bwImage{
	 begin
			gsave
			dup dup dup
			getChannelData
			exch pop false exch
			renderChannelData
			grestore
	 end
	}def
	/ncolorimage{
	 begin
			pop pop
			gsave
			spot2/name get null ne spot2 spotChannel and{
				true setoverprint
			}if
			getChannelData 
			renderChannelData
			grestore
	 end
	}def
	/getRampColorSpace{
		
		/_renderCMYK _rampSD begin renderCMYK end pt
		
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		
		_renderCMYK{
			/_C0 [currentcolor] pt
			/_C0_Space currentcolorspace pt
		}{
			/_C0 [
				_nCustomColorSD begin
					0
					spot1 begin 
						name null ne
						tintValue null ne and
						spot1 spotChannel and{
							pop tintValue
						}if
				 end
					spot2 begin 
						name null ne
						tintValue null ne and
						spot2 spotChannel and{
							pop tintValue
						}if
				 end
					1 exch sub
			 end
			] pt
			/_C0_Space /DeviceGray pt
		}ifelse
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		
		_renderCMYK{
			/_C1 [currentcolor] pt
			/_C1_Space currentcolorspace pt
		}{
			/_C1 [
				_nCustomColorSD begin
					0
					spot1 begin 
						name null ne
						tintValue null ne and
						spot1 spotChannel and{
							pop tintValue
						}if
				 end
					spot2 begin 
						name null ne
						tintValue null ne and
						spot2 spotChannel and{
							pop tintValue
						}if
				 end
					1 exch sub
			 end
			] pt
			/_C1_Space /DeviceGray pt
		}ifelse
		
		/_rampColorSpace _C0_Space pt
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
end
end
defaultpacking setpacking
%%EndResource
%%BeginResource: procset AGM_Gradient 1.0 0
%%Title: (AGM Gradient Procset)
%%Version: 1.0 0
%%CreationDate: (4/26/96) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient 20 dict dup begin put
/AGM_Gradient_private 201 dict def
/initialize
{
	AGM_Gradient begin
	AGM_Gradient_private begin
	initializeVars
	
	/bd systemdict/mark get def
	/ed
		_level2PS 
		{
			(>>)
		}{
			(counttomark 2 idiv dup dict begin {def} repeat pop currentdict end)
		} ifelse
	cvx def
	
	_level2PS{
		initializeLev2
	}{
		initializeLev1
	}ifelse
	
	queryDevice
	
	initializeRectFill
	initializeShading
	initializeOps
	_producingSeps{
		AGM_Gradient_Sep/initialize get exec
	}{
		initializeComposite
	}ifelse
	_illustrator{
		/f{}def
		/F{}def
		/s{}def
		/S{}def
		/b{}def
		/B{}def
	}if
	/image where{
		/image get /_image xd
	}if
	/colorimage where{
		/colorimage get /_colorimage xd
	}if
	AGM_Gradient_private
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
	AGM_Gradient
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
 end
	
	currentdict readonly pop
 end
}def
/initializeAI
{
	pop pop 
	AGM_Gradient/AGM_Gradient_private get /_illustrator true put
	AGM_Gradient/initialize get exec
		AGM_Gradient begin
}def
/unload{
	systemdict/languagelevel known{
		systemdict/languagelevel get 2 ge{
			userdict/AGM_Gradient_Sep 2 copy known{
				undef
			}{
				pop pop
			}ifelse
			userdict/AGM_Gradient 2 copy known{
				undef
			}{
				pop pop
			}ifelse
		}if
	}if
}def
/terminate{
	currentdict AGM_Gradient eq{
	 end
	}if
}def
 
AGM_Gradient_private begin
/initializeVars{
	/_d255 256 array def
	0 1 255{
		_d255 exch dup 255 div put
	}bind for
	/_d255- 256 array def
	0 1 255{
		_d255- exch 1 _d255 2 index get sub put
	}bind for
	/_sSave nd
	/_dUserSpace matrix defaultmatrix def
	/_bUMatrix matrix def
	/_imageMatrix matrix def
	/_saveMatrix matrix def
	/_xm matrix def
	/_ccAry1 5 array def
	/_bbox 4 array pt
	/_level2PS 
		systemdict/languagelevel known dup{
			pop systemdict/languagelevel get 2 ge
		}if
	def
	/_level3PS
		_level2PS systemdict/shfill known and
	def
	currentdict /_illustrator known not{
		/_illustrator false def
	}if
	
}def
/initializeOps
{
	AGM_Gradient begin
	currentdict/Bc known not{
		/Bc{
		
			_renderFlag 2 eq _enabledSmoothShade or{
				6 npop
			}{
				pushBSpace
				_rampIndex 0 eq{
					pop pop
					setCStop
				}if
				linealFill
				popBSpace
			}ifelse
		
		}def
	}if
	
	currentdict/Bg known not{
		/Bg{
			10 npop
			/_gradName xp
			/_renderFlag xp
			/_enabledSmoothShade false pt
		
			_renderFlag 2 ne{
		
				_illustrator{
					_of setoverprint
				}if
		
				/_enabledSmoothShade 
					_level3PS{
						_usingSmoothShade
						_producingSeps not
						currentoverprint not or and
						_noImage not and
					}{
						false
					}ifelse
				pt
				
				_illustrator _eo and _renderFlag 3 eq or{
					eoclip
				}{
					clip
				}ifelse
		
				_gradNames _gradName 2 copy known{
					get
					mark exch aload pop
					/_gradType xp
					1 sub dup /_rampIndex xp
					/_maxRampIndex xp
					mark exch aload pop
					0 0
				}if
				pop pop
				getRampData
			}{
				mark mark
			}ifelse
		}def
	}if
	
	currentdict/Bm known not{
		/Bm{
			_renderFlag 2 ne{
				_gradType 0 eq{
					linealRamp
				}{
					radialGrad
				}ifelse
			}{
				6 npop
			}ifelse
		}def
	}if
	
	currentdict/Bh known not{
		/Bh{
			2 npop
			/_yHi xp
			/_xHi xp
			/_radHilite _xHi 0 ne _yHi 0 ne or pt
		}def
	}if
	
	currentdict/Bn known not{
		/Bn{
			AGM_Gradient_private begin
				dict /_gradNames xp
		 end
		}def
	}if
	
	currentdict/Bd known not{
		/Bd{
			AGM_Gradient begin
			AGM_Gradient_private begin
				/_nColorsBd xp
				/_gradType xp
				/_gradName xp
		}def
	}if
	
	currentdict/BD known not{
		/BD{
				currentdict/_gradNames known not{
					/_gradNames 20 dict def
				}if
				] _nColorsBd _gradType
				]  _gradName exch /_gradNames xput
		 end
		 end
		}def
	}if
	
	currentdict/Bb known not{
		/Bb{
		
			AGM_Gradient/AGM_Gradient_private get /_illustrator get not{
				AGM_Gradient begin
			}if
			AGM_Gradient_private begin
			_producingSeps{
				AGM_Gradient_Sep/AGM_Gradient_Sep_private get begin
			}if
			mySave
		}def
	}if
	
	currentdict/BB known not{
		/BB{
		
			/_tmp xp
			cleartomark cleartomark
		
			_tmp dup
			_renderFlag
		
			myRestore
		
			_producingSeps{
			 end
			}if
		
			_illustrator dup
		 end
			not {
			 end
			}if
		
			{
				2 ne exch 0 gt and{
					2 eq{
						s
					}{
						S
					}ifelse
				}{
					pop newpath
				}ifelse
			}{
				pop newpath
			}ifelse
		
		
		}def
	}if
	
	currentdict/Xm known not{
		/Xm{
			_xm astore pop
		}def
	}if
	
 end
}def
/queryDevice{
	/_inDistiller
		systemdict /currentdistillerparams known
	def
	/_inRipSep
		_level2PS{
			currentpagedevice/Separations 2 copy known{
				get
			}{
				pop pop false
			}ifelse
		}{
			false
		}ifelse
		_inDistiller or
	def
	/_noImage /lv1Fix where{
		pop lv1Fix
	}{
		false
	}ifelse
	def
	/_useShells where{
		/_useShells get /_usingShells xp
	}{
		/_usingShells false def
	}ifelse
	
	/_useSmoothShade where{
		pop
	}{
		/_useSmoothShade false def 
	}ifelse
	/_forceToCMYK where{
		pop
	}{
		/_forceToCMYK false def 
	}ifelse
	/_cyanPlate 1 0 0 0 testCMYKColorThrough def
	/_magentaPlate 0 1 0 0 testCMYKColorThrough def
	/_yellowPlate 0 0 1 0 testCMYKColorThrough def
	/_blackPlate 0 0 0 1 testCMYKColorThrough def
	/_compositeJob
		_cyanPlate _magentaPlate and _yellowPlate and _blackPlate and
	def
	/_isCMYKSep
		_cyanPlate _magentaPlate or _yellowPlate or _blackPlate or
	def
	/_compositeSpotDevice where{
		pop
	}{
		/_compositeSpotDevice _compositeJob not _inRipSep or{
			1
		}{
			0
		}ifelse
		def
	}ifelse
	/_producingSeps _compositeSpotDevice 0 ne def
	/_deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt def
	/_dpiThreshold where{
		pop
	}{
		/_dpiThreshold 600 def
	}ifelse
	/_screenFreqThreshold where{
		pop
	}{
		/_screenFreqThreshold 150 def
	}ifelse
	/_contoneDevice where{
		pop
	}{
		/_contoneDevice false def
	}ifelse
	/_subSampleOK 
		_deviceDPI _dpiThreshold le 
		currentScreenFreq _screenFreqThreshold le and 
		_contoneDevice not and 
	def
}def
/initializeRectFill{
	/rectfill where dup{
		exch pop not _producingSeps or
	}{
		not
	}ifelse
	{
		/rectfill{
			gsave
			newpath
			4 2 roll moveto
			1 index 0 rlineto
			0 1 index rlineto
			1 index neg 0 rlineto
			pop pop
			closepath
			fill
			grestore
		}def
	}if
}def
/initializeLev1{
	/currentScreenFreq{
		currentscreen pop pop
	}def
	/_byte 1 string def
	/colorimage where{
		pop
	}{
		/colorimage{
			pop pop
			/_blackTmp xp
			/_yellowTmp xp
			/_magentaTmp xp
			/_cyanTmp xp
			/_cnt 0 pt
			[
			_byte dup 0
			_cyanTmp 
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .3 /mul cvx
			_magentaTmp
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .59 /mul cvx
			_yellowTmp
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .11 /mul cvx
			_blackTmp 
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx
			/add cvx /add cvx /add cvx 1 /exch cvx /sub cvx
			/dup cvx 0 /lt cvx{
				pop 0
			}/if cvx
			/dup cvx 1 /gt cvx{
				pop 1
			}/if cvx
			255 /mul cvx /cvi cvx
			256 /mod cvx
			/dup cvx 0 /lt cvx{
				pop 0
			}/if cvx
			/put cvx
			/_cnt dup cvx 1 /add cvx /pt cvx
			] cvx
			bind
			/_image load 5 execImage
		}def
	}ifelse
}def
/initializeLev2{
	/level2ScreenFreq{
	 begin
		60
		HalftoneType 1 eq{
			pop Frequency
		}if
		HalftoneType 2 eq{
			pop GrayFrequency
		}if
		HalftoneType 5 eq{
			pop Default level2ScreenFreq
		}if
		 end
	}def
	/currentScreenFreq{
		currenthalftone level2ScreenFreq
	}def
}def
/initializeShading{
	_useSmoothShade _level3PS and{
		/_usingSmoothShade true pt
		initializeLev3_Ops
	}{
		/_usingSmoothShade false pt
	}ifelse
}def
/initializeLev3_Ops
{
	/initShFill{
		/_index _gradType 0 eq {0}{_maxRampIndex 1 sub} ifelse pt
		/_rampFuncsArray _maxRampIndex array pt
		/_boundsArray _maxRampIndex 1 sub array pt
		/_encodeArray _maxRampIndex 2 mul array pt
		/_beginCoord _rampPoint pt
		/_colorSpace null pt
		/_firstFill _rampIndex _maxRampIndex eq pt
		/_lastFill false pt
	}def
	/linealShFill{
		popBSpace
		_xm aload pop pushBSpace
		
		/_size _index 1 add pt
		_size _maxRampIndex lt {
			/_rampFuncsArray _rampFuncsArray 0 _size getinterval pt
			/_boundsArray _boundsArray 0 _size 1 sub getinterval pt
			/_encodeArray _encodeArray 0 _size 2 mul getinterval pt
		}if
		
		bd
			/ShadingType 2
			/ColorSpace _colorSpace
			_rgbInCMYK{
				/Function [
					_cData sampFunc
					_mData sampFunc
					_yData sampFunc
					_kData sampFunc
				]
			}{
				/Function 
					bd
						/FunctionType 3
						/Domain [0 1]
						/Functions _rampFuncsArray
						/Bounds _boundsArray
						/Encode _encodeArray
					ed
			}ifelse
			/Extend [_firstFill _lastFill]
			/Domain [0 1] 
			/Coords [_beginCoord 0 _endCoord 0]
		ed
		shfill
	}def
	
	/radialShFill{
		/_size _maxRampIndex _index sub pt
		_size _maxRampIndex lt {
			/_rampFuncsArray _rampFuncsArray _index _size getinterval pt
			/_boundsArray _boundsArray _index _size 1 sub getinterval pt
			/_encodeArray _encodeArray _index 2 mul _size 2 mul getinterval pt
		}if
		
		/_rampLen _beginCoord _endCoord sub pt
		bd
			/ShadingType 3
			/ColorSpace _colorSpace
			_rgbInCMYK{
				/Function [
					_cData sampFunc
					_mData sampFunc
					_yData sampFunc
					_kData sampFunc
				]
			}{
				/Function 
					bd
						/FunctionType 3
						/Domain [0 1]
						/Functions _rampFuncsArray
						/Bounds _boundsArray
						/Encode _encodeArray
					ed
			}ifelse
			/Extend [_lastFill _firstFill]
			/Domain [0 1] 
			/Coords [_xHi _rampLen mul _yHi _rampLen mul _endCoord 0 0 _beginCoord] 
		ed
		shfill
		
		_radHilite{
			_xHi _rampLen mul _yHi _rampLen mul translate
		}if
	}def
	
	%
	/sampFunc{
		/_tmp exch pt
		bd
			_tmp length 1 eq {
				_tmp 0 get
				/_tmp 2 string pt
				dup _tmp 0 3 -1 roll put
				_tmp 1 3 -1 roll put
			}if
			/FunctionType 0
			/Order 1
			/Size [_tmp length]
			/Domain [0 1]
			/BitsPerSample 8
			/DataSource _tmp
			/Range [0 1]
		ed
	}def
	
	/fillRamp{
	
	
		/_invert _midPoint 0.5 lt pt
		_rampIndex _maxRampIndex eq {
			initShFill
		}if
		
		getRampColorSpace
		
		_colorSpace null eq{
			/_colorSpace _rampColorSpace pt
		}{
			_colorSpace _rampColorSpace ne _rgbInCMYK or{
				/_index _index 1 
				_gradType 0 eq{
					sub pt
					linealShFill
				}{
					add pt
					radialShFill
				}ifelse
				initShFill
				/_colorSpace _rampColorSpace pt
			} if
		}ifelse
		/_endCoord _endPoint pt	
		/_rgbInCMYK false pt
		_producingSeps _forceToCMYK or _rgbRamp and {
			_spotColor{
				_renderCMYK
			}{
				_isCMYKSep
			}ifelse
		}{
			false
		}ifelse
		{
			_compositeJob{
				/_rgbInCMYK true pt
				_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
				dup length string copy /_kData exch pt
				dup length string copy /_yData exch pt
				dup length string copy /_mData exch pt
				dup length string copy /_cData exch pt
			}{
				_rampFuncsArray _index
					_cyanPlate{_cyanData}if
						_magentaPlate{_magentaData}if
						_yellowPlate{_yellowData}if
						_blackPlate{_blackData}if
					_nSamples expandOne
					sampFunc
					dup begin /Decode [1 0] def end
				put
				/_invert false pt
			}ifelse
		}{
			_rampFuncsArray _index
				bd
					/FunctionType 2
					/Domain [0 1]
					/N 0.5 log _invert{1 _midPoint sub}{_midPoint}ifelse log div
					_gradType 0 eq{
						_invert{/C1}{/C0}ifelse _C0
						_invert{/C0}{/C1}ifelse _C1
					}{
						_invert{/C0}{/C1}ifelse _C1
						_invert{/C1}{/C0}ifelse _C0
					}ifelse
				ed
			put
		}ifelse
		
		_rampIndex 1 ne{
			_boundsArray _index _gradType 1 eq{1 sub}if _endCoord put
		} if
		
		0 1 _invert {exch}if
		_encodeArray _index 2 mul 1 add 3 -1 roll put
		_encodeArray _index 2 mul 3 -1 roll put
		_rampIndex 1 eq {
			/_lastFill true pt
			_gradType 0 eq{
				linealShFill
			}{
				radialShFill
			}ifelse
		}if
		/_index _index 1 
		_gradType 0 eq{
			add pt
		}{
			sub pt
		}ifelse
	}def
}def
/initializeComposite{
	/bwImage{
		pop /_image load 5 execImage 
	}def
	/rampImage{
		_enabledSmoothShade{
			fillRamp
		}{
			_color{
				_nSamples setImageParms
	
				
				_rgbRamp _forceToCMYK not and{
					_redData _greenData _blueData _nSamples 3 expandColor
					true 3 null ncolorimage
				}{
					_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
					true 4 null ncolorimage
				}ifelse
			}{
				_nSamples setImageParms _blackData null bwImage
			}ifelse
		}ifelse
	}def
	/setCStop{
		/_colorStyle exch pt
		_colorStyle 0 eq{
			1 exch sub
			0 0 0
			4 -1 roll
		}if
		
		_colorStyle 2 eq{
			_forceToCMYK{
				3 npop setcmykcolor
			}{
				setrgbcolor 4 npop
			}ifelse
		}if
		
		_colorStyle 3 eq{
			1 exch sub /_tmp xp
			pop
			4{
				_tmp mul 4 1 roll
			}repeat
		}if
		
		_colorStyle 4 eq{
			_forceToCMYK{
				6 npop setcmykcolor
			}{
				3 -1 roll pop pop
				1 exch sub /_tmp xp
				3{
					1 exch sub _tmp mul 1 exch sub 3 1 roll
				}repeat
				setrgbcolor 
				4 npop
			}ifelse
		}if
		_colorStyle 2 ne _colorStyle 4 ne and{
			null nsetcustomcolor
		}if
	}def
	/nsetcustomcolor
	{
		pop setcmykcolor
	}def
	/nsetcustomcolorend
	{
	}def
	/ncolorimage{
		pop 
		/_colorimage load 10 execImage
	}def
	_noImage not _level2PS not and{
		/linealFill{
			8 setImageParms
			_color{
				currentcmykcolor
				4{
					makeByte8 4 1 roll
				}repeat
				true 4 null ncolorimage
			}{
				currentgray makeByte8 null bwImage
			}ifelse
		}def
	}if
	/getRampColorSpace{
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		/_C0 [currentcolor] pt
		/_C0_Space currentcolorspace pt
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		/_C1 [currentcolor] pt
		/_C1_Space currentcolorspace pt
		
		/_rampColorSpace _C0_Space pt
		
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
/npop{
	{pop}repeat
}def
/xd{
	exch def
}def
/nd{
	null def
}def
/pt{
	AGM_Gradient_private 3 1 roll put
}def
/xp{
	exch pt
}def
/xput{
	dup load dup length exch maxlength eq{
		dup dup load dup
		length 2 mul dict copy def
	}if
	load begin
		def
  end
}def
/mySave{
	save /_sSave xp
}def
/myRestore{
	_sSave type /savetype eq{
		_sSave restore
	}if
}def
/gMark{
	counttomark 2 add -1 roll
}def
/execImage{
	/_tmp xp
	{
		exec
	}stopped{
		$error /errorname get /undefinedresult ne{
			stop
		}{
			_tmp npop
		}ifelse
	}if
}def
/pushBSpace{
	newpath gsave
	_bUMatrix astore concat 
}def
/popBSpace{
	grestore
}def
/makeByte8{
	/_tmp 0 pt
	255 mul cvi
	8 string 8{
		dup _tmp 3 index put 
		/_tmp _tmp 1 add pt
	}repeat
	exch pop
}def
/setImageParms{
	1 8 2 index 0 0 1 0 0 _imageMatrix astore
}def
/linealFill{
	0 0 1 1 rectfill
}def
/testCMYKColorThrough{
	gsave
	setcmykcolor currentcmykcolor
	grestore
	add add add 0 ne
}def
/expandOne	{
	/_tmp xp
	dup type /stringtype ne{
		_tmp string
		exch
		dup 0 ne{
			255 mul cvi
			0 1 _tmp 1 sub{
				3 copy
				exch put pop
			}for
		}if
		pop
	}if
}def
/expandColor{
	/_channels xp
	/_len xp
	_channels{
		_len expandOne _channels 1 roll
	}repeat
}def
/blendColor{
	
	_color{
		_rgbRamp _producingSeps not and _forceToCMYK not and{
			_redData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_greenData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_blueData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			/setrgbcolor cvx
		}{
			_cyanData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_magentaData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_yellowData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_blackData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
	
			_spotColor{
				_rampSD begin
					/_rampSD cvx /begin cvx
	
					spot1 begin
						tintImage dup type /stringtype eq{
							/_ndx cvx /get cvx _d255- /exch cvx /get cvx
						}{
							dup null ne{
								name type /nametype ne{
									1 exch sub
								}if
							}if
						}ifelse
				 end
					/spot1 cvx /tintValue 3 -1 /roll cvx /put cvx
	
					spot2 begin
						tintImage dup type /stringtype eq{
							/_ndx cvx /get cvx _d255- /exch cvx /get cvx
						}{
							dup null ne{
								name type /nametype ne{
									1 exch sub
								}if
							}if
						}ifelse
				 end
					/spot2 cvx /tintValue 3 -1 /roll cvx /put cvx
					/end cvx
			 end
				/_rampSD cvx
				/nsetcustomcolor cvx
			}{
				/setcmykcolor cvx
			}ifelse
		}ifelse
	}{
		_blackData dup type /stringtype eq{
			/_ndx cvx /get cvx _d255 /exch cvx /get cvx
		}if
		
		_enabledSmoothShade{
			1 /exch cvx /sub cvx 0 0 0 4 -1 /roll cvx /setcmykcolor cvx
		}{
			 /setgray cvx
		}ifelse
	}ifelse
}def
/useRectImage{
	_subSampleOK _enabledSmoothShade not and{
		{
			mark
			0 1 dtransform atan cvi 90 mod 0 eq
			1 0 dtransform atan cvi 90 mod 0 eq
		} stopped
		{
			cleartomark
			false
		}
		{
			and exch pop
		} ifelse
	}{
		false
	}ifelse
}def
/linealImage{
	_noImage{
		rectImage
	}{
		_producingSeps{
				AGM_Gradient_Sep/AGM_Gradient_Sep_private get
				/rampImage get exec
		}{
			useRectImage{
				rectImage
			}{
				rampImage
			}ifelse
		}ifelse
	}ifelse
}def
/linealRamp{
	pushBSpace
	_ramp{
		linealImage
	}{
		linealFill
	}ifelse
	popBSpace
	/_rampIndex _rampIndex 1 sub pt
	_rampIndex 0 gt{
		getRampData
	}if
}def
/radialGrad{
	/_usingShells currentoverprint _producingSeps and _usingShells or pt
	/_firstShell true pt
	_enabledSmoothShade not{
		currentoverprint _producingSeps and{
			
			newpath
			clippath pathbbox 
			1 add 4 1 roll
			1 add 4 1 roll
			1 sub 4 1 roll
			1 sub 4 1 roll
			_bbox astore pop
			
			newpath
			_bbox 0 get _bbox 1 get moveto
			_bbox 2 get _bbox 1 get lineto
			_bbox 2 get _bbox 3 get lineto
			_bbox 0 get _bbox 3 get lineto
			closepath
			6 copy
			gsave _bUMatrix astore concat
			1 0 moveto 0 0 1 0 360 arc closepath
			eoclip fill
			popBSpace
		}{
			fill
		}ifelse
	}if
	pushBSpace
	
	_radHilite{
		_xHi _yHi _bUMatrix idtransform /_yHi xp /_xHi xp
		_rampPoint 1 lt{
			1 _rampPoint sub dup _xHi mul exch _yHi mul translate
		}if
	}if
	_rampIndex{
		radialRamp
		/_rampIndex _rampIndex 1 sub pt
		_rampIndex 0 gt{
			getRampData
		}if
	}repeat
	
	popBSpace
	
}def
/getNSamples{
	0 exch
	{
		dup type /stringtype eq{
			length exch pop exit
		}if
		pop
	}forall
	dup 0 eq{
		pop 1
	}if
}def
/getRampData{
	/_rampType gMark pt
	/_color _rampType 0 gt pt
	/_ccRGB _rampType 5 eq _rampType 6 eq or pt
	/_rgbRamp _rampType 4 eq _ccRGB or pt
	/_ccProcess _rampType 2 eq _rampType 3 eq or pt
	_producingSeps{
		_rampSD initSpotDict
		/_spotColor _ccProcess _ccRGB or pt
	}{
		/_spotColor false pt
	}ifelse
	/_ramp true pt
	100 div /_rampPoint xp
	100 div /_midPoint xp
	
	dup /_colorStyle xp
	_colorStyle 0 eq{ 
		2
	}{
		_colorStyle 1 eq{ 
			5
		}{
			_colorStyle 2 eq{
				8
			}{
				_colorStyle 3 eq{
					_producingSeps{
						_rampSD /spot1 get begin
							/name 3 index def
							/spot_K 4 index def
							/spot_Y 5 index def
							/spot_M 6 index def
							/spot_C 7 index def
					 end
					}if
					7
				}{
					_producingSeps{
						_rampSD/spot1 get begin
							/name 4 index def
							/spot_K 8 index def
							/spot_Y 9 index def
							/spot_M 10 index def
							/spot_C 11 index def
					 end
					}if
					11
				} ifelse
			}ifelse
		}ifelse
	}ifelse
	/_tmp xp
	_tmp index 100 div /_endPoint xp
	
	_gradType 1 eq{
		_tmp 1 add index 100 div /_midPoint xp
	}if
	
	_producingSeps{
		_tmp 2 add index /_nextColorStyle xp
		_nextColorStyle 3 eq{
			/_tmp _tmp 4 add pt
			_tmp index dup
			_rampSD/spot1 get /name get ne{
				_rampSD /spot2 get begin
					/name xd
					/spot_K _tmp 2 add index def
					/spot_Y _tmp 3 add index def
					/spot_M _tmp 4 add index def
					/spot_C _tmp 5 add index def
			 end
			}{
				pop
			}ifelse
		}if
		_nextColorStyle 4 eq{
			/_tmp _tmp 5 add pt
			_tmp index dup
			_rampSD/spot1 get /name get ne{
				_rampSD /spot2 get begin
					/name xd
					/spot_K _tmp 5 add index def
					/spot_Y _tmp 6 add index def
					/spot_M _tmp 7 add index def
					/spot_C _tmp 8 add index def
			 end
			}{
				pop
			}ifelse
		}if
	}if
	_rampType 3 eq _rampType 6 eq or{
		/_tint2Data gMark pt
	}if
	_ccProcess _ccRGB or{
		/_tint1Data gMark pt
	}if
	_rgbRamp{
		/_blueData gMark pt
		/_greenData gMark pt
		/_redData gMark pt
	}if
	
	_producingSeps{
		_ccProcess _ccRGB or{
			_rampType 3 eq _rampType 6 eq or{
				_rampSD /spot2 get begin
					/tintImage _gradType 0 eq{
						_tint2Data
					}{
						_tint1Data
					}ifelse
					def
					name null eq{
						/name /Black def
					}if
			 end
			}if
			_rampSD /spot1 get begin
				/tintImage _gradType 0 eq _rampType 2 eq or _rampType 5 eq or{
					_tint1Data
				}{
					_tint2Data
				}ifelse
				def
				_rampType 2 eq _rampType 5 eq or{
					name null eq{
						/name _rampSD/spot2 get /name get def
						/spot_C _rampSD/spot2 get /spot_C get def
						/spot_M _rampSD/spot2 get /spot_M get def
						/spot_Y _rampSD/spot2 get /spot_Y get def
						/spot_K _rampSD/spot2 get /spot_K get def
						_rampSD/spot2 get /name null put
					}if
				}{
					name null eq{
						/name /Black def
					}if
				}ifelse
		 end
		}if
	}if
	/_blackData gMark pt
	_rampType 0 gt{
		counttomark 4 add -3 roll
		/_yellowData xp
		/_magentaData xp
		/_cyanData xp
	}if
	_ramp{
		/_nSamples
			[
			_rampType 0 eq {_blackData}if
			_rampType 1 eq {_cyanData _magentaData _yellowData _blackData}if
			_rampType 2 eq {_cyanData _magentaData _yellowData _blackData _tint1Data}if
			_rampType 3 eq {_cyanData _magentaData _yellowData _blackData _tint1Data _tint2Data}if
			_rampType 4 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData}if
			_rampType 5 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data}if
			_rampType 6 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data _tint2Data}if
			] getNSamples pt
		_enabledSmoothShade not {/_ramp _nSamples 1 gt pt} if
	} if
	
	setCStop
}def
/rectImage{
	gsave
	/_sInc 1 pt
	/_bInc 1 _nSamples div pt
	/_nSubSamples _nSamples pt
	/_optimize false pt
		
	_subSampleOK{
		/_uRampLen 1 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt pt
		/_pChange _uRampLen 0 eq{0}{_nSamples _uRampLen div}ifelse pt
		
		_pChange .5 gt dup /_optimize xp{
			/_nSubSamples _uRampLen 2 div round cvi dup 1 le{pop 2}if pt
			/_bInc 1 _nSubSamples div pt
			/_sInc _nSamples 1 sub _nSubSamples 1 sub div pt
		}if
	}if
	0
	_nSubSamples
	[
	/dup cvx
	_optimize {
		/round cvx /cvi cvx
	} if
	/_ndx /exch cvx /pt cvx
	blendColor
	0 0 _bInc 1 /rectfill cvx
	_bInc 0 /translate cvx
	_sInc /add cvx
	] cvx
	bind
	repeat
	pop
	_spotColor{
		nsetcustomcolorend
	}if
	grestore
}def
/radialInit{
	/_nRadSamples _nSamples dup 0 eq{pop 1}if pt
	/_sInc -1 pt
	/_rampLen _rampPoint _endPoint sub pt
	/_bInc _rampLen _nSamples div neg pt
	/_optimize false pt
	_subSampleOK{
		/_uRampLen
			_rampLen 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
			0 _rampLen dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
			2 copy lt{
				exch
			}if pop
		pt
		/_pChange 
			_uRampLen 0 eq{
				0
			}{
				_nSamples _uRampLen div
			}ifelse
		pt
		_pChange .5 gt dup /_optimize xp{
			/_nRadSamples _uRampLen 2 div round cvi dup 1 le{pop 2}if pt
			/_bInc _rampLen _nRadSamples div neg pt
			/_sInc _nSamples 1 sub _nRadSamples 1 sub div neg pt
		}if
	}if
	_radHilite{
		/_xBCInc _xHi _rampLen mul _nRadSamples div pt
		/_yBCInc _yHi _rampLen mul _nRadSamples div pt
	}if
}def
/radialRamp{
	_enabledSmoothShade{
		fillRamp
	}{
		/_saveMatrix _saveMatrix currentmatrix def
		
		radialInit
	
		%
		%
		true
		_producingSeps _rgbRamp not and{
			_nSamples 1 gt{ 
				pop
				/_ndx 0 pt
				[blendColor] cvx exec
				currentInkN
				/_ndx _nSamples 1 sub pt
				[blendColor] cvx exec
				currentInkN
				or
			}if
		}if
		{
			_rampPoint
		
			_nSamples 1 sub
		
			_nRadSamples 
			[
				/dup cvx
		
				_optimize{
					/round cvx /cvi cvx
				}if
		
				/_ndx /exch cvx /pt cvx
				
				_usingShells{
					/_firstShell cvx{
						/_firstShell false pt
					}{
						0 0 3 index 360 0 arcn fill
					}/ifelse cvx
				}if
		
				blendColor
		
				_usingShells{
					0 0 3 /index cvx 0 360 /arc cvx 
				}{
					0 0 3 /index cvx 0 360 /arc cvx /fill cvx
				}ifelse
		
				/exch cvx _bInc /add cvx /exch cvx
		
				_sInc /add cvx
		
				_radHilite{
					_xBCInc _yBCInc /translate cvx
				}if
			] cvx bind
			repeat
		
			pop pop
		}{
			_usingShells{
				0 0 _rampPoint 360 0 arcn fill
			}if
		}ifelse
	
		_saveMatrix setmatrix
		
		_radHilite{
			_xHi _rampLen mul _yHi _rampLen mul translate
		}if
		
		_usingShells _rampIndex 1 eq and{
			fill
		}if
	
		_spotColor{
			nsetcustomcolorend
		}if
	}ifelse
}def
end
end
defaultpacking setpacking
%%EndResource
%%BeginProcSet: Adobe_ColorImage_AI6 1.3 0
userdict /Adobe_ColorImage_AI6 known not
{
	userdict /Adobe_ColorImage_AI6 53 dict put 
} if
userdict /Adobe_ColorImage_AI6 get begin
/initialize { 
	Adobe_ColorImage_AI6 begin
	Adobe_ColorImage_AI6 {
		dup type /arraytype eq {
			dup xcheck {
				bind
			} if
		} if
		pop pop
	} forall
} def
/terminate { end } def
currentdict /Adobe_ColorImage_AI6_Vars known not {
	/Adobe_ColorImage_AI6_Vars 41 dict def
} if
Adobe_ColorImage_AI6_Vars begin
	/plateindex -1 def
	/_newproc null def
	/_proc1 null def
	/_proc2 null def
	/sourcearray 4 array def
	/_ptispace null def
	/_ptiname null def
	/_pti0 0 def
	/_pti1 0 def
	/_ptiproc null def
	/_ptiscale 0 def
	/_pticomps 0 def
	/_ptibuf 0 string def
	/_gtigray 0 def
	/_cticmyk null def
	/_rtirgb null def
	/XIEnable true def
	/XIType 0 def
	/XIEncoding 0 def
	/XICompression 0 def
	/XIChannelCount 0 def
	/XIBitsPerPixel 0 def
	/XIImageHeight 0 def
	/XIImageWidth 0 def
	/XIImageMatrix null def
	/XIRowBytes 0 def
	/XIFile null def
	/XIBuffer1 null def
	/XIBuffer2 null def
	/XIBuffer3 null def
	/XIDataProc null def
	/XIColorSpace /DeviceGray def
	/XIColorValues 0 def
	/XIPlateList false def
end
/ci6colorimage /colorimage where {/colorimage get}{null} ifelse def
/ci6image systemdict /image get def
/ci6curtransfer systemdict /currenttransfer get def
/ci6curoverprint /currentoverprint where {/currentoverprint get}{{_of}} ifelse def
/ci6foureq {
	4 index ne {
		pop pop pop false
	}{
		4 index ne {
			pop pop false
		}{
			4 index ne {
				pop false
			}{
				4 index eq
			} ifelse
		} ifelse
	} ifelse
} def
/ci6testplate {
	Adobe_ColorImage_AI6_Vars begin
		/plateindex -1 def
		/setcmykcolor where {
			pop
			gsave
			1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
			grestore
			1 0 0 0 ci6foureq { 
				/plateindex 0 def
			}{
				0 1 0 0 ci6foureq { 
					/plateindex 1 def
				}{
					0 0 1 0 ci6foureq {
						/plateindex 2 def
					}{
						0 0 0 1 ci6foureq { 
							/plateindex 3 def
						}{
							0 0 0 0 ci6foureq {
								/plateindex 5 def
							} if
						} ifelse
					} ifelse
				} ifelse
			} ifelse
			pop pop pop pop
		} if
		plateindex
 end
} def
/ci6concatprocs {
	/packedarray where {
		pop dup type /packedarraytype eq 2 index type
		/packedarraytype eq or
	}{
		false
	} ifelse
	{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		_proc1 aload pop
		_proc2 aload pop
		_proc1 length
		_proc2 length add
		packedarray cvx
	}{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		/_newproc _proc1 length _proc2 length add array def
		_newproc 0 _proc1 putinterval
		_newproc _proc1 length _proc2 putinterval
		_newproc cvx
	} ifelse
} def
/ci6istint {
	type /arraytype eq 
} def
/ci6isspot {
	dup type /arraytype eq {
		dup length 1 sub get /Separation eq
	}{
		pop false
	} ifelse
} def
/ci6spotname {
	dup ci6isspot {dup length 2 sub get}{pop ()} ifelse
} def
/ci6altspace {
	aload pop pop pop ci6colormake
} def
/ci6numcomps {
	dup /DeviceGray eq {
		pop 1
	}{
		dup /DeviceRGB eq {
			pop 3
		}{
			/DeviceCMYK eq {
				4
			}{
				1
			} ifelse
		} ifelse
	} ifelse
} def
/ci6marksplate {
	dup /DeviceGray eq {
		pop plateindex 3 eq
	}{
		dup /DeviceRGB eq {
			pop plateindex 5 ne
		}{
			dup /DeviceCMYK eq {
				pop plateindex 5 ne
			}{
				dup ci6isspot {
					/findcmykcustomcolor where {
						pop
						dup length 2 sub get
						0.1 0.1 0.1 0.1 5 -1 roll
						findcmykcustomcolor 1 setcustomcolor
						systemdict /currentgray get exec
						1 ne
					}{
						pop plateindex 5 ne
					} ifelse
				}{
					pop plateindex 5 ne
				} ifelse
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colormake {
	dup ci6numcomps
	exch 1 index 2 add 1 roll
	dup 1 eq {pop}{array astore} ifelse
	exch
} def
/ci6colorexpand {
	dup ci6spotname exch
	dup ci6istint {
		ci6altspace
		exch 4 1 roll
	}{
		1 3 1 roll
	} ifelse
} def
/ci6colortint {
	dup /DeviceGray eq {
		3 1 roll 1 exch sub mul 1 exch sub exch
	}{
		dup /DeviceRGB eq {
			3 1 roll {1 exch sub 1 index mul 1 exch sub exch} forall pop 3 array astore exch
		}{
			dup /DeviceCMYK eq {
				3 1 roll {1 index mul exch} forall pop 4 array astore exch
			}{
				3 1 roll mul exch
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colortocmyk {
	dup /DeviceGray eq {
		pop 1 exch sub 0 0 0 4 -1 roll 4 array astore
	}{
		dup /DeviceRGB eq {
			pop aload pop _rgbtocmyk 4 array astore
		}{
			dup /DeviceCMYK eq {
				pop
			}{
				ci6altspace ci6colortint ci6colortocmyk
			} ifelse
		} ifelse
	} ifelse
} def
/ci6makeimagedict {
	7 dict begin
		/ImageType 1 def
		/Decode exch def
		/DataSource exch def
		/ImageMatrix exch def
		/BitsPerComponent exch def
		/Height exch def
		/Width exch def
	currentdict end
} def
/ci6stringinvert {
	0 1 2 index length 1 sub {
		dup 2 index exch get 255 exch sub 2 index 3 1 roll put
	} for
} def
/ci6stringknockout {
	0 1 2 index length 1 sub {
		255 2 index 3 1 roll put
	} for
} def
/ci6stringapply {
	0 1 4 index length 1 sub {
		dup
		4 index exch get
		3 index 3 1 roll
		3 index exec
	} for
	pop exch pop
} def
/ci6walkrgbstring {
	0 3 index
	dup length 1 sub 0 3 3 -1 roll {
		3 getinterval {} forall
		5 index exec
		3 index
	} for
	
	 5 {pop} repeat
} def
/ci6walkcmykstring
{
	0 3 index
	dup length 1 sub 0 4 3 -1 roll {
		4 getinterval {} forall
		
		6 index exec
		
		3 index
		
	} for
	
	5 { pop } repeat
	
} def
/ci6putrgbtograystr
{
	.11 mul exch
	
	.59 mul add exch
	
	.3 mul add
	
	cvi 3 copy put
	
	pop 1 add
} def
/ci6putcmyktograystr
{
	exch .11 mul add
	
	exch .59 mul add
	
	exch .3 mul add
	
	dup 255 gt { pop 255 } if
	
	255 exch sub cvi 3 copy put
	
	pop 1 add
} def
/ci6rgbtograyproc {	
	Adobe_ColorImage_AI6_Vars begin 
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putrgbtograystr load exch
		ci6walkrgbstring
 end
} def
/ci6cmyktograyproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putcmyktograystr load exch
		ci6walkcmykstring
 end
} def
/ci6separatecmykproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		
		XIBuffer3
		
		0 2 index
		
		plateindex 4 2 index length 1 sub {
			get 255 exch sub
			
			3 copy put pop 1 add
			
			2 index
		} for
		pop pop exch pop
 end
} def
	
/ci6compositeimage {
	dup 1 eq {
		pop pop image
	}{
		/ci6colorimage load null ne {
			ci6colorimage
		}{
			3 1 roll pop
			sourcearray 0 3 -1 roll put
			3 eq {/ci6rgbtograyproc}{/ci6cmyktograyproc} ifelse load
			image
		} ifelse
	} ifelse
} def
/ci6knockoutimage {
	gsave
	0 ci6curtransfer exec 1 ci6curtransfer exec
	eq {
		0 ci6curtransfer exec 0.5 lt
	}{
		0 ci6curtransfer exec 1 ci6curtransfer exec gt
	} ifelse
	{{pop 0}}{{pop 1}} ifelse
	systemdict /settransfer get exec
	ci6compositeimage
	grestore
} def
/ci6drawimage {
	ci6testplate -1 eq {
		pop ci6compositeimage
	}{
		dup type /arraytype eq {
			dup length plateindex gt {plateindex get}{pop false} ifelse
		}{
			{
				true
			}{
				dup 1 eq {plateindex 3 eq}{plateindex 3 le} ifelse
			} ifelse
		} ifelse
		{
			dup 1 eq {
				pop pop ci6image
			}{
				dup 3 eq {
					ci6compositeimage
				}{
					pop pop
					sourcearray 0 3 -1 roll put
					/ci6separatecmykproc load
					ci6image
				} ifelse
			} ifelse
		}{
			ci6curoverprint {
				7 {pop} repeat
			}{
				ci6knockoutimage
			} ifelse
		} ifelse
	} ifelse
} def
/ci6proctintimage {
	/_ptispace exch store /_ptiname exch store /_pti1 exch store /_pti0 exch store /_ptiproc exch store
	/_pticomps _ptispace ci6numcomps store
	/_ptiscale _pti1 _pti0 sub store
	level2? {
		_ptiname length 0 gt version cvr 2012 ge and {
			[/Separation _ptiname _ptispace {_ptiproc}] setcolorspace
			[_pti0 _pti1] ci6makeimagedict ci6image
		}{
			[/Indexed _ptispace 255 {255 div _ptiscale mul _pti0 add _ptiproc}] setcolorspace
			[0 255] ci6makeimagedict ci6image
		} ifelse
	}{
		_pticomps 1 eq {
			{
				dup
				{
					255 div _ptiscale mul _pti0 add _ptiproc 255 mul cvi put
				} ci6stringapply
			} ci6concatprocs ci6image
		}{
			{
				dup length _pticomps mul dup _ptibuf length ne {/_ptibuf exch string store}{pop} ifelse
				_ptibuf {
					exch _pticomps mul exch 255 div _ptiscale mul _pti0 add _ptiproc
					_pticomps 2 add -2 roll
					_pticomps 1 sub -1 0 {
						1 index add 2 index exch
						5 -1 roll
						255 mul cvi put
					} for
					pop pop
				} ci6stringapply
			} ci6concatprocs false _pticomps
			/ci6colorimage load null eq {7 {pop} repeat}{ci6colorimage} ifelse
		} ifelse
	} ifelse
} def
/ci6graytintimage {
	/_gtigray 5 -1 roll store
	{1 _gtigray sub mul 1 exch sub} 4 1 roll
	/DeviceGray ci6proctintimage
} def
/ci6cmyktintimage {
	/_cticmyk 5 -1 roll store
	{_cticmyk {1 index mul exch} forall pop} 4 1 roll
	/DeviceCMYK ci6proctintimage
} def
/ci6rgbtintimage {
	/_rtirgb 5 -1 roll store
	{_rtirgb {1 exch sub 1 index mul 1 exch sub exch} forall pop} 4 1 roll
	/DeviceRGB ci6proctintimage
} def
/ci6tintimage {
	ci6testplate -1 eq {
		ci6colorexpand
		3 -1 roll 5 -1 roll {0}{0 exch} ifelse 4 2 roll
		dup /DeviceGray eq {
			pop ci6graytintimage
		}{
			dup /DeviceRGB eq {
				pop ci6rgbtintimage
			}{
				pop ci6cmyktintimage
			} ifelse
		} ifelse
	}{
		dup ci6marksplate {
			plateindex 5 lt {
				ci6colortocmyk plateindex get
				dup 0 eq ci6curoverprint and {
					7 {pop} repeat
				}{
					1 exch sub
					exch {1 0}{0 1} ifelse () ci6graytintimage
				} ifelse
			}{
				pop exch {0}{0 exch} ifelse 0 3 1 roll () ci6graytintimage
			} ifelse
		}{
			ci6curoverprint {
				8 {pop} repeat
			}{
				pop pop pop
				{pop 1} 0 1 () /DeviceGray ci6proctintimage
			} ifelse
		} ifelse
	} ifelse
} def
/XINullImage {
} def
/XIImageMask {
	XIImageWidth XIImageHeight false
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	imagemask
} def
/XIImageTint {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	XIType 3 eq XIColorValues XIColorSpace ci6tintimage
} def
/XIImage {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	false XIChannelCount XIPlateList ci6drawimage
} def
/XG {
	pop pop
} def
/XF {
	13 {pop} repeat
} def
/Xh {
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		/XIImageMatrix exch def
		0 0 moveto
		XIImageMatrix concat
		XIImageWidth XIImageHeight scale
		
		/_lp /null ddef
		_fc
		/_lp /imagemask ddef
 end
} def
/XH {
	Adobe_ColorImage_AI6_Vars begin
		grestore
 end
} def
/XIEnable {
	Adobe_ColorImage_AI6_Vars /XIEnable 3 -1 roll put
} def
/XC {
	Adobe_ColorImage_AI6_Vars begin
		ci6colormake
		/XIColorSpace exch def
		/XIColorValues exch def
 end
} def
/XIPlates {
	Adobe_ColorImage_AI6_Vars begin
		/XIPlateList exch def
 end
} def
/XI
{
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		cvi dup
		256 idiv /XICompression exch store
		256 mod /XIEncoding exch store
		pop pop
		/XIChannelCount exch def
		/XIBitsPerPixel exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		pop pop pop pop
		/XIImageMatrix exch def
		XIBitsPerPixel 1 eq {
			XIImageWidth 8 div ceiling cvi
		}{
			XIImageWidth XIChannelCount mul
		} ifelse
		/XIRowBytes exch def
		XIEnable {
			/XIBuffer3 XIImageWidth string def
			XICompression 0 eq {
				/XIBuffer1 XIRowBytes string def
				XIEncoding 0 eq {
					{currentfile XIBuffer1 readhexstring pop}
				}{
					{currentfile XIBuffer1 readstring pop}
				} ifelse
			}{
				/XIBuffer1 256 string def
				/XIBuffer2 XIRowBytes string def
				{currentfile XIBuffer1 readline pop (%) anchorsearch {pop} if}
				/ASCII85Decode filter /DCTDecode filter
				/XIFile exch def
				{XIFile XIBuffer2 readstring pop}
			} ifelse
			/XIDataProc exch def
			
			XIType 1 ne {
				0 setgray
			} if
			XIType 1 eq {
				XIImageMask
			}{
				XIType 2 eq XIType 3 eq or {
					XIImageTint
				}{
					XIImage
				} ifelse
			} ifelse
		}{
			XINullImage
		} ifelse
		/XIPlateList false def
		grestore
 end
} def
end
%%EndProcSet
%%BeginResource: procset Adobe_Illustrator_AI5 1.3 0
%%Title: (Adobe Illustrator (R) Version 8.0 Full Prolog)
%%Version: 1.3 0
%%CreationDate: (3/7/1994) ()
%%Copyright: ((C) 1987-1998 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5_vars 112 dict dup begin
put
/_?cmyk false def
/_eo false def
/_lp /none def
/_pf
{
} def
/_ps
{
} def
/_psf
{
} def
/_pss
{
} def
/_pjsf
{
} def
/_pjss
{
} def
/_pola 0 def
/_doClip 0 def
/cf currentflat def
/_lineorientation 0 def
/_charorientation 0 def
/_yokoorientation 0 def
/_tm matrix def
/_renderStart
[
/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0
] def
/_renderEnd
[
null null null null /i1 /i1 /i1 /i1
] def
/_render -1 def
/_shift [0 0] def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading
[
0 0
] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fontSize 0 def
/_fontAscent 0 def
/_fontDescent 0 def
/_fontHeight 0 def
/_fontRotateAdjust 0 def
/Ss 256 string def
Ss 0 (fonts/) putinterval
/_cnt 0 def
/_scale [1 1] def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_hfname 100 string def
/_hffound false def
/Tx
{
} def
/Tj
{
} def
/CRender
{
} def
/_AI3_savepage
{
} def
/_gf null def
/_cf 4 array def
/_rgbf 3 array def
/_if null def
/_of false def
/_fc
{
} def
/_gs null def
/_cs 4 array def
/_rgbs 3 array def
/_is null def
/_os false def
/_sc
{
} def
/_pd 1 dict def
/_ed 15 dict def
/_pm matrix def
/_fm null def
/_fd null def
/_fdd null def
/_sm null def
/_sd null def
/_sdd null def
/_i null def
/_lobyte 0 def
/_hibyte 0 def
/_cproc null def
/_cscript 0 def
/_hvax 0 def
/_hvay 0 def
/_hvwb 0 def
/_hvcx 0 def
/_hvcy 0 def
/_bitfont null def
/_bitlobyte 0 def
/_bithibyte 0 def
/_bitkey null def
/_bitdata null def
/_bitindex 0 def
/discardSave null def
/buffer 256 string def
/beginString null def
/endString null def
/endStringLength null def
/layerCnt 1 def
/layerCount 1 def
/perCent (%) 0 get def
/perCentSeen? false def
/newBuff null def
/newBuffButFirst null def
/newBuffLast null def
/clipForward? false def
end
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 100 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/initialize
{
	Adobe_Illustrator_AI5 dup begin
	Adobe_Illustrator_AI5_vars begin
	/_aicmykps where {pop /_?cmyk _aicmykps def}if
	discardDict
	{
		bind pop pop
	} forall
	dup /nc get begin
	{
		dup xcheck 1 index type /operatortype ne and
		{
			bind
		} if
		pop pop
	} forall
 end
	newpath
} def
/terminate
{
 end
 end
} def
/_
null def
/ddef
{
	Adobe_Illustrator_AI5_vars 3 1 roll put
} def
/xput
{
	dup load dup length exch maxlength eq
	{
		dup dup load dup
		length 2 mul dict copy def
	} if
	load begin
	def
 end
} def
/npop
{
	{
		pop
	} repeat
} def
/hswj
{
	dup stringwidth 3 2 roll
	{
		_hvwb eq { exch _hvcx add exch _hvcy add } if
		exch _hvax add exch _hvay add
	} cforall
} def
/vswj
{
	0 0 3 -1 roll
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			dup cstring stringwidth 5 2 roll
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			4 -1 roll sub exch
			3 -1 roll sub exch
		}
		{
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			_fontHeight sub
		} ifelse
	} cforall
} def
/swj
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hswj } { vswj } ifelse
} def
/sw
{
	0 0 0 6 3 roll swj
} def
/vjss
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index setmatrix stroke
			grestore
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			gsave
			2 index false charpath
			6 index setmatrix stroke
			grestore
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjss
{
	4 1 roll
	{
		dup cstring
		gsave
		false charpath currentpoint
		5 index setmatrix stroke
		grestore
		moveto
		_sp eq
		{
			5 index 5 index rmoveto
		} if
		2 copy rmoveto
	} cforall
	6 npop
} def
/jss
{
	_lineorientation 0 eq { hjss } { vjss } ifelse
} def
/ss
{
	0 0 0 7 3 roll jss
} def
/vjsp
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			false charpath
            currentpoint
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			2 index false charpath
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjsp
{
    4 1 roll
    {
        dup cstring
        false charpath
        _sp eq
        {
            5 index 5 index rmoveto
        } if
        2 copy rmoveto
    } cforall
    6 npop
} def
/jsp
{
	matrix currentmatrix
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/sp
{
    matrix currentmatrix
    0 0 0 7 3 roll
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/pl
{
	transform
	0.25 sub round 0.25 add exch
	0.25 sub round 0.25 add exch
	itransform
} def
/setstrokeadjust where
{
	pop true setstrokeadjust
	/c
	{
		curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y
	{
		2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		lineto
	} def
	/L
	/l load def
	/m
	{
		moveto
	} def
}
{
	/c
	{
		pl curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
		pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		pl lineto
	} def
	/L
	/l load def
	/m
	{
		pl moveto
	} def
} ifelse
/d
{
	setdash
} def
/cf
{
} def
/i
{
	dup 0 eq
	{
		pop cf
	} if
	setflat
} def
/j
{
	setlinejoin
} def
/J
{
	setlinecap
} def
/M
{
	setmiterlimit
} def
/w
{
	setlinewidth
} def
/XR
{
	0 ne
	/_eo exch ddef
} def
/H
{
} def
/h
{
	closepath
} def
/N
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			_eo {eoclip} {clip} ifelse /_doClip 0 ddef
		} if
		newpath
	}
	{
		/CRender
		{
			N
		} ddef
	} ifelse
} def
/n
{
	N
} def
/F
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc
			/_doClip 0 ddef
		}
		{
			_pf
		} ifelse
	}
	{
		/CRender
		{
			F
		} ddef
	} ifelse
} def
/f
{
	closepath
	F
} def
/S
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			_ps
		} ifelse
	}
	{
		/CRender
		{
			S
		} ddef
	} ifelse
} def
/s
{
	closepath
	S
} def
/B
{
	_pola 0 eq
	{
		_doClip 1 eq
		gsave F grestore
		{
			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			S
		} ifelse
	}
	{
		/CRender
		{
			B
		} ddef
	} ifelse
} def
/b
{
	closepath
	B
} def
/W
{
	/_doClip 1 ddef
} def
/*
{
	count 0 ne
	{
		dup type /stringtype eq
		{
			pop
		} if
	} if
	newpath
} def
/u
{
} def
/U
{
} def
/q
{
	_pola 0 eq
	{
		gsave
	} if
} def
/Q
{
	_pola 0 eq
	{
		grestore
	} if
} def
/*u
{
	_pola 1 add /_pola exch ddef
} def
/*U
{
	_pola 1 sub /_pola exch ddef
	_pola 0 eq
	{
		CRender
	} if
} def
/D
{
	pop
} def
/*w
{
} def
/*W
{
} def
/`
{
	/_i save ddef
	clipForward?
	{
		nulldevice
	} if
	6 1 roll 4 npop
	concat pop
	userdict begin
	/showpage
	{
	} def
	0 setgray
	0 setlinecap
	1 setlinewidth
	0 setlinejoin
	10 setmiterlimit
	[] 0 setdash
	/setstrokeadjust where {pop false setstrokeadjust} if
	newpath
	0 setgray
	false setoverprint
} def
/~
{
 end
	_i restore
} def
/_rgbtocmyk
{
	3
	{
		1 exch sub 3 1 roll
	} repeat
	3 copy 1 4 1 roll
	3
	{
		3 index 2 copy gt
		{
			exch
		} if
		pop 4 1 roll
	} repeat
	pop pop pop
	4 1 roll
	3
	{
		3 index sub
		3 1 roll
	} repeat
	4 -1 roll
} def
/setrgbfill
{
	_rgbf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_rgbf aload pop setrgbcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/setrgbstroke
{
	_rgbs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_rgbs aload pop setrgbcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/O
{
	0 ne
	/_of exch ddef
	/_lp /none ddef
} def
/R
{
	0 ne
	/_os exch ddef
	/_lp /none ddef
} def
/g
{
	/_gf exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/G
{
	/_gs exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/k
{
	_cf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_cf aload pop setcmykcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/K
{
	_cs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_cs aload pop setcmykcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xa
{
	_?cmyk {
		3 npop k
	}{
		setrgbfill 4 npop
	} ifelse
} def
/XA
{
	_?cmyk {
		3 npop K
	}{
		setrgbstroke 4 npop
	} ifelse
} def
/Xs
{
	/_gf exch ddef
	5 npop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setAIseparationgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XS
{
	/_gs exch ddef
	5 npop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setAIseparationgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xx
{
	exch
	/_gf exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XX
{
	exch
	/_gs exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/x
{
	/_gf exch ddef
	findcmykcustomcolor
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/X
{
	/_gs exch ddef
	findcmykcustomcolor
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/XK
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		K
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		XA
	} ifelse
} def
/Xk
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		k
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		Xa
	} ifelse
} def
/A
{
	pop
} def
/annotatepage
{
userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse
} def
/XT {
	pop pop
} def
/Xt {
	pop
} def
/discard
{
	save /discardSave exch store
	discardDict begin
	/endString exch store
	gt38?
	{
		2 add
	} if
	load
	stopped
	pop
 end
	discardSave restore
} bind def
userdict /discardDict 7 dict dup begin
put
/pre38Initialize
{
	/endStringLength endString length store
	/newBuff buffer 0 endStringLength getinterval store
	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store
	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store
} def
/shiftBuffer
{
	newBuff 0 newBuffButFirst putinterval
	newBuffLast 0
	currentfile read not
	{
	stop
	} if
	put
} def
0
{
	pre38Initialize
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff endString eq
			{
				cleartomark stop
			} if
			shiftBuffer
		} loop
	}
	{
	stop
	} ifelse
} def
1
{
	pre38Initialize
	/beginString exch store
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff beginString eq
			{
				/layerCount dup load 1 add store
			}
			{
				newBuff endString eq
				{
					/layerCount dup load 1 sub store
					layerCount 0 eq
					{
						cleartomark stop
					} if
				} if
			} ifelse
			shiftBuffer
		} loop
	} if
} def
2
{
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			endString eq {
				cleartomark stop
			} if
		}ifelse
	} loop
} def
3
{
	/beginString exch store
	/layerCnt 1 store
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			dup beginString eq
			{
				pop /layerCnt dup load 1 add store
			}
			{
				endString eq
				{
					layerCnt 1 eq
					{
						cleartomark stop
					}
					{
						/layerCnt dup load 1 sub store
					} ifelse
				} if
			} ifelse
		}ifelse
	} loop
} def
end
userdict /clipRenderOff 15 dict dup begin
put
{
	/n /N /s /S /f /F /b /B
}
{
	{
		_doClip 1 eq
		{
			/_doClip 0 ddef _eo {eoclip} {clip} ifelse
		} if
		newpath
	} def
} forall
/Tr /pop load def
/Bb {} def
/BB /pop load def
/Bg {12 npop} def
/Bm {6 npop} def
/Bc /Bm load def
/Bh {4 npop} def
end
/Lb
{
	6 npop
	7 2 roll
	5 npop
	0 eq
	{
		0 eq
		{
			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard
		}
		{
			
			/clipForward? true def
			
			/Tx /pop load def
			/Tj /pop load def
			
			currentdict end clipRenderOff begin begin
		} ifelse
	}
	{
		0 eq
		{
			save /discardSave exch store
		} if
	} ifelse
} bind def
/LB
{
	discardSave dup null ne
	{
		restore
	}
	{
		pop
		clipForward?
		{
			currentdict
		 end
		 end
		 begin
					
			/clipForward? false ddef
		} if
	} ifelse
} bind def
/Pb
{
	pop pop
	0 (%AI5_EndPalette) discard
} bind def
/Np
{
	0 (%AI5_End_NonPrinting--) discard
} bind def
/Ln /pop load def
/Ap
/pop load def
/Ar
{
	72 exch div
	0 dtransform dup mul exch dup mul add sqrt
	dup 1 lt
	{
		pop 1
	} if
	setflat
} def
/Mb
{
	q
} def
/Md
{
} def
/MB
{
	Q
} def
/nc 4 dict def
nc begin
/setgray
{
	pop
} bind def
/setcmykcolor
{
	4 npop
} bind def
/setrgbcolor
{
	3 npop
} bind def
/setcustomcolor
{
	2 npop
} bind def
currentdict readonly pop
end
/XP
{
	4 npop
} bind def
/XD
{
	pop
} bind def
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_pattern_AI5 1.1 0
%%Title: (Adobe Illustrator (R) Version 5.0 Pattern Operators)
%%Version: 1.1 0
%%CreationDate: (03/26/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 95 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/@
{
} def
/&
{
} def
/dp
{
	dup null eq
	{
		pop
		_dp 0 ne
		{
			0 1 _dp 1 sub _dl mod
			{
				_da exch get 3 get
			} for
			_dp 1 sub _dl mod 1 add packedarray
			_da 0 get aload pop 8 -1 roll 5 -1 roll pop 4 1 roll
			definepattern pop
		} if
	}
	{
		_dp 0 ne _dp _dl mod 0 eq and
		{
			null dp
		} if
		7 packedarray _da exch _dp _dl mod exch put
		_dp _dl mod _da 0 get 4 get 2 packedarray
		/_dp _dp 1 add def
	} ifelse
} def
/E
{
	_ed begin
	dup 0 get type /arraytype ne
	{
		0
		{
			dup 1 add index type /arraytype eq
			{
				1 add
			}
			{
				exit
			} ifelse
		} loop
		array astore
	} if
	/_dd exch def
	/_ury exch def
	/_urx exch def
	/_lly exch def
	/_llx exch def
	/_n exch def
	/_y 0 def
	/_dl 4 def
	/_dp 0 def
	/_da _dl array def
	0 1 _dd length 1 sub
	{
		/_d exch _dd exch get def
		0 2 _d length 2 sub
		{
			/_x exch def
			/_c false def
			/_r _d _x 1 add get cvlit def
			_r _ ne
			{
				_urx _llx sub _ury _lly sub
				[
				1 0 0 1 0 0
				]
				[
				/save cvx
				_llx neg _lly neg /translate cvx
				_c
				{
					nc /begin cvx
				} if
				_r dup type /stringtype eq
				{
					cvx
				}
				{
					{
						exec
					} /forall cvx
				} ifelse
				_c
				{
					/end cvx
				} if
				/restore cvx
				] cvx
				/_fn 12 _n length add string def
				_y _fn cvs pop
				/_y _y 1 add def
				_fn 12 _n putinterval
				_fn _c false dp
				_d exch _x 1 add exch put
			} if
		} for
	} for
	null dp
	_n _dd /_pd
 end
	xput
} def
/fc
{
	_fm dup concatmatrix pop
} def
/p
{
	/_fm exch ddef
	9 -2 roll _pm translate fc
	7 -2 roll _pm scale fc
	5 -1 roll _pm rotate fc
	4 -2 roll exch 0 ne
	{
		dup _pm rotate fc
		1 -1 _pm scale fc
		neg _pm rotate fc
	}
	{
		pop
	} ifelse
	dup _pm rotate fc
	exch dup sin exch cos div 1 0 0 1 0 6 2 roll
	_pm astore fc
	neg _pm rotate fc
	_pd exch get /_fdd exch ddef
	/_pf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					patternfill
				}
				{
					pop
					fill
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		newpath
	} ddef
	/_psf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					9 copy 6 npop patternashow
				}
				{
					pop
					6 copy 3 npop hvashow
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		sw rmoveto
	} ddef
	/_pjsf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					12 copy 6 npop patternawidthshow
				}
				{
					pop 9 copy 3 npop hvawidthshow
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		swj rmoveto
	} ddef
	/_lp /none ddef
} def
/sc
{
	_sm dup concatmatrix pop
} def
/P
{
	/_sm exch ddef
	9 -2 roll _pm translate sc
	7 -2 roll _pm scale sc
	5 -1 roll _pm rotate sc
	4 -2 roll exch 0 ne
	{
		dup _pm rotate sc
		1 -1 _pm scale sc
		neg _pm rotate sc
	}
	{
		pop
	} ifelse
	dup _pm rotate sc
	exch dup sin exch cos div 1 0 0 1 0 6 2 roll
	_pm astore sc
	neg _pm rotate sc
	_pd exch get /_sdd exch ddef
	/_ps
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					patternstroke
				}
				{
					pop stroke
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		newpath
	} ddef
	/_pss
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					10 copy 6 npop patternashowstroke
				}
				{
					pop 7 copy 3 npop ss
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		pop sw rmoveto
	} ddef
	/_pjss
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					13 copy 6 npop patternawidthshowstroke
				}
				{
					pop 10 copy 3 npop jss
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		pop swj rmoveto
	} ddef
	/_lp /none ddef
} def
end
userdict /Adobe_pattern_AI5 18 dict dup begin
put
/initialize
{
	/definepattern where
	{
		pop
		pop pop
	}
	{
	 begin
	 begin
		Adobe_pattern_AI5 begin
		Adobe_pattern_AI5
		{
			dup xcheck
			{
				bind
			} if
			pop pop
		} forall
		mark
		cachestatus 7 1 roll pop pop pop pop exch pop exch
		{
			{
				10000 add
				dup 2 index gt
				{
					exit
				} if
				dup setcachelimit
			} loop
		} stopped
		cleartomark
	 end 	
		
	 end
	 end
		
		Adobe_pattern_AI5 begin
	} ifelse
} def
/terminate
{
	currentdict Adobe_pattern_AI5 eq
	{
	 end
	} if
} def
errordict
/nocurrentpoint
{
	pop
	stop
} put
errordict
/invalidaccess
{
	pop
	stop
} put
/patternencoding
256 array def
0 1 255
{
	patternencoding exch ( ) 2 copy exch 0 exch put cvn put
} for
/definepattern
{
	17 dict begin
	/uniform exch def
	/cache exch def
	/key exch def
	/procarray exch def
	/mtx exch matrix invertmatrix def
	/height exch def
	/width exch def
	/ctm matrix currentmatrix def
	/ptm matrix def
	/str 32 string def
	/slice 9 dict def
	slice /s 1 put
	slice /q 256 procarray length div sqrt floor cvi put
	slice /b 0 put
	/FontBBox
	[
	0 0 0 0
	] def
	/FontMatrix mtx matrix copy def
	/Encoding patternencoding def
	/FontType 3 def
	/BuildChar
	{
		exch
	 begin
		/setstrokeadjust where {pop true setstrokeadjust} if
		slice begin
		dup q dup mul mod s idiv /i exch def
		dup q dup mul mod s mod /j exch def
		q dup mul idiv procarray exch get
		/xl j width s div mul def
		/xg j 1 add width s div mul def
		/yl i height s div mul def
		/yg i 1 add height s div mul def
		uniform
		{
			1 1
		}
		{
			width 0 dtransform
			dup mul exch dup mul add sqrt dup 1 add exch div
			0 height dtransform
			dup mul exch dup mul add sqrt dup 1 add exch div
		} ifelse
		width 0 cache
		{
			xl 4 index mul yl 4 index mul xg 6 index mul yg 6 index mul
			setcachedevice
		}
		{
			setcharwidth
		} ifelse
		gsave
		scale
		newpath
		xl yl moveto
		xg yl lineto
		xg yg lineto
		xl yg lineto
		closepath
		clip
		newpath
	 end
	 end
		exec
		grestore
	} def
	key currentdict definefont
 end
} def
/patterncachesize
{
	gsave
	newpath
	0 0 moveto
	width 0 lineto
	width height lineto
	0 height lineto
	closepath
	patternmatrix setmatrix
	pathbbox
	exch ceiling 4 -1 roll floor sub 3 1 roll
	ceiling exch floor sub
	mul 1 add
	grestore
} def
/patterncachelimit
{
	cachestatus 7 1 roll 6 npop 8 mul
} def
/patternpath
{
	exch dup begin
	setfont
	ctm setmatrix
	concat
	slice exch /b exch slice /q get dup mul mul put
	FontMatrix concat
	uniform
	{
		width 0 dtransform round width div exch round width div exch
		0 height dtransform round height div exch height div exch
		0 0 transform round exch round exch
		ptm astore setmatrix
	}
	{
		ptm currentmatrix pop
	} ifelse
	{
		currentpoint
	} stopped not
	{
		2 npop
		pathbbox
		true
		4 index 3 index eq
		4 index 3 index eq
		and
		{
			pop false
			{
				{
					2 npop
				}
				{
					3 npop true
				}
				{
					7 npop true
				}
				{
					pop true
				} pathforall
			} stopped
			{
				5 npop true
			} if
		} if
		{
			height div ceiling height mul 4 1 roll
			width div ceiling width mul 4 1 roll
			height div floor height mul 4 1 roll
			width div floor width mul 4 1 roll
			2 index sub height div ceiling cvi exch
			3 index sub width div ceiling cvi exch
			4 2 roll moveto
			FontMatrix mtx invertmatrix
			dup dup 4 get exch 5 get rmoveto
			ptm ptm concatmatrix pop
			slice /s
			patterncachesize patterncachelimit div ceiling sqrt ceiling cvi
			dup slice /q get gt
			{
				pop slice /q get
			} if
			put
			0 1 slice /s get dup mul 1 sub
			{
				slice /b get add
				gsave
				0 1 str length 1 sub
				{
					str exch 2 index put
				} for
				pop
				dup
				{
					gsave
					ptm setmatrix
					1 index str length idiv
					{
						str show
					} repeat
					1 index str length mod str exch 0 exch getinterval show
					grestore
					0 height rmoveto
				} repeat
				grestore
			} for
			2 npop
		}
		{
			4 npop
		} ifelse
	} if
 end
} def
/patternclip
{
	_eo {eoclip} {clip} ifelse
} def
/patternstrokepath
{
	strokepath
} def
/patternmatrix
matrix def
/patternfill
{
	dup type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get
	} if
	gsave
	patternclip
	Adobe_pattern_AI5 /patternpath get exec
	grestore
	newpath
} def
/patternstroke
{
	dup type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get
	} if
	gsave
	patternstrokepath
	true
	{
		{
			{
				newpath
				moveto
			}
			{
				lineto
			}
			{
				curveto
			}
			{
				closepath
				3 copy
				Adobe_pattern_AI5 /patternfill get exec
			} pathforall
			3 npop
		} stopped
		{
			5 npop
			patternclip
			Adobe_pattern_AI5 /patternfill get exec
		} if
	}
	{
		patternclip
		Adobe_pattern_AI5 /patternfill get exec
	} ifelse
	grestore
	newpath
} def
/vpatternawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index 5 index 5 index Adobe_pattern_AI5 /patternfill get exec
			grestore
			_fontRotateAdjust sub
			moveto
			_hvwb eq { _hvcx _hvcy rmoveto } if
			_hvax _hvay rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			_hvax sub
			3 index _hvwb eq { _hvcx sub } if
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
			gsave
			2 index false charpath
			6 index 6 index 6 index Adobe_pattern_AI5 /patternfill get exec
			grestore
			newpath moveto pop pop
		} ifelse
	} cforall
	3 npop
} def
/hpatternawidthshow
{
	{
		dup cstring exch
		gsave
		3 index eq { 5 index 5 index rmoveto } if
		false charpath currentpoint
		9 index 9 index 9 index
		Adobe_pattern_AI5 /patternfill get exec
		grestore
		newpath moveto
		2 copy rmoveto
	} cforall
	8 npop
} def
/patternashow
{
0 0 0 6 3 roll
patternawidthshow
} def
/patternawidthshow
{
	6 index type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get 7 1 roll
	} if
	_lineorientation 0 eq { hpatternawidthshow } { vpatternawidthshow } ifelse
} def
/vpatternawidthshowstroke
{
	7 1 roll
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			3 index setmatrix
			6 index 6 index 6 index Adobe_pattern_AI5 /patternstroke get exec
			grestore
			_fontRotateAdjust sub
			moveto
			_hvwb eq { _hvcx _hvcy rmoveto } if
			_hvax _hvay rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			_hvax sub
			3 index _hvwb eq { _hvcx sub } if
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
			gsave
			2 index false charpath
			4 index setmatrix
			7 index 7 index 7 index Adobe_pattern_AI5 /patternstroke get exec
			grestore
			newpath moveto pop pop
		} ifelse
	} cforall
	4 npop
} def
/hpatternawidthshowstroke
{
	7 1 roll
	{
		dup cstring exch
		gsave
		3 index eq { 5 index 5 index rmoveto } if
		false charpath currentpoint
		7 index setmatrix
		10 index 10 index 10 index
		Adobe_pattern_AI5 /patternstroke get exec
		grestore
		newpath moveto
		2 copy rmoveto
	} cforall
	9 npop
} def
/patternashowstroke
{
	0 0 0 7 3 roll
	patternawidthshowstroke
} def
/patternawidthshowstroke
{
	7 index type /dicttype eq
	{
		patternmatrix /patternmatrix get 8 1 roll
	} if
	_lineorientation 0 eq { hpatternawidthshowstroke } { vpatternawidthshowstroke } ifelse
} def
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_cshow 2.0 8
%%Title: (Writing System Operators)
%%Version: 2.0 8
%%CreationDate: (1/23/89) ()
%%Copyright: ((C) 1992-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_cshow 14 dict dup begin put
/initialize
{
	Adobe_cshow begin
	Adobe_cshow
	{
		dup xcheck
		{
			bind
		} if
		pop pop
	} forall
 end
	Adobe_cshow begin
} def
/terminate
{
currentdict Adobe_cshow eq
	{
 end
	} if
} def
/cforall
{
	/_lobyte 0 ddef
	/_hibyte 0 ddef
	/_cproc exch ddef
	/_cscript currentfont /FontScript known { currentfont /FontScript get } { -1 } ifelse ddef
	{
		/_lobyte exch ddef
		_hibyte 0 eq
		_cscript 1 eq
		_lobyte 129 ge _lobyte 159 le and
		_lobyte 224 ge _lobyte 252 le and or and
		_cscript 2 eq
		_lobyte 161 ge _lobyte 254 le and and
		_cscript 3 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript 25 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript -1 eq
		or or or or and
		{
			/_hibyte _lobyte ddef
		}
		{
			_hibyte 256 mul _lobyte add
			_cproc
			/_hibyte 0 ddef
		} ifelse
	} forall
} def
/cstring
{
	dup 256 lt
	{
		(s) dup 0 4 3 roll put
	}
	{
		dup 256 idiv exch 256 mod
		(hl) dup dup 0 6 5 roll put 1 4 3 roll put
	} ifelse
} def
/clength
{
	0 exch
	{ 256 lt { 1 } { 2 } ifelse add } cforall
} def
/hawidthshow
{
	{
		dup cstring
		show
		_hvax _hvay rmoveto
		_hvwb eq { _hvcx _hvcy rmoveto } if
	} cforall
} def
/vawidthshow
{
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			-90 rotate
			0 _fontRotateAdjust rmoveto
			cstring
			_hvcx _hvcy _hvwb _hvax _hvay 6 -1 roll awidthshow
			0 _fontRotateAdjust neg rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			exch _hvay sub exch _hvax sub
			2 index _hvwb eq { exch _hvcy sub exch _hvcx sub } if
			3 2 roll
			cstring
			dup stringwidth pop 2 div neg _fontAscent neg rmoveto
			show
			moveto
		} ifelse
	} cforall
} def
/hvawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hawidthshow } { vawidthshow } ifelse
} def
/hvwidthshow
{
	0 0 3 -1 roll hvawidthshow
} def
/hvashow
{
	0 0 0 6 -3 roll hvawidthshow
} def
/hvshow
{
	0 0 0 0 0 6 -1 roll hvawidthshow
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_shading_AI8 1.0 0
%%Title: (Adobe Illustrator 8 Shading Procset)
%%Version: 1.0 0
%%CreationDate: (12/17/97) ()
%%Copyright: ((C) 1987-1997 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /Adobe_shading_AI8 10 dict dup begin put
/initialize {
	Adobe_shading_AI8 begin
	Adobe_shading_AI8 bdprocs
	Mesh /initialize get exec
} def
/terminate {
	currentdict Adobe_shading_AI8 eq {
	 end
	} if
} def
/bdprocs {
	{
		dup xcheck 1 index type /arraytype eq and {
			bind
		} if
		pop pop
	} forall
} def
/X! {pop} def
/X# {pop pop} def
/Mesh 40 dict def
Mesh begin
/initialize {
	Mesh bdprocs
	Mesh begin
		/emulate? /AI8MeshEmulation where {
			pop AI8MeshEmulation
		}{
			systemdict /shfill known not
		} ifelse def
 end
} def
/bd {
	shadingdict begin
} def
/paint {
	emulate? {
	 end
	}{
		/_lp /none ddef _fc /_lp /none ddef
		
		/AIColorSpace AIColorSpace tocolorspace store
		/ColorSpace AIColorSpace topsspace store
		
		version_ge_3010.106 not systemdict /setsmoothness known and {
			0.0001 setsmoothness
		} if
		
		composite? {
			/DataSource getdatasrc def
			Matrix concat
			currentdict end
			shfill
		}{
			AIColorSpace makesmarks AIPlateList markingplate and not isoverprint and {
			 end
			}{
				/ColorSpace /DeviceGray store
				/Decode [0 1 0 1 0 1] store
				/DataSource getplatesrc def
				Matrix concat
				currentdict end
				shfill
			} ifelse
		} ifelse
	} ifelse
} def
/shadingdict 12 dict def
shadingdict begin
	/ShadingType 6 def
	/BitsPerCoordinate 16 def
	/BitsPerComponent 8 def
	/BitsPerFlag 8 def
end
/datafile null def
/databuf 256 string def
/dataptr 0 def
/srcspace null def
/srcchannels 0 def
/dstchannels 0 def
/dstplate 0 def
/srctodstcolor null def
/getplatesrc {
	/srcspace AIColorSpace store
	/srcchannels AIColorSpace getnchannels store
	/dstchannels 1 store
	/dstplate getplateindex store
	/srctodstcolor srcspace makesmarks {
		dstplate 4 eq {
			{1 exch sub}
		}{
			{srcspace tocmyk 3 dstplate sub index 1 exch sub 5 1 roll 4 {pop} repeat}
		} ifelse
	}{
		{srcchannels {pop} repeat 1}
	} ifelse store
	/datafile getdatasrc store
	/rdpatch168 load DataLength () /SubFileDecode filter
} def
/getdatasrc {
	/rdcmntline load /ASCII85Decode filter
} def
/rdpatch168 {
	/dataptr 0 store
	49 rdcount
	4 {
		dup {pop srcchannels getint8} if
		dup {pop srctodstcolor dstchannels putint8 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdpatch3216 {
	/dataptr 0 store
	97 rdcount
	4 {
		dup {pop srcchannels getint16} if
		dup {pop srctodstcolor dstchannels putint16 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdcount {
	dup 0 gt {
		datafile databuf dataptr 4 -1 roll getinterval readstring
		exch length dataptr add /dataptr exch store
	}{
		true
	} ifelse
} def
/getint8 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 255 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint8 {
	dup dataptr add /dataptr exch store
	dataptr exch
	{
		1 sub exch
		255 mul cvi
		databuf 2 index
		3 -1 roll put
	} repeat
	pop
} def 
/getint16 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 256 mul datafile read} if
		dup {pop add 65535 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint16 {
	dup 2 mul dataptr add /dataptr exch store
	dataptr exch
	{
		2 sub exch
		65535 mul cvi dup
		256 idiv databuf 3 index 3 -1 roll put
		256 mod databuf 2 index 1 add 3 -1 roll put
	} repeat
	pop
} def 
/srcbuf 256 string def
/rdcmntline {
	currentfile srcbuf readline pop
	(%) anchorsearch {pop} if
} def
/getplateindex {
	0 [cyan? magenta? yellow? black? customColor?] {{exit} if 1 add} forall
} def
/aicsarray 4 array def
/aicsaltvals 4 array def
/aicsaltcolr aicsaltvals def
/tocolorspace {
	dup type /arraytype eq {
		mark exch aload pop
		aicsarray 0 3 -1 roll put
		aicsarray 1 3 -1 roll put
		dup aicsarray 2 3 -1 roll put
		gettintxform aicsarray 3 3 -1 roll put
		counttomark aicsaltvals 0 3 -1 roll getinterval /aicsaltcolr exch store
		aicsaltcolr astore pop pop
		aicsarray
	} if
} def
/subtintxform {aicsaltcolr {1 index mul exch} forall pop} def
/addtintxform {aicsaltcolr {1 sub 1 index mul 1 add exch} forall pop} def
/gettintxform {
	/DeviceRGB eq {/addtintxform}{/subtintxform} ifelse load
} def
/getnchannels {
	dup type /arraytype eq {0 get} if
	colorspacedict exch get begin Channels end
} def
/makesmarks {
	composite? {
		pop true
	}{
		dup dup type /arraytype eq {0 get} if
		colorspacedict exch get begin MarksPlate end
	} ifelse
} def
/markingplate {
	composite? {
		pop true
	}{
		dup type /arraytype eq {
			dup length getplateindex gt {getplateindex get}{pop false} ifelse
		} if
	} ifelse
} def
/tocmyk {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToCMYK end
} def
/topsspace {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToPSSpace end
} def
/colorspacedict 5 dict dup begin
	/DeviceGray 4 dict dup begin
		/Channels 1 def
		/MarksPlate {pop black?} def
		/ToCMYK {pop 1 exch sub 0 0 0 4 -1 roll} def
		/ToPSSpace {} def
 end def
	/DeviceRGB 4 dict dup begin
		/Channels 3 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop _rgbtocmyk} def
		/ToPSSpace {} def
 end def
	/DeviceCMYK 4 dict dup begin
		/Channels 4 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop} def
		/ToPSSpace {} def
 end def
	/Separation 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			/findcmykcustomcolor where {
				pop dup 1 exch ToCMYK 5 -1 roll 1 get
				findcmykcustomcolor 1 setcustomcolor
				systemdict /currentgray get exec
				1 ne
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {} def
 end def
	/Process 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			isCMYKSep? {
				1 exch ToCMYK 4 array astore getplateindex get 0 ne 
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {
			4 array copy dup 0 /Separation put
		} def
 end def
end def
/isoverprint {
	/currentoverprint where {pop currentoverprint}{_of} ifelse
} def
/version_ge_3010.106 {
   version {cvr} stopped {
      pop
      false
   }{
      3010.106 ge
   } ifelse
} def
end
end
defaultpacking setpacking
%%EndResource
%%EndProlog
%%BeginSetup
userdict /_useSmoothShade true put
userdict /_aicmykps false put
userdict /_forceToCMYK false put
Adobe_level2_AI5 /initialize get exec
Adobe_cshow /initialize get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 AGM_Gradient /initializeAI get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 Adobe_pattern_AI5 /initialize get exec
Adobe_ColorImage_AI6 /initialize get exec
Adobe_shading_AI8 /initialize get exec
Adobe_Illustrator_AI5 /initialize get exec
%AI5_Begin_NonPrinting
Np
%AI8_PluginGroupInfo
(Adobe Path Blends) (Adobe Blends Plugin) (Live Blends.aip)
%AI8_PluginGroupInfo
(Adobe Tracing Object) (Tracing) (TracingSuite.aip)
%AI8_PluginGroupInfo
(Adobe PatternOnPath Brush Tool) (Adobe Pattern Brush Plugin) (ArtOnPath.aip)
%AI8_PluginGroupInfo
(Adobe PatternOnPath Brush Tool) (Adobe Pattern Brush Plugin) (ArtOnPath.aip)
%AI8_PluginGroupInfo
(Adobe ArtOnPath Brush Tool) (Adobe Art Brush Plugin) (ArtOnPath.aip)
%AI8_PluginGroupInfo
(Adobe ArtOnPath Brush Tool) (Adobe Art Brush Plugin) (ArtOnPath.aip)
%AI8_PluginGroupInfo
(Adobe Calligraphic Brush Tool) (Adobe Calligraphic Brush Plugin) (Calligraphic Brush Tool.aip)
%AI8_PluginGroupInfo
(Adobe Scatter Brush Tool) (Adobe Scatter Brush Plugin) (Scatter Brush Tool.aip)
%AI8_PluginGroupInfo
(Adobe Scatter Brush Tool) (Adobe Scatter Brush Plugin) (Scatter Brush Tool.aip)
%AI8_PluginGroupInfo
(Pathfinder Suite) (Adobe Compound Shape) (PathFinder Suite.aip)
%AI8_PluginGroupInfo
(Adobe Deform Plugin) (Adobe Envelope Plugin) (Envelope and Warp.aip)
%AI8_PluginGroupInfo
(Adobe Symbolism) (Adobe Symbolism) (Symbolism.aip)
%AI8_PluginGroupInfo
(Adobe Flare Plugin) (Flare) (flare.aip)
%AI8_PluginGroupInfo
(Adobe Planar Group) (Adobe Live Paint Plugin) (Live Paint.aip)
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
4 Bn
%AI5_BeginGradient: (Black, White)
(Black, White) 0 2 Bd
[
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
0 %_Br
[
0 0 50 100 %_BS
%_0 0 50 100 Bs
1 0 50 0 %_BS
%_1 0 50 0 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Chrome)
(Chrome) 0 6 Bd
[
0
<
464646454545444444444343434342424241414141404040403F3F3F3E3E3E3E3D3D3D3C3C3C3C3B
3B3B3B3A3A3A39393939383838383737373636363635353535343434333333333232323131313130
3030302F2F2F2E2E2E2E2D2D2D2D2C2C2C2B2B2B2B2A2A2A2A292929282828282727272626262625
2525252424242323232322222222212121202020201F1F1F1F1E1E1E1D1D1D1D1C1C1C1B1B1B1B1A
1A1A1A1919191818181817171717161616151515151414141413131312121212111111101010100F
0F0F0F0E0E0E0D0D0D0D0C0C0C0C0B0B0B0A0A0A0A09090909080808070707070606060505050504
04040403030302020202010101010000
>
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
<
1F1E1E1E1E1E1E1E1E1E1D1D1D1D1D1D1D1D1C1C1C1C1C1C1C1C1B1B1B1B1B1B1B1B1B1A1A1A1A1A
1A1A1A19191919191919191818181818181818181717171717171717161616161616161615151515
15151515151414141414141414131313131313131312121212121212121211111111111111111010
1010101010100F0F0F0F0F0F0F0F0F0E0E0E0E0E0E0E0E0D0D0D0D0D0D0D0D0C0C0C0C0C0C0C0C0C
0B0B0B0B0B0B0B0B0A0A0A0A0A0A0A0A090909090909090909080808080808080807070707070707
07060606060606060606050505050505050504040404040404040303030303030303030202020202
02020201010101010101010000000000
>
1 %_Br
0
0.275
1
<
6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544
434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F
>
1 %_Br
0
<
00000101010102020202030303040404040505050606060607070707080808090909090A0A0A0A0B
0B0B0C0C0C0C0D0D0D0D0E0E0E0F0F0F0F1010101111111112121212131313141414141515151516
161617171717181818181919191A1A1A1A1B1B1B1C1C1C1C1D1D1D1D1E1E1E1F1F1F1F2020202021
212122222222232323232424242525252526262627272727282828282929292A2A2A2A2B2B2B2B2C
2C2C2D2D2D2D2E2E2E2E2F2F2F303030303131313232323233333333343434353535353636363637
373738383838393939393A3A3A3B3B3B3B3C3C3C3D3D3D3D3E3E3E3E3F3F3F404040404141414142
42424343434344444444454545464646
>
<
000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F2021222324252627
28292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F
505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F7071727374757677
78797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9F
A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7
C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEF
F0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF
>
<
00000101020203030304040505050606070708080809090A0A0B0B0B0C0C0D0D0D0E0E0F0F101010
1111121212131314141515151616171718181819191A1A1A1B1B1C1C1D1D1D1E1E1F1F1F20202121
222222232324242525252626272727282829292A2A2A2B2B2C2C2D2D2D2E2E2F2F2F303031313232
32333334343435353636373737383839393A3A3A3B3B3C3C3C3D3D3E3E3F3F3F4040414142424243
4344444445454646474747484849494A4A4A4B4B4C4C4C4D4D4E4E4F4F4F50505151515252535354
54545555565657575758585959595A5A5B5B5C5C5C5D5D5E5E5E5F5F606061616162626363646464
6565666666676768686969696A6A6B6B
>
1 %_Br
1
0 %_Br
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
<
4D4C4C4C4B4B4B4A4A4A4A4949494848484747474746464645454544444444434343424242414141
414040403F3F3F3E3E3E3E3D3D3D3C3C3C3B3B3B3B3A3A3A39393938383838373737363636353535
35343434333333323232323131313030302F2F2F2F2E2E2E2D2D2D2C2C2C2C2B2B2B2A2A2A292929
2928282827272726262626252525242424232323232222222121212020201F1F1F1F1E1E1E1D1D1D
1C1C1C1C1B1B1B1A1A1A191919191818181717171616161615151514141413131313121212111111
101010100F0F0F0E0E0E0D0D0D0D0C0C0C0B0B0B0A0A0A0A09090908080807070707060606050505
04040404030303020202010101010000
>
0
0
1 %_Br
[
1 0 50 92 %_BS
%_1 0 50 92 Bs
0 0.275 1 0.12 1 50 59 %_BS
%_0 0.275 1 0.12 1 50 59 Bs
0 0.275 1 0.42 1 50 50 %_BS
%_0 0.275 1 0.42 1 50 50 Bs
1 0 50 49 %_BS
%_1 0 50 49 Bs
1 0 50 41 %_BS
%_1 0 50 41 Bs
1 0.3 0 0 1 50 0 %_BS
%_1 0.3 0 0 1 50 0 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Rainbow)
(Rainbow) 0 6 Bd
[
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
1
0
0
1 %_Br
1
<
0708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E
2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F50515253545556
5758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E
7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6
A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCE
CFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6
F7F8F9FAFBFCFDFEFF
>
0
0
1 %_Br
1
<
00000000000000000000000000000000000001010101010101010101010101010101010101010101
01010101010101010101010101010202020202020202020202020202020202020202020202020202
02020202020202020202030303030303030303030303030303030303030303030303030303030303
03030303030304040404040404040404040404040404040404040404040404040404040404040404
04040505050505050505050505050505050505050505050505050505050505050505050505050606
06060606060606060606060606060606060606060606060606060606060606060607070707070707
07070707070707070707070707070707
>
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
0
1 %_Br
<
000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F2021222324252627
28292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F
505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F7071727374757677
78797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9F
A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7
C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEF
F0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF
>
0
1
0
1 %_Br
0
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
1
0
1 %_Br
[
0 1 0 0 1 50 100 %_BS
%_0 1 0 0 1 50 100 Bs
1 1 0 0 1 50 80 %_BS
%_1 1 0 0 1 50 80 Bs
1 0.0279 0 0 1 50 60 %_BS
%_1 0.0279 0 0 1 50 60 Bs
1 0 1 0 1 50 40 %_BS
%_1 0 1 0 1 50 40 Bs
0 0 1 0 1 50 20 %_BS
%_0 0 1 0 1 50 20 Bs
0 1 1 0 1 50 0 %_BS
%_0 1 1 0 1 50 0 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Yellow & Orange Radial)
(Yellow & Orange Radial) 1 2 Bd
[
0
<
0001010203040506060708090A0B0C0C0D0E0F10111213131415161718191A1B1C1D1D1E1F202122
232425262728292A2B2B2C2D2E2F303132333435363738393A3B3C3D3E3E3F404142434445464748
494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F60606162636465666768696A6B6C6D6E6F
707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C
>
<
FFFFFFFFFEFEFEFEFEFEFEFDFDFDFDFDFDFCFCFCFCFCFCFBFBFBFBFBFBFAFAFAFAFAFAF9F9F9F9F9
F9F8F8F8F8F8F8F7F7F7F7F7F7F6F6F6F6F6F6F5F5F5F5F5F5F4F4F4F4F4F3F3F3F3F3F3F2F2F2F2
F2F2F1F1F1F1F1F0F0F0F0F0F0EFEFEFEFEFEFEEEEEEEEEEEDEDEDEDEDEDECECECECECEBEBEBEBEB
EBEAEAEAEAEAE9E9E9E9E9E9E8E8E8E8E8E8E7E7E7E7E7E6E6E6E6E6E6
>
0
1 %_Br
[
0 0 1 0 1 52 19 %_BS
%_0 0 1 0 1 52 19 Bs
0 0.55 0.9 0 1 50 100 %_BS
%_0 0.55 0.9 0 1 50 100 Bs
BD
%AI5_EndGradient
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI3_BeginPattern: (Brick)
(Brick) 0 0 72 72 [
%AI3_Tile
(0 O 0 R 0.3 0.85 0.85 0 k
 0.3 0.85 0.85 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
0 0 m
0 72 L
72 72 L
72 0 L
0 0 L
f
%AI6_EndPatternLayer
) &
(0 O 0 R 1 g
 1 G
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.3 w 4 M []0 d0 XR
0 68.4097 m
72 68.4097 l
S
0 61.209 m
72 61.209 L
S
0 54.0088 m
72 54.0088 L
S
0 46.8076 m
72 46.8076 L
S
0 39.6084 m
72 39.6084 L
S
0 32.4072 m
72 32.4072 L
S
0 25.207 m
72 25.207 L
S
0 18.0059 m
72 18.0059 L
S
0 10.8057 m
72 10.8057 L
S
0 3.6064 m
72 3.6064 L
S
68.4102 68.4097 m
68.4102 61.2217 l
S
54.0098 68.4097 m
54.0098 61.2217 L
S
39.6094 68.4097 m
39.6094 61.2217 L
S
25.21 68.4097 m
25.21 61.2217 L
S
10.8105 68.4097 m
10.8105 61.2217 L
S
68.4102 53.9717 m
68.4102 46.7842 l
S
54.0098 53.9717 m
54.0098 46.7842 L
S
39.6094 53.9717 m
39.6094 46.7842 L
S
25.21 53.9717 m
25.21 46.7842 L
S
10.8105 53.9717 m
10.8105 46.7842 L
S
68.4102 39.5967 m
68.4102 32.4092 l
S
54.0098 39.5967 m
54.0098 32.4092 L
S
39.6094 39.5967 m
39.6094 32.4092 L
S
25.21 39.5967 m
25.21 32.4092 L
S
10.8105 39.5967 m
10.8105 32.4092 L
S
68.4102 25.2217 m
68.4102 18.0342 l
S
54.0098 25.2217 m
54.0098 18.0342 L
S
39.6094 25.2217 m
39.6094 18.0342 L
S
25.21 25.2217 m
25.21 18.0342 L
S
10.8105 25.2217 m
10.8105 18.0342 L
S
68.4102 10.7842 m
68.4102 3.5967 l
S
54.0098 10.7842 m
54.0098 3.5967 L
S
39.6094 10.7842 m
39.6094 3.5967 L
S
25.21 10.7842 m
25.21 3.5967 L
S
10.8105 10.7842 m
10.8105 3.5967 L
S
61.1973 3.5967 m
61.1973 0 L
S
46.7969 3.5967 m
46.7969 0 L
S
32.3965 3.5967 m
32.3965 0 L
S
17.9971 3.5967 m
17.9971 0 L
S
3.5967 3.5967 m
3.5967 0 l
S
61.1973 18.0342 m
61.1973 10.8467 L
S
46.7969 18.0342 m
46.7969 10.8467 L
S
32.3965 18.0342 m
32.3965 10.8467 L
S
17.9971 18.0342 m
17.9971 10.8467 L
S
3.5967 18.0342 m
3.5967 10.8467 l
S
61.1973 32.4092 m
61.1973 25.2217 L
S
46.7969 32.4092 m
46.7969 25.2217 L
S
17.9971 32.4092 m
17.9971 25.2217 L
S
3.5967 32.4092 m
3.5967 25.2217 l
S
61.1973 46.7842 m
61.1973 39.5967 L
S
46.7969 46.7842 m
46.7969 39.5967 L
S
32.3965 46.7842 m
32.3965 39.5967 L
S
17.9971 46.7842 m
17.9971 39.5967 L
S
3.5967 46.7842 m
3.5967 39.5967 l
S
61.1973 61.2217 m
61.1973 54.0347 L
S
46.7969 61.2217 m
46.7969 54.0347 L
S
32.3965 61.2217 m
32.3965 54.0347 L
S
17.9971 61.2217 m
17.9971 54.0347 L
S
3.5967 61.2217 m
3.5967 54.0347 l
S
61.1973 71.959 m
61.1973 68.4717 L
S
46.7969 71.959 m
46.7969 68.4717 L
S
32.3965 71.959 m
32.3965 68.4717 L
S
17.9971 71.959 m
17.9971 68.4717 L
S
3.5967 71.959 m
3.5967 68.4717 l
S
32.3965 32.4092 m
32.3965 25.2217 L
S
%AI6_EndPatternLayer
) &
] E
%AI3_EndPattern
%AI3_BeginPattern: (Confetti)
(Confetti) 4.85 3.617 76.85 75.617 [
%AI3_Tile
(0 O 0 R 1 g
 1 G
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
4.85 3.617 m
4.85 75.617 L
76.85 75.617 L
76.85 3.617 L
4.85 3.617 L
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0 g
 0 G
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.3 w 4 M []0 d0 XR
10.6 64.867 m
7.85 62.867 l
S
9.1 8.617 m
6.85 6.867 l
S
78.1 68.617 m
74.85 67.867 l
S
76.85 56.867 m
74.35 55.117 l
S
79.6 51.617 m
76.6 51.617 l
S
76.35 44.117 m
73.6 45.867 l
S
78.6 35.867 m
76.6 34.367 l
S
76.1 23.867 m
73.35 26.117 l
S
78.1 12.867 m
73.85 13.617 l
S
68.35 14.617 m
66.1 12.867 l
S
76.6 30.617 m
73.6 30.617 l
S
62.85 58.117 m
60.956 60.941 l
S
32.85 59.617 m
31.196 62.181 l
S
47.891 64.061 m
49.744 66.742 l
S
72.814 2.769 m
73.928 5.729 l
S
67.976 2.633 m
67.35 5.909 l
S
61.85 27.617 m
59.956 30.441 l
S
53.504 56.053 m
51.85 58.617 l
S
52.762 1.779 m
52.876 4.776 l
S
45.391 5.311 m
47.244 7.992 l
S
37.062 3.375 m
35.639 5.43 l
S
55.165 34.828 m
57.518 37.491 l
S
20.795 3.242 m
22.12 5.193 l
S
14.097 4.747 m
15.008 8.965 l
S
9.736 1.91 m
8.073 4.225 l
S
31.891 5.573 m
32.005 8.571 l
S
12.1 70.367 m
15.6 68.867 l
S
9.35 54.867 m
9.6 58.117 l
S
12.85 31.867 m
14.35 28.117 l
S
10.1 37.367 m
12.35 41.117 l
S
34.1 71.117 m
31.85 68.617 l
S
38.35 71.117 m
41.6 68.367 l
S
55.1 71.117 m
58.35 69.117 l
S
57.35 65.117 m
55.35 61.867 l
S
64.35 66.367 m
69.35 68.617 l
S
71.85 62.867 m
69.35 61.117 l
S
23.6 70.867 m
23.6 67.867 l
S
20.6 65.867 m
17.35 65.367 l
S
24.85 61.367 m
25.35 58.117 l
S
25.85 65.867 m
29.35 66.617 l
S
14.1 54.117 m
16.85 56.117 l
S
12.35 11.617 m
12.6 15.617 l
S
12.1 19.867 m
14.35 22.367 l
S
26.1 9.867 m
23.6 13.367 l
S
34.6 47.117 m
32.1 45.367 l
S
62.6 41.867 m
59.85 43.367 l
S
31.6 35.617 m
27.85 36.367 l
S
36.35 26.117 m
34.35 24.617 l
S
33.85 14.117 m
31.1 16.367 l
S
37.1 9.867 m
35.1 11.117 l
S
34.35 20.867 m
31.35 20.867 l
S
44.6 56.617 m
42.1 54.867 l
S
47.35 51.367 m
44.35 51.367 l
S
44.1 43.867 m
41.35 45.617 l
S
43.35 33.117 m
42.6 30.617 l
S
43.85 23.617 m
41.1 25.867 l
S
44.35 15.617 m
42.35 16.867 l
S
67.823 31.1 m
64.823 31.1 l
S
27.1 32.617 m
29.6 30.867 l
S
31.85 55.117 m
34.85 55.117 l
S
19.6 40.867 m
22.1 39.117 l
S
16.85 35.617 m
19.85 35.617 l
S
20.1 28.117 m
22.85 29.867 l
S
52.1 42.617 m
54.484 44.178 l
S
52.437 50.146 m
54.821 48.325 l
S
59.572 54.133 m
59.35 51.117 l
S
50.185 10.055 m
53.234 9.928 l
S
51.187 15.896 m
53.571 14.075 l
S
58.322 19.883 m
59.445 16.823 l
S
53.1 32.117 m
50.6 30.367 l
S
52.85 24.617 m
49.6 25.617 l
S
61.85 9.117 m
59.1 10.867 l
S
69.35 34.617 m
66.6 36.367 l
S
67.1 23.617 m
65.1 22.117 l
S
24.435 46.055 m
27.484 45.928 l
S
25.437 51.896 m
27.821 50.075 l
S
62.6 47.117 m
65.321 46.575 l
S
19.85 19.867 m
20.35 16.617 l
S
21.85 21.867 m
25.35 22.617 l
S
37.6 62.867 m
41.6 62.117 l
S
38.323 42.1 m
38.823 38.6 l
S
69.35 52.617 m
66.85 53.867 l
S
14.85 62.117 m
18.1 59.367 l
S
9.6 46.117 m
7.1 44.367 l
S
20.6 51.617 m
18.6 50.117 l
S
46.141 70.811 m
47.994 73.492 l
S
69.391 40.561 m
71.244 43.242 l
S
38.641 49.311 m
39.35 52.117 l
S
25.141 16.811 m
25.85 19.617 l
S
36.6 32.867 m
34.6 31.367 l
S
6.1 68.617 m
2.85 67.867 l
S
4.85 56.867 m
2.35 55.117 l
S
7.6 51.617 m
4.6 51.617 l
S
6.6 35.867 m
4.6 34.367 l
S
6.1 12.867 m
1.85 13.617 l
S
4.6 30.617 m
1.6 30.617 l
S
72.814 74.769 m
73.928 77.729 l
S
67.976 74.633 m
67.35 77.909 l
S
52.762 73.779 m
52.876 76.776 l
S
37.062 75.375 m
35.639 77.43 l
S
20.795 75.242 m
22.12 77.193 l
S
9.736 73.91 m
8.073 76.225 l
S
10.1 23.617 m
6.35 24.367 l
S
73.217 18.276 m
71.323 21.1 l
S
28.823 39.6 m
29.505 42.389 l
S
49.6 38.617 m
47.6 37.117 l
S
60.323 73.6 m
62.323 76.6 l
S
60.323 1.6 m
62.323 4.6 l
S
%AI6_EndPatternLayer
) &
] E
%AI3_EndPattern
%AI3_BeginPattern: (Leaves - Fall )
(Leaves - Fall ) 0 0 64.0781 78.9336 [
%AI3_Tile
(0 O 0 R 0.05 0.2 1 0 k
 0.05 0.2 1 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
64.0781 78.9336 m
64.0781 0 L
0 0 L
0 78.9336 L
64.0781 78.9336 L
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.83 0 1 0 k
 0.83 0 1 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
29.7578 0.9902 m
30.4346 1.1914 30.7246 1.3428 V
29.2559 4.0547 33.707 8.3359 34.627 9.0762 C
35.2275 8.8506 35.3477 6.3184 34.6699 4.9805 C
35.5137 5.1035 37.7031 3.7256 38.4609 2.4365 C
38.5254 3.125 40.0957 6.0664 40.9219 6.4434 C
40.002 6.8408 39.3359 8.3135 38.5742 9.7617 C
39.5957 9.9287 40.9961 9.0078 42.4668 8.1025 C
42.9814 8.9043 44.3555 9.875 45.6143 10.3916 C
44.5264 11.0781 44.0313 11.8203 43.5352 13.2793 C
42.4922 12.7139 40.3057 12.5645 39.7764 12.8516 C
40.291 13.9648 42.5371 14.5078 43.2676 14.4551 C
43.0137 15.3164 42.8652 17.4697 43.0391 20.0625 C
41.3789 18.7461 39.834 17.4297 38.1738 17.4883 C
38.4434 16.0664 37.8076 14.2607 37.4307 13.7676 C
36.8574 14.5117 36.4463 15.3389 36.8008 17.3164 C
35.3486 17.8008 34.1113 18.3467 32.7373 19.6045 C
32.7373 17.7734 32.166 16.5723 31.2969 15.2959 C
32.5576 14.8076 33.8301 13.6045 33.8252 12.5664 C
32.9775 12.7178 31.2852 13.4619 30.793 14.4551 C
30.0742 13.707 28.3906 12.3984 26.7871 12.3945 C
27.9746 11.5391 28.8945 10.5059 28.9893 8.5938 C
30.2422 9.5645 32.6953 10.1797 34.0752 9.582 C
29.2344 5.3457 29.7031 2.3125 29.7578 0.9902 C
f
13.8525 29.9844 m
13.3281 29.5127 13.1309 29.25 V
15.623 27.4326 13.3691 21.6074 12.8555 20.5439 C
12.2168 20.4883 10.8096 23.2285 10.8457 24.7266 C
9.7129 23.9707 8.0488 24.0918 6.4463 24.3779 C
7.0186 23.2891 6.6172 21.3447 5.8164 20.5439 C
6.8184 20.5801 8.1699 19.8652 9.4785 18.8838 C
8.6436 18.0645 6.8164 18.2246 4.9004 18.8838 C
4.9004 17.5107 4.0781 15.7734 3.2412 14.5918 C
4.5576 14.6484 5.7031 13.9629 6.5605 12.9316 C
7.2256 14.5 9.2598 15.6133 10.166 15.5645 C
10.1826 14.1992 8.6094 12.1094 7.5879 11.7109 C
8.1875 11.041 9.207 9.5107 10.166 7.0947 C
10.9648 9.0205 12.1348 10.2627 13.3672 11.1953 C
12.2256 12.7578 12.3994 13.6289 12.7988 15.1074 C
13.541 14.5664 14.5723 14.1338 14.7441 12.1309 C
16.4609 12.416 17.5957 12.3447 19.0938 11.4434 C
18.6387 13.1055 18.6348 14.707 18.9551 16.4063 C
17.1055 16.2666 15.5449 16.4795 14.5156 17.9688 C
15.3457 18.1953 17.6055 18.2549 18.4795 17.3223 C
18.8066 18.3047 19.7012 19.7109 21.1475 20.4043 C
19.707 20.6641 18.7227 21.7637 17.8135 23.4492 C
17.1006 22.0332 14.873 20.3691 13.3711 20.3145 C
15.373 24.3779 15.373 27.2959 13.8525 29.9844 C
f
41.2324 26.0742 m
41.5518 26.7021 41.7549 26.959 V
44.1523 25.0176 48.958 28.3262 49.8535 29.0957 C
49.7432 29.7266 47.6182 30.8643 45.9004 29.834 C
46.3408 31.123 45.4395 33.084 44.2402 34.126 C
45.9805 34.0254 48.126 35.3867 48.6484 36.1289 C
48.8701 35.1514 50.0527 33.8809 51.3379 32.8672 C
51.6895 33.8398 50.9941 35.958 50.0781 37.5605 C
51.3125 38.0605 52.4248 38.9912 52.8828 40.25 C
53.3398 38.9336 54.3428 38.2598 55.6875 37.5039 C
54.5273 36.0762 53.7471 33.9023 54.0273 33.0391 C
55.3496 33.374 56.9209 36.0918 57.0439 37.1816 C
57.9189 36.415 59.4727 35.7285 62.0537 35.4219 C
60.3535 34.3438 59.9902 32.3516 59.4063 30.9219 C
58.2588 31.3682 56.0898 31.4277 55.1152 30.8643 C
55.8281 30.2852 57.168 29.7344 59.1777 29.7207 C
59.1777 28.1758 59.6406 27.043 60.8945 25.8281 C
59.1719 25.8418 57.0723 25.3555 55.5762 24.9629 C
55.3281 26.292 54.4844 27.8887 53.3398 28.2891 C
53.334 27.4277 53.5996 25.1797 54.4844 24.5117 C
53.6201 23.9443 52.3672 22.5674 51.9102 20.8496 C
51.2881 22.1758 50.4268 23.4805 48.5645 23.9238 C
49.749 24.9766 50.584 26.9941 50.25 28.4609 C
45.1973 24.4785 42.5215 25.7773 41.2324 26.0742 C
f
27.7578 38.7324 m
28.4346 38.9316 28.7246 39.084 V
27.2559 41.7969 31.707 46.0776 32.627 46.8169 C
33.2275 46.5918 33.3477 44.0586 32.6699 42.7227 C
33.5137 42.8457 35.7031 41.4678 36.4609 40.1787 C
36.5254 40.8652 38.0957 43.8066 38.9219 44.1846 C
38.002 44.582 37.3359 46.0547 36.5742 47.5039 C
37.5957 47.6709 38.9961 46.7485 40.4668 45.8438 C
40.9814 46.6445 42.3555 47.6177 43.6143 48.1328 C
42.5264 48.8198 42.0313 49.5615 41.5352 51.0205 C
40.4922 50.4556 38.3057 50.3057 37.7764 50.5938 C
38.291 51.7056 40.5371 52.2485 41.2676 52.1958 C
41.0137 53.0576 40.8652 55.2109 41.0391 57.8037 C
39.3789 56.4878 37.834 55.1719 36.1738 55.2285 C
36.4434 53.8076 35.8076 52.002 35.4307 51.5088 C
34.8574 52.2529 34.4463 53.0796 34.8008 55.0576 C
33.3486 55.5425 32.1113 56.0879 30.7373 57.3467 C
30.7373 55.5146 30.166 54.314 29.2969 53.0366 C
30.5576 52.5488 31.8301 51.3467 31.8252 50.3076 C
30.9775 50.46 29.2852 51.2036 28.793 52.1958 C
28.0742 51.4497 26.3906 50.1396 24.7871 50.1357 C
25.9746 49.2817 26.8945 48.2466 26.9893 46.335 C
28.2422 47.3057 30.6953 47.9209 32.0752 47.3237 C
27.2344 43.0869 27.7031 40.0547 27.7578 38.7324 C
f
13.5195 70.3916 m
12.9941 69.9209 12.7988 69.6587 V
15.2891 67.8418 13.0352 62.0146 12.5225 60.9517 C
11.8828 60.8955 10.4766 63.6367 10.5117 65.1348 C
9.3809 64.3789 7.7148 64.4995 6.1133 64.7856 C
6.6855 63.6987 6.2842 61.7529 5.4834 60.9517 C
6.4854 60.9878 7.8359 60.2729 9.1455 59.2925 C
8.3105 58.4717 6.4834 58.6338 4.5674 59.2925 C
4.5674 57.9189 3.7461 56.1816 2.9082 54.9995 C
4.2246 55.0576 5.3691 54.3706 6.2275 53.3408 C
6.8926 54.9097 8.9258 56.0215 9.832 55.9727 C
9.8496 54.6079 8.2764 52.5176 7.2539 52.1187 C
7.8545 51.4497 8.873 49.9189 9.832 47.5039 C
10.6309 49.4297 11.8008 50.6719 13.0342 51.6045 C
11.8926 53.1655 12.0664 54.0366 12.4648 55.5146 C
13.209 54.9746 14.2393 54.5415 14.4102 52.5386 C
16.127 52.8247 17.2637 52.7529 18.7598 51.8525 C
18.3057 53.5137 18.3027 55.1147 18.623 56.8149 C
16.7725 56.6748 15.2129 56.8887 14.1826 58.377 C
15.0117 58.6035 17.2725 58.6626 18.1465 57.731 C
18.4736 58.7129 19.3691 60.1187 20.8145 60.8125 C
19.375 61.0728 18.3896 62.1719 17.4805 63.8579 C
16.7676 62.4429 14.541 60.7769 13.0371 60.7227 C
15.041 64.7856 15.041 67.7046 13.5195 70.3916 C
f
41.2324 64.4824 m
41.5518 65.1113 41.7549 65.3682 V
44.1523 63.4272 48.958 66.7354 49.8535 67.5034 C
49.7432 68.1362 47.6182 69.2725 45.9004 68.2422 C
46.3408 69.5313 45.4395 71.4922 44.2402 72.5342 C
45.9805 72.4341 48.126 73.7954 48.6484 74.5371 C
48.8701 73.5601 50.0527 72.29 51.3379 71.2754 C
51.6895 72.249 50.9941 74.3662 50.0781 75.9683 C
51.3125 76.4692 52.4248 77.3994 52.8828 78.6582 C
53.3398 77.3423 54.3428 76.667 55.6875 75.9111 C
54.5273 74.4844 53.7471 72.3101 54.0273 71.4473 C
55.3496 71.7822 56.9209 74.5 57.0439 75.5903 C
57.9189 74.8232 59.4727 74.1372 62.0537 73.8311 C
60.3535 72.7534 59.9902 70.7612 59.4063 69.3301 C
58.2588 69.7773 56.0898 69.8364 55.1152 69.2725 C
55.8281 68.6934 57.168 68.1431 59.1777 68.1284 C
59.1777 66.583 59.6406 65.4512 60.8945 64.2373 C
59.1719 64.249 57.0723 63.7632 55.5762 63.3721 C
55.3281 64.7002 54.4844 66.2974 53.3398 66.6973 C
53.334 65.8364 53.5996 63.5874 54.4844 62.9214 C
53.6201 62.353 52.3672 60.9751 51.9102 59.2583 C
51.2881 60.583 50.4268 61.8882 48.5645 62.333 C
49.749 63.3862 50.584 65.4033 50.25 66.8691 C
45.1973 62.8872 42.5215 64.1851 41.2324 64.4824 C
f
%AI6_EndPatternLayer
) &
] E
%AI3_EndPattern
%AI3_BeginPattern: (Stripes)
(Stripes) 8.45 4.6001 80.45 76.6001 [
%AI3_Tile
(0 O 0 R 1 0.07 1 0 k
 1 0.07 1 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 3.6 w 4 M []0 d0 XR
8.2 8.2 m
80.7 8.2 L
S
8.2 22.6001 m
80.7 22.6001 L
S
8.2 37.0002 m
80.7 37.0002 L
S
8.2 51.4 m
80.7 51.4 L
S
8.2 65.8001 m
80.7 65.8001 L
S
8.2 15.4 m
80.7 15.4 L
S
8.2 29.8001 m
80.7 29.8001 L
S
8.2 44.2 m
80.7 44.2 L
S
8.2 58.6001 m
80.7 58.6001 L
S
8.2 73.0002 m
80.7 73.0002 L
S
%AI6_EndPatternLayer
) &
] E
%AI3_EndPattern
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI8_BeginBrushPattern
(New Pattern 1)0 A
u
1 Ap
0 J 0 j 1 w 4 M []0 d0 XR
-7842.75 8611.8896 m
-7842.75 8587.8896 L
-7892.75 8587.8896 L
-7892.75 8611.8896 L
-7842.75 8611.8896 L
n
u
0 Ap
0 O
1 g
-7862.75 8609.8896 m
-7874.96 8612.9424 -7883.4434 8602.9502 -7892.75 8595.8408 C
F
-7852.75 8609.8896 m
-7869.1279 8613.9844 -7878.8008 8594.6123 -7892.75 8590.2051 C
F
-7892.75 8589.8896 m
-7872.75 8584.8896 -7862.75 8614.8896 -7842.75 8609.8896 C
F
-7882.75 8589.8896 m
-7866.3721 8585.7949 -7856.6992 8605.167 -7842.75 8609.5742 C
F
-7872.75 8589.8896 m
-7860.54 8586.8369 -7852.0566 8596.8291 -7842.75 8603.9385 C
F
-7852.75 8589.8896 m
-7849.1279 8588.9844 -7845.8354 8589.2305 -7842.75 8590.2051 C
F
-7882.75 8609.8896 m
-7886.3721 8610.7949 -7889.6655 8610.5488 -7892.75 8609.5742 C
F
-7852.7817 8590.0146 m
-7858.9009 8588.5059 -7862.7817 8590.0146 V
-7866.8774 8588.5381 -7872.7817 8590.0146 V
-7877.7446 8588.3389 -7882.7817 8590.0146 V
-7888.7969 8588.4639 -7892.7817 8590.0146 V
-7892.7817 8609.6992 L
-7889.6958 8610.6738 -7886.2969 8610.8809 -7882.3799 8609.7979 C
-7876.2134 8611.3809 -7872.4634 8609.7979 V
-7867.4634 8611.3809 -7862.3799 8609.7139 V
-7858.0474 8611.2979 -7852.3799 8609.7979 V
-7846.8799 8611.2139 -7842.7817 8610.0146 V
-7842.7817 8590.3301 L
-7845.5254 8589.3184 -7848.6514 8588.8184 -7852.7817 8590.0146 C
f
0 R
0 G
1 J 1 j 0.5 w-7872.75 8609.8896 m
-7880.54 8611.8369 -7886.8135 8608.4746 -7892.75 8603.9385 C
S
-7862.75 8609.8896 m
-7874.96 8612.9424 -7883.4434 8602.9502 -7892.75 8595.8408 C
S
-7852.75 8609.8896 m
-7869.1279 8613.9844 -7878.8008 8594.6123 -7892.75 8590.2051 C
S
-7892.75 8589.8896 m
-7872.75 8584.8896 -7862.75 8614.8896 -7842.75 8609.8896 C
S
-7882.75 8589.8896 m
-7866.3721 8585.7949 -7856.6992 8605.167 -7842.75 8609.5742 C
S
-7872.75 8589.8896 m
-7860.54 8586.8369 -7852.0566 8596.8291 -7842.75 8603.9385 C
S
-7862.75 8589.8896 m
-7854.96 8587.9424 -7848.6875 8591.3047 -7842.75 8595.8408 C
S
-7852.75 8589.8896 m
-7849.1279 8588.9844 -7845.8354 8589.2305 -7842.75 8590.2051 C
S
-7882.75 8609.8896 m
-7886.3721 8610.7949 -7889.6655 8610.5488 -7892.75 8609.5742 C
S
U
U
%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(New Pattern 10)0 A
u
0 J 0 j 1 w 4 M []0 d0 XR
-7892 8610.8896 m
-7841.8921 8610.8896 L
-7841.8921 8554.8652 L
-7892 8554.8652 L
-7892 8610.8896 L
n
u
0 O
0.1 1 1 0 k
-7854.9014 8576.4648 m
-7856.7178 8569.9854 -7866.8247 8573.3555 Y
-7866.7915 8573.4199 L
-7876.8999 8570.0508 -7878.7144 8576.5293 V
-7884.6758 8593.8965 -7879.4922 8600.6348 V
-7872.7529 8610.2266 -7868.6055 8610.2266 V
-7865.0103 8610.1602 L
-7860.8638 8610.1602 -7854.1255 8600.5713 Y
-7848.9409 8593.832 -7854.9014 8576.4648 Y
f
u
0 0 0 1 k
-7859.3926 8554.8652 m
-7860.1167 8556.3096 -7860.9238 8557.3652 V
-7860.4058 8556.9531 -7859.5151 8556.082 -7859.3926 8554.8652 C
f
-7873.0645 8557.375 m
-7873.8711 8556.3203 -7874.5942 8554.876 Y
-7874.4727 8556.0918 -7873.5825 8556.9629 -7873.0645 8557.375 C
f
U
0 0.61 0.74 0 k
-7858.5977 8579.3506 m
-7859.9038 8574.6855 -7867.1816 8577.1113 Y
-7867.1567 8577.1582 L
-7874.4365 8574.7324 -7875.7417 8579.3975 V
-7880.0337 8591.9014 -7876.3018 8596.7529 V
-7871.4487 8603.6582 -7868.4634 8603.6582 V
-7865.8755 8603.6123 L
-7862.8887 8603.6123 -7858.0366 8596.707 Y
-7854.3042 8591.8535 -7858.5977 8579.3506 Y
f
u
1 Ap
0.73 0.43 1 0.22 k
0 R
0 0 0 1 K
-7862.6226 8582.165 m
-7861.8135 8582.165 -7861.1558 8581.5078 -7861.1558 8580.6992 c
-7861.1558 8579.8896 -7861.8135 8579.2324 -7862.6226 8579.2324 c
-7863.4321 8579.2324 -7864.0889 8579.8896 -7864.0889 8580.6992 c
-7864.0889 8581.5078 -7863.4321 8582.165 -7862.6226 8582.165 c
b
-7862.3638 8593.8867 m
-7861.0806 8593.8867 -7860.0415 8593.0098 -7860.0415 8591.9316 c
-7860.0415 8590.8516 -7861.0806 8589.9766 -7862.3638 8589.9766 c
-7863.6455 8589.9766 -7864.6846 8590.8516 -7864.6846 8591.9316 c
-7864.6846 8593.0098 -7863.6455 8593.8867 -7862.3638 8593.8867 c
b
-7861.8345 8605.6758 m
-7860.2817 8605.6758 -7859.0239 8605.0195 -7859.0239 8604.2109 c
-7859.0239 8603.4014 -7860.2817 8602.7441 -7861.8345 8602.7441 c
-7863.3862 8602.7441 -7864.6455 8603.4014 -7864.6455 8604.2109 c
-7864.6455 8605.0195 -7863.3862 8605.6758 -7861.8345 8605.6758 c
b
-7857.6104 8577.416 m
-7856.8687 8577.416 -7856.2671 8576.7051 -7856.2671 8575.8262 c
-7856.2671 8574.9492 -7856.8687 8574.2373 -7857.6104 8574.2373 c
-7858.3535 8574.2373 -7858.9546 8574.9492 -7858.9546 8575.8262 c
-7858.9546 8576.7051 -7858.3535 8577.416 -7857.6104 8577.416 c
b
-7856.0034 8598.9727 m
-7856.8818 8598.625 -7857.1494 8597.2246 -7856.6035 8595.8438 c
-7856.0566 8594.4648 -7854.9014 8593.626 -7854.0234 8593.9746 c
-7853.1455 8594.3223 -7852.8774 8595.7227 -7853.4233 8597.1035 c
-7853.9702 8598.4844 -7855.1255 8599.3213 -7856.0034 8598.9727 c
b
u
-7871.0566 8582.0488 m
-7871.8662 8582.0488 -7872.5239 8581.3916 -7872.5239 8580.583 c
-7872.5239 8579.7725 -7871.8662 8579.1162 -7871.0566 8579.1162 c
-7870.2485 8579.1162 -7869.5913 8579.7725 -7869.5913 8580.583 c
-7869.5913 8581.3916 -7870.2485 8582.0488 -7871.0566 8582.0488 c
b
-7871.3159 8593.7695 m
-7872.5991 8593.7695 -7873.6382 8592.8945 -7873.6382 8591.8145 c
-7873.6382 8590.7344 -7872.5991 8589.8594 -7871.3159 8589.8594 c
-7870.0342 8589.8594 -7868.9951 8590.7344 -7868.9951 8591.8145 c
-7868.9951 8592.8945 -7870.0342 8593.7695 -7871.3159 8593.7695 c
b
-7871.8457 8605.5605 m
-7873.3975 8605.5605 -7874.6558 8604.9043 -7874.6558 8604.0938 c
-7874.6558 8603.2832 -7873.3975 8602.6279 -7871.8457 8602.6279 c
-7870.2935 8602.6279 -7869.0352 8603.2832 -7869.0352 8604.0938 c
-7869.0352 8604.9043 -7870.2935 8605.5605 -7871.8457 8605.5605 c
b
-7876.0679 8577.2988 m
-7876.8115 8577.2988 -7877.4121 8576.5879 -7877.4121 8575.7109 c
-7877.4121 8574.834 -7876.8115 8574.123 -7876.0679 8574.123 c
-7875.3262 8574.123 -7874.7241 8574.834 -7874.7241 8575.7109 c
-7874.7241 8576.5879 -7875.3262 8577.2988 -7876.0679 8577.2988 c
b
-7877.6758 8598.8574 m
-7876.7983 8598.5098 -7876.5298 8597.1084 -7877.0762 8595.7275 c
-7877.6226 8594.3467 -7878.7778 8593.5098 -7879.6558 8593.8574 c
-7880.5342 8594.2061 -7880.8032 8595.6074 -7880.2568 8596.9863 c
-7879.7104 8598.3672 -7878.5552 8599.2051 -7877.6758 8598.8574 c
b
U
U
0 Ap
0 0 0 1 k
-7867.1318 8577.5449 m
-7867.1318 8610.2041 l
F
u
-7851.3906 8563.4199 m
-7852.0815 8562.7266 -7855.0195 8563.5918 Y
-7856.2295 8563.7637 -7856.0562 8566.1836 Y
-7855.0195 8568.2578 -7855.7104 8568.084 Y
-7856.2998 8568.084 -7857.8555 8568.0039 -7858.7822 8567.9531 C
-7859.1226 8566.5586 -7860.6128 8565.3652 -7862.7217 8564.6592 C
-7860.7578 8561.3672 -7862.5176 8560.6846 -7864.2935 8560.6797 C
-7864.3096 8560.5918 -7864.3325 8560.5059 -7864.3599 8560.4229 C
-7862.1089 8560.4688 -7861.6392 8558.1484 Y
-7861.4048 8557.9531 -7861.1606 8557.6758 -7860.9238 8557.3652 C
-7861.1416 8557.5371 -7861.2944 8557.6289 Y
-7862.2583 8557.6289 -7863.8774 8559.3838 -7864.4966 8560.0967 C
-7864.9194 8559.333 -7865.8535 8558.8008 -7866.9434 8558.8008 c
-7868.0698 8558.8008 -7869.0322 8559.3691 -7869.4312 8560.1748 C
-7869.9985 8559.5137 -7871.6968 8557.6406 -7872.6943 8557.6406 C
-7872.8462 8557.5469 -7873.0645 8557.375 V
-7872.8281 8557.6836 -7872.5835 8557.9629 -7872.3481 8558.1582 C
-7871.8638 8560.5459 -7869.5254 8560.4238 V
-7869.5449 8560.4785 -7869.5674 8560.5332 -7869.5806 8560.5918 C
-7872.9238 8560.582 -7871.9375 8563.207 -7871.2104 8564.5498 C
-7873.5918 8565.2656 -7875.2646 8566.5908 -7875.5239 8568.1396 C
-7876.4473 8568.1895 -7877.6729 8568.248 -7878.1802 8568.248 C
-7878.8726 8568.4209 -7877.8354 8566.3477 V
-7877.6626 8563.9287 -7878.8726 8563.7559 V
-7881.8096 8562.8916 -7882.5015 8563.583 V
-7883.1919 8564.4463 -7884.0562 8563.2363 V
-7883.1919 8564.9648 -7881.2915 8564.4463 V
-7878.6982 8563.7559 -7879.3906 8565.4834 V
-7879.9087 8568.9395 -7878.1802 8569.6299 V
-7876.0342 8570.7441 -7874.2822 8570.9785 V
-7873.9087 8571.3037 -7873.4639 8571.6006 -7872.9585 8571.8662 C
-7875.5562 8571.9365 -7878.2246 8572.8105 -7879.0752 8575.8457 C
-7879.5151 8577.1328 -7880.0518 8579.1328 V
-7881.1025 8579.7148 -7882.3022 8580.8975 -7883.5415 8583.1523 C
-7884.3945 8586.3398 -7885.1675 8581.6025 V
-7886.3975 8578.5391 -7887.6504 8578.4277 V
-7886.4702 8580.1768 -7886.9038 8581.3057 V
-7885.2998 8585.8066 -7883.6138 8584.7891 V
-7882.0986 8584.1094 -7880.6885 8581.7051 V
-7881.0698 8583.3867 -7881.4326 8585.3066 -7881.6743 8587.2803 C
-7882.4888 8587.2871 L
-7884.3506 8586.3691 -7884.3262 8589.8486 V
-7885.1226 8593.835 -7884.3594 8596.5723 V
-7883.6475 8599.04 -7886.1274 8597.8203 V
-7887.2842 8598.2139 -7887.9839 8597.6777 V
-7890.3882 8596.3027 -7892 8598.0137 V
-7890.1475 8597.7695 -7889.4482 8598.3066 V
-7887.9785 8598.4512 -7887.8975 8599.0684 V
-7884.9561 8599.7451 -7884.1885 8598.9668 V
-7882.4175 8598.1035 -7883.1304 8595.25 V
-7883.8799 8587.3711 -7882.3198 8589.2949 V
-7882.1182 8589.3115 -7881.8784 8589.4072 V
-7882.1519 8593.3223 -7881.8018 8597.2148 -7879.9961 8599.7412 C
-7883.4536 8592.2227 -7878.2974 8577.1934 Y
-7876.9609 8572.4199 -7871.1274 8572.9912 -7868.1455 8573.624 C
-7868.0718 8575.0195 -7867.8374 8576.8389 -7867.1318 8577.5449 C
-7866.2134 8575.5859 -7866.2358 8573.9629 V
-7865.0762 8573.6113 -7858.2817 8571.7344 -7855.4487 8575.2266 C
-7856.4312 8572.7031 -7858.8262 8571.9082 -7861.2007 8571.8086 C
-7860.6675 8571.5215 -7860.2041 8571.1943 -7859.8257 8570.8398 C
-7858.0415 8570.6758 -7855.7104 8569.4668 Y
-7853.9814 8568.7754 -7854.5015 8565.3203 Y
-7855.1919 8563.5918 -7852.5991 8564.2832 Y
-7850.7002 8564.8008 -7849.8354 8563.0732 Y
-7850.7002 8564.2832 -7851.3906 8563.4199 Y
f
-7845.9082 8597.8418 m
-7846.6074 8598.3789 -7847.7632 8597.9834 Y
-7850.2446 8599.2031 -7849.5327 8596.7363 Y
-7848.7695 8594 -7849.5645 8590.0117 Y
-7849.5415 8586.5342 -7851.4014 8587.4492 Y
-7852.0342 8587.4453 L
-7852.3198 8585.502 -7852.7046 8583.6445 -7853.0898 8582.0596 C
-7851.7129 8584.3096 -7850.2778 8584.9531 Y
-7848.5913 8585.9717 -7846.9878 8581.4688 Y
-7847.4214 8580.3398 -7846.2417 8578.5918 Y
-7847.4937 8578.7021 -7848.7246 8581.7656 Y
-7849.4976 8586.5049 -7850.3511 8583.3164 Y
-7851.5776 8581.0801 -7852.7695 8579.8994 -7853.8145 8579.3125 C
-7854.2026 8577.9531 -7854.4858 8577.1289 Y
-7854.7002 8576.3623 -7855.0337 8575.7383 -7855.4487 8575.2266 C
-7855.3799 8575.4023 -7855.3174 8575.5879 -7855.2632 8575.7813 C
-7849.3022 8593.1484 -7854.4858 8599.8867 V
-7861.2246 8609.4766 -7865.3721 8609.4766 V
-7868.9663 8609.541 L
-7873.1138 8609.541 -7879.8535 8599.9512 Y
-7879.9038 8599.8857 -7879.9463 8599.8115 -7879.9961 8599.7412 C
-7879.7378 8600.3037 -7879.4375 8600.8301 -7879.0752 8601.2988 C
-7872.3359 8610.8896 -7868.1895 8610.8896 V
-7864.5942 8610.8242 L
-7860.4482 8610.8242 -7853.7095 8601.2344 Y
-7851.5801 8598.4668 -7851.3306 8593.9072 -7851.7769 8589.4951 C
-7851.6553 8589.4648 -7851.5698 8589.458 Y
-7850.0112 8587.5371 -7850.7598 8595.4141 Y
-7851.4746 8598.2686 -7849.7026 8599.1299 Y
-7848.9351 8599.9082 -7845.9946 8599.2324 Y
-7845.9136 8598.6152 -7844.4434 8598.4707 Y
-7843.7446 8597.9346 -7841.8921 8598.1777 Y
-7843.5024 8596.4668 -7845.9082 8597.8418 Y
f
U
U
U
%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(New Pattern 2)0 A
u
0 J 0 j 1 w 4 M []0 d0 XR
-7892 8610.8896 m
-7827.1875 8610.8896 L
-7827.1875 8546.792 L
-7892 8546.792 L
-7892 8610.8896 L
n
u
0 O
0 g
-7857.6978 8569.3193 m
-7859.6094 8546.792 L
-7861.5215 8569.3193 L
-7860.9033 8569.1963 -7860.2642 8569.1299 -7859.6094 8569.1299 c
-7858.9551 8569.1299 -7858.3159 8569.1963 -7857.6978 8569.3193 C
f
-7869.2402 8577.2871 m
-7892 8579.2197 L
-7869.1138 8581.1631 L
-7869.2856 8580.4365 -7869.3848 8579.6826 -7869.3848 8578.9053 c
-7869.3848 8578.3525 -7869.3281 8577.8145 -7869.2402 8577.2871 C
f
-7864.5195 8570.4619 m
-7878.1626 8561.6943 L
-7868.2153 8574.2666 L
-7867.3574 8572.6807 -7866.0718 8571.3662 -7864.5195 8570.4619 C
f
-7861.4814 8588.4971 m
-7859.5786 8610.8896 L
-7857.6768 8588.4863 L
-7858.3018 8588.6123 -7858.9473 8588.6807 -7859.6094 8588.6807 c
-7860.25 8588.6807 -7860.8735 8588.6143 -7861.4814 8588.4971 C
f
-7849.9609 8580.3965 m
-7827.1875 8578.4629 L
-7850.0835 8576.5186 L
-7850.0835 8576.7402 L
-7849.9258 8577.4385 -7849.8345 8578.1592 -7849.8345 8578.9053 c
-7849.8345 8579.4131 -7849.8848 8579.9092 -7849.9609 8580.3965 C
f
-7868.1138 8583.7158 m
-7878.1641 8596.4189 L
-7864.2778 8587.4951 L
-7865.8823 8586.6201 -7867.2114 8585.3057 -7868.1138 8583.7158 C
f
-7850.9961 8574.2842 m
-7840.8755 8561.4951 L
-7854.7666 8570.4209 L
-7853.1768 8571.3311 -7851.8633 8572.6689 -7850.9961 8574.2842 C
f
-7854.6895 8587.3408 m
-7840.8735 8596.2178 L
-7850.9658 8583.4629 L
-7851.8198 8585.0791 -7853.1152 8586.4209 -7854.6895 8587.3408 C
f
-7850.8887 8583.5029 m
-7850.3862 8582.5537 -7850.0435 8581.5107 -7849.8755 8580.4092 c
-7849.7993 8579.9189 -7849.7485 8579.417 -7849.7485 8578.9053 c
-7849.7485 8578.1533 -7849.8398 8577.4248 -7849.9985 8576.7207 c
-7850.1958 8575.8467 -7850.5049 8575.0137 -7850.9185 8574.2441 c
-7851.7954 8572.6143 -7853.1191 8571.2637 -7854.7241 8570.3457 c
-7855.6294 8569.8271 -7856.6226 8569.4434 -7857.6802 8569.2354 c
-7858.3047 8569.1104 -7858.9497 8569.042 -7859.6094 8569.042 c
-7860.2695 8569.042 -7860.9155 8569.1104 -7861.5391 8569.2354 c
-7862.6235 8569.4502 -7863.6382 8569.8467 -7864.5625 8570.3857 c
-7866.1313 8571.2998 -7867.4282 8572.626 -7868.2915 8574.2246 c
-7868.7969 8575.1592 -7869.1455 8576.1865 -7869.3262 8577.2725 c
-7869.4155 8577.8057 -7869.4727 8578.3486 -7869.4727 8578.9053 c
-7869.4727 8579.6904 -7869.3711 8580.4502 -7869.1978 8581.1826 c
-7868.9814 8582.0967 -7868.6406 8582.9629 -7868.1875 8583.7598 c
-7867.2793 8585.3623 -7865.9395 8586.6904 -7864.3174 8587.5723 c
-7863.4487 8588.0449 -7862.5 8588.3877 -7861.4961 8588.583 c
-7860.8848 8588.7012 -7860.2554 8588.7676 -7859.6094 8588.7676 c
-7858.9414 8588.7676 -7858.29 8588.6982 -7857.6602 8588.5723 c
-7856.5786 8588.3564 -7855.5664 8587.9551 -7854.6455 8587.417 c
-7853.0566 8586.4873 -7851.7515 8585.1338 -7850.8887 8583.5029 c
f
U
U
%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(New Pattern 3)0 A
u
1 Ap
0 J 0 j 1 w 4 M []0 d0 XR
-7882.75 8611.8896 m
-7882.75 8587.8896 L
-7892.75 8587.8896 L
-7892.75 8611.8896 L
-7882.75 8611.8896 L
n
u
u
0 Ap
0 O
1 g
-7883.4058 8603.4258 m
-7882.9878 8602.3252 -7882.75 8601.1367 -7882.75 8599.8896 c
-7882.75 8598.0273 -7883.2681 8596.29 -7884.1543 8594.7969 c
-7885.8975 8591.8633 -7889.0898 8589.8896 -7892.75 8589.8896 C
-7892.75 8609.8896 L
-7892.4297 8609.8896 -7892.1143 8609.8711 -7891.8018 8609.8418 c
-7889.9121 8609.665 -7888.1807 8608.9541 -7886.7441 8607.8721 c
-7885.2471 8606.7441 -7884.0801 8605.208 -7883.4058 8603.4258 c
f
0 R
0 G
1 J 1 j 0.5 w-7892.75 8590.207 m
-7889.7207 8591.1641 -7886.8926 8592.8223 -7884.1543 8594.7969 C
S
-7892.75 8595.8408 m
-7889.5991 8598.2461 -7886.5435 8600.9766 -7883.4058 8603.4258 C
S
-7886.7441 8607.8721 m
-7888.8105 8606.7813 -7890.7993 8605.4238 -7892.75 8603.9326 C
S
-7891.8018 8609.8418 m
-7892.1191 8609.7578 -7892.4375 8609.6748 -7892.75 8609.5762 C
S
-7886.7441 8607.8721 m
-7888.1807 8608.9541 -7889.9121 8609.6641 -7891.8018 8609.8418 C
S
-7883.4058 8603.4258 m
-7882.9878 8602.3252 -7882.75 8601.1367 -7882.75 8599.8896 c
-7882.75 8598.0273 -7883.2681 8596.29 -7884.1543 8594.7969 C
S
-7892.75 8609.8896 m
-7892.4297 8609.8896 -7892.1143 8609.8711 -7891.8018 8609.8418 C
S
-7886.7441 8607.8721 m
-7885.2471 8606.7441 -7884.0801 8605.208 -7883.4058 8603.4258 C
S
-7884.1543 8594.7969 m
-7885.8975 8591.8633 -7889.0898 8589.8896 -7892.75 8589.8896 C
S
U
U
U
%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(New Pattern 34)0 A
u
0 J 0 j 1 w 4 M []0 d0 XR
-7892.0254 8610.916 m
-7836.0542 8610.916 L
-7836.0542 8549.4238 L
-7892.0254 8549.4238 L
-7892.0254 8610.916 L
n
u
u
0 O
0.0745 0.9 0.9019 0.18 k
0 R
0 0 0 1 K
1 J 1 j 0.0518 w-7865.5991 8587.6113 m
-7865.3594 8598.4111 -7870.8794 8608.7295 v
-7870.4009 8610.8896 -7868.9595 8610.8896 v
-7869.2002 8607.5303 -7868.2393 8607.0508 v
-7863.9199 8595.0498 -7864.6382 8587.1299 v
-7865.5991 8587.6113 l
b
-7865.5991 8587.6113 m
-7867.2793 8592.8896 -7879.0391 8594.0908 v
-7883.3594 8594.5703 -7883.5991 8596.0107 v
-7877.1206 8586.4092 -7876.1602 8586.6504 v
-7889.3594 8580.8906 -7892 8575.6094 v
-7886.9595 8578.4902 -7883.5991 8576.3301 v
-7875.6802 8576.0908 -7870.6406 8578.251 v
-7866.8008 8580.1709 -7874.7202 8564.0908 v
-7870.8794 8575.8506 -7867.2793 8549.4502 v
-7866.3198 8554.7305 -7864.8799 8556.1709 v
-7858.8799 8563.8506 -7859.8398 8566.0107 v
-7860.3198 8569.8506 -7855.7598 8563.6104 v
-7856 8573.2109 -7858.4009 8576.5703 v
-7860.5591 8580.1709 -7854.5591 8578.0107 v
-7848.5591 8576.0908 -7843.2793 8577.7705 v
-7837.7598 8579.21 -7836.0801 8576.3301 v
-7847.8398 8588.8105 -7853.5991 8588.5703 v
-7851.9194 8592.1709 l
-7849.5195 8596.9707 -7850 8598.1709 v
-7865.2681 8588.7725 -7865.5991 8587.6113 v
b
-7865.5991 8587.6113 m
-7862.9595 8569.1299 -7865.5991 8561.4502 v
-7867.9985 8550.8906 -7867.2793 8549.4502 v
S
-7864.1602 8576.3301 m
-7858.1602 8571.5303 -7856.9595 8566.25 v
S
-7864.1602 8575.6094 m
-7873.0391 8567.9307 -7874.7202 8564.0908 v
S
-7836.0801 8576.3301 m
-7837.2793 8578.4902 -7865.3594 8586.6504 y
-7870.4009 8581.1318 -7881.9199 8578.7305 v
-7889.5986 8577.7705 -7892 8575.6094 v
S
-7882.6382 8594.5703 m
-7871.1191 8585.4512 -7865.3594 8586.6504 y
-7851.1992 8592.8896 -7850 8598.1709 v
S
U
U
U
%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(New Pattern 36)0 A
u
0 J 0 j 1 w 4 M []0 d0 XR
-7891.8496 8610.8857 m
-7841.96 8610.8857 L
-7841.96 8559.8154 L
-7891.8496 8559.8154 L
-7891.8496 8610.8857 L
n
u
0 O
0.025 0.1 0.475 0 k
-7870.1504 8578.7939 m
-7872.4766 8577.7021 -7874.6914 8577.333 -7876.3735 8577.8135 c
-7877.0518 8578.0068 -7877.6455 8578.3369 -7878.1235 8578.8135 c
-7878.6006 8579.292 -7878.9297 8579.8848 -7879.1235 8580.5625 c
-7880.0088 8583.6611 -7878.0103 8588.5674 -7873.9233 8592.6563 c
-7869.8345 8596.7432 -7864.9297 8598.7412 -7861.8286 8597.8564 c
-7861.1519 8597.6611 -7860.5586 8597.332 -7860.0806 8596.8555 c
-7859.6035 8596.3779 -7859.2754 8595.7852 -7859.0825 8595.1064 c
-7858.5176 8593.1357 -7859.1226 8590.4346 -7860.6855 8587.6787 c
-7861.5825 8586.0996 -7862.7915 8584.5029 -7864.2793 8583.0127 c
-7866.1504 8581.1436 -7868.1914 8579.7139 -7870.1504 8578.7939 c
f
u
0.0035 0.014 0.0665 0 k
-7869.2183 8577.8623 m
-7871.8306 8576.9111 -7874.3975 8576.8584 -7876.3735 8577.8135 C
-7874.6914 8577.333 -7872.4766 8577.7021 -7870.1504 8578.7939 c
-7869.6191 8579.0439 -7869.0806 8579.333 -7868.5435 8579.6572 C
-7866.8984 8578.9434 L
-7867.6675 8578.5068 -7868.4434 8578.1436 -7869.2183 8577.8623 c
f
0.015 0.06 0.285 0 k
-7866.8984 8578.9434 m
-7868.5435 8579.6572 L
-7867.0962 8580.5244 -7865.6426 8581.6504 -7864.2793 8583.0127 c
-7864.1538 8583.1396 -7864.0327 8583.2676 -7863.9102 8583.3955 C
-7863.2153 8581.7529 L
-7864.3706 8580.6133 -7865.6191 8579.6709 -7866.8984 8578.9434 C
f
U
u
0.039 0.156 0.741 0 k
-7857.6875 8566.2939 m
-7857.9746 8566.5811 -7869.2183 8577.8623 Y
-7868.4434 8578.1436 -7867.6675 8578.5068 -7866.8984 8578.9434 C
-7853.4146 8565.46 L
-7855.0615 8564.9893 -7856.6406 8565.2451 -7857.6875 8566.2939 c
f
0.025 0.1 0.475 0 k
-7853.4146 8565.46 m
-7866.8984 8578.9434 L
-7865.5845 8579.6924 -7864.2969 8580.665 -7863.1143 8581.8467 c
-7863.0845 8581.876 -7863.0586 8581.9053 -7863.0278 8581.9346 C
-7849.3408 8568.2471 L
-7849.5264 8568.0225 -7849.7202 8567.8037 -7849.9302 8567.5908 c
-7851.0103 8566.5127 -7852.2305 8565.7979 -7853.4146 8565.46 C
f
U
u
0.0115 0.046 0.2185 0 k
-7843.9346 8575.2822 m
-7841.5337 8572.8789 -7841.3354 8568.9795 -7843.1382 8565.5869 C
-7844.2954 8566.0078 L
-7842.0938 8569.3857 -7841.8398 8573.1846 -7843.9346 8575.2822 c
f
0.015 0.06 0.285 0 k
-7851.5337 8560.4854 m
-7850.5825 8559.8154 L
-7853.2046 8559.2412 -7855.8306 8559.8037 -7857.6206 8561.5957 c
-7856.1719 8560.1475 -7853.9082 8559.8203 -7851.5337 8560.4854 C
f
0.0295 0.118 0.5605 0 k
-7851.5337 8560.4854 m
-7853.9082 8559.8203 -7856.1719 8560.1475 -7857.6206 8561.5957 c
-7859.0195 8562.9951 -7859.3706 8565.1533 -7858.7954 8567.4365 C
-7856.8672 8564.4346 -7853.4082 8565.4434 V
-7851.5854 8560.5205 L
-7851.5337 8560.4854 L
f
*u
1 D
0.048 0.192 0.912 0 k
-7843.9346 8575.2822 m
-7845.2817 8576.6279 -7847.3325 8577.0029 -7849.5234 8576.5166 C
-7859.6714 8586.6631 L
-7859.7695 8586.458 -7859.7695 8586.458 -7859.6714 8586.6631 c
-7858.2246 8589.7041 -7857.9702 8592.8057 -7859.0825 8595.1064 C
-7858.5176 8593.1357 -7859.1226 8590.4346 -7860.6855 8587.6787 c
-7861.5054 8586.2334 -7862.5918 8584.7744 -7863.9102 8583.3955 C
-7863.2153 8581.7529 L
-7863.1816 8581.7842 -7863.1465 8581.8135 -7863.1143 8581.8467 c
-7863.0845 8581.8779 -7863.0566 8581.9072 -7863.0273 8581.9365 c
-7863.0278 8581.9365 -7863.0278 8581.9365 -7863.0278 8581.9346 C
-7849.3408 8568.2471 L
-7844.3262 8566.0186 L
-7844.2954 8566.0078 L
-7842.0938 8569.3857 -7841.8398 8573.1846 -7843.9346 8575.2822 c
f
*U
0 D
0.0215 0.086 0.4085 0 k
-7850.5825 8559.8154 m
-7851.5337 8560.4854 L
-7849.6846 8561.001 -7847.7656 8562.1182 -7846.1138 8563.7725 c
-7845.4063 8564.4785 -7844.7998 8565.2314 -7844.2954 8566.0078 C
-7843.1382 8565.5869 L
-7843.6553 8564.6143 -7844.3374 8563.6826 -7845.1802 8562.8408 c
-7846.7695 8561.249 -7848.6758 8560.2324 -7850.5825 8559.8154 C
f
0.0205 0.082 0.3895 0 k
-7844.2954 8566.0078 m
-7844.7998 8565.2314 -7845.4063 8564.4785 -7846.1138 8563.7725 c
-7847.7656 8562.1182 -7849.6846 8561.001 -7851.5337 8560.4854 C
-7851.5854 8560.5205 L
-7853.4082 8565.4434 L
-7852.2114 8565.8115 -7850.9878 8566.5332 -7849.9302 8567.5908 c
-7849.7202 8567.8037 -7849.5264 8568.0225 -7849.3408 8568.2471 C
-7844.3262 8566.0186 L
-7844.2954 8566.0078 L
f
U
u
0.445 0.356 0.267 0 k
-7891.8496 8610.8857 m
-7869.9575 8587.8584 L
-7870.2007 8587.5391 -7870.5752 8587.5029 -7870.8887 8587.5488 C
-7875.1802 8592.1787 -7886.3145 8604.3457 -7890.7266 8609.1689 C
-7891.5649 8610.2412 -7892 8610.8828 -7891.8496 8610.8857 C
f
0.15 0.12 0.09 0 k
-7891.8345 8610.8857 m
-7890.6606 8610.5928 -7869.6934 8588.8926 Y
-7869.6934 8588.3916 -7869.7993 8588.0654 -7869.9575 8587.8584 C
-7891.8496 8610.8857 L
-7891.8442 8610.8857 -7891.8418 8610.8896 -7891.8345 8610.8857 c
f
0.2 0.16 0.12 0 k
-7890.7266 8609.1689 m
-7886.3145 8604.3457 -7875.1802 8592.1787 -7870.8887 8587.5488 C
-7871.2002 8587.5938 -7871.4526 8587.7197 Y
-7872.6035 8588.0225 -7886.5742 8603.8516 -7890.7266 8609.1689 C
f
U
U
U
%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(New Pattern 37)0 A
u
0 J 0 j 1 w 4 M []0 d0 XR
-7890.9502 8610.1221 m
-7841.0391 8610.1221 L
-7841.0391 8546.0049 L
-7890.9502 8546.0049 L
-7890.9502 8610.1221 L
n
u
0 O
0 0 0 1 k
0 R
0 0 0 1 K
0 w-7841.2358 8546.0049 m
-7841.6064 8546.1377 -7841.9858 8546.1729 -7842.3833 8546.0928 c
-7842.4863 8546.0576 l
-7842.5254 8546.0498 -7842.5703 8546.0684 -7842.6025 8546.0889 c
-7842.9434 8546.2822 l
-7846.7129 8548.1855 -7850.0962 8550.7861 -7852.5 8554.3369 c
-7853.9634 8556.4814 -7855.1235 8558.7686 -7856.7993 8560.7461 c
-7857.1729 8561.0986 -7857.1758 8561.6621 -7856.8345 8562.0205 c
-7856.4951 8562.3906 -7855.9185 8562.3975 -7855.5615 8562.0547 c
-7855.4038 8562.0996 l
-7855.2642 8562.0186 -7855.0742 8561.96 -7855.0234 8561.8467 c
-7853.8535 8559.0928 -7853.1895 8556.4033 -7851.4336 8554.0283 c
-7849.1719 8550.9844 -7846.1777 8548.8838 -7843.0298 8546.9131 c
-7842.3672 8546.4951 L
-7842.4966 8546.5244 L
-7841.7695 8546.5322 l
-7841.7915 8546.501 -7841.8008 8546.4854 -7841.8223 8546.4541 C
-7841.6064 8546.4131 -7841.3774 8546.3643 -7841.1626 8546.3232 c
-7841.0762 8546.3135 -7841.0186 8546.2285 -7841.0391 8546.1279 c
-7841.0503 8546.042 -7841.1382 8545.998 -7841.2358 8546.0049 c
-7841.2358 8546.0049 l
b
-7857.2222 8559.8848 m
-7857.5742 8559.6963 -7857.9658 8559.5615 -7858.2485 8559.2783 c
-7864.4521 8553.0615 -7874.6802 8552.1631 -7882.0488 8558.5752 C
-7882.1582 8558.6709 -7882.1582 8558.8467 -7882.0635 8558.9541 C
-7879.0527 8557.833 -7870.8838 8559.2646 -7867.3223 8562.3018 C
-7867.2534 8562.3564 -7867.1465 8562.3428 -7867.1055 8562.2607 C
-7867.0503 8562.1943 -7867.0664 8562.085 -7867.1328 8562.0459 C
-7870.5625 8558.9756 -7875.0674 8557.1797 -7879.6729 8557.6377 C
-7876.8535 8556.0752 -7873.6313 8555.3838 -7870.3984 8555.5781 c
-7865.7144 8555.8613 -7861.4634 8558.0088 -7857.3711 8560.1689 c
-7857.2915 8560.209 -7857.1978 8560.1826 -7857.1553 8560.1006 C
-7857.1016 8560.0205 -7857.1426 8559.9248 -7857.2222 8559.8848 c
b
-7866.6475 8561.2256 m
-7868.2266 8565.251 -7870.3911 8569.21 -7873.8018 8571.9658 c
-7873.9648 8572.1016 -7873.9946 8572.3389 -7873.8711 8572.4951 c
-7873.7344 8572.6572 -7873.5049 8572.6689 -7873.3481 8572.5459 c
-7869.1235 8570.4863 -7866.1904 8566.0205 -7866.1626 8561.291 c
-7866.1626 8561.291 l
-7866.1328 8561.1572 -7866.2354 8561.0244 -7866.3633 8561.0117 c
-7866.5039 8560.9951 -7866.6318 8561.0869 -7866.6475 8561.2256 c
-7866.6475 8561.2256 l
b
-7860.9414 8565.9072 m
-7861.0425 8566.0713 -7861.1152 8566.2734 -7861.2617 8566.3721 c
-7864.0806 8568.2803 -7866.9785 8569.5205 -7869.8848 8571.0225 c
-7870.0503 8571.0986 -7870.1118 8571.3076 -7870.0313 8571.46 c
-7869.9512 8571.6123 -7869.7559 8571.6689 -7869.5898 8571.5938 c
-7866.4395 8570.2129 -7862.3135 8569.3896 -7860.6729 8566.0693 c
-7860.6289 8566.001 -7860.6455 8565.9043 -7860.7266 8565.8545 c
-7860.7959 8565.8096 -7860.8975 8565.8389 -7860.9414 8565.9072 c
-7860.9414 8565.9072 l
b
-7860.6602 8566.8076 m
-7860.4438 8567.3193 -7860.1431 8567.7793 -7860.0503 8568.3252 c
-7859.2183 8573.167 -7859.1152 8577.9316 -7860.2485 8582.5771 c
-7860.2485 8582.5771 l
-7860.3418 8582.8428 -7860.2114 8583.1338 -7859.9438 8583.2285 c
-7859.6777 8583.3232 -7859.3882 8583.2021 -7859.2935 8582.9375 c
-7857.2935 8577.7012 -7857.8975 8571.627 -7860.3711 8566.6729 c
-7860.4063 8566.5898 -7860.4985 8566.5586 -7860.5825 8566.5811 c
-7860.6641 8566.6172 -7860.6978 8566.7246 -7860.6602 8566.8076 c
-7860.6602 8566.8076 l
b
-7859.5352 8582.4834 m
-7856.8984 8580.1172 -7854.6816 8577.1416 -7853.8535 8573.626 c
-7853.8535 8573.626 l
-7853.7246 8573.0713 -7854.0742 8572.5127 -7854.6416 8572.3799 c
-7855.1992 8572.2646 -7855.7578 8572.6143 -7855.8862 8573.1689 c
-7856.5649 8576.4209 -7857.8711 8579.5625 -7859.7954 8582.2764 c
-7859.7954 8582.2764 l
-7859.8462 8582.3447 -7859.8345 8582.4473 -7859.7695 8582.5098 c
-7859.6992 8582.5596 -7859.5977 8582.5479 -7859.5352 8582.4834 c
-7859.5352 8582.4834 l
b
-7844.3711 8575.0723 m
-7845.7114 8570.7197 -7848.2598 8566.959 -7851.6895 8564.043 C
-7851.7295 8563.9619 -7851.8242 8563.9219 -7851.9038 8563.9756 C
-7851.9863 8564.0166 -7852.0122 8564.1104 -7851.9722 8564.1914 C
-7851.9575 8564.6787 -7851.7144 8565.123 -7851.4458 8565.4209 c
-7846.4063 8571.0518 -7842.9902 8579.6094 -7845.3433 8586.8447 C
-7845.0762 8581.3408 -7846.7241 8575.1904 -7850.1362 8570.5635 c
-7851.1606 8569.1592 -7852.7422 8569.0107 -7854.3081 8569.0928 C
-7854.4023 8569.0791 -7854.4834 8569.1328 -7854.4961 8569.2266 c
-7854.5098 8569.3086 -7854.4551 8569.4033 -7854.3623 8569.415 C
-7851.1479 8570.6592 -7849.4878 8574.1143 -7848.0845 8577.084 c
-7846.4155 8580.6338 -7845.7017 8584.5283 -7846.0054 8588.3896 C
-7846.0454 8588.5674 -7846.1138 8590.2871 -7845.9775 8590.2998 C
-7845.8306 8590.3291 -7845.7095 8590.2334 -7845.6802 8590.084 C
-7845.6455 8589.9346 -7842.6426 8580.6885 -7844.3711 8575.0723 c
b
-7852.4863 8562.3809 m
-7851.3945 8558.5107 -7849.1094 8555.1406 -7846.4824 8552.1279 c
-7846.3306 8551.9941 -7846.3145 8551.7764 -7846.4502 8551.625 c
-7846.5752 8551.4902 -7846.8047 8551.4717 -7846.9575 8551.6074 c
-7850.3306 8554.2217 -7851.4487 8558.4307 -7852.7954 8562.2646 c
-7852.7954 8562.2646 l
-7852.8262 8562.3545 -7852.7754 8562.4482 -7852.6982 8562.4766 c
-7852.6094 8562.5088 -7852.5166 8562.458 -7852.4863 8562.3809 c
-7852.4863 8562.3809 l
b
-7846.5313 8586.999 m
-7846.5991 8586.9463 -7846.7075 8586.9727 -7846.7485 8587.04 C
-7846.9634 8587.3643 -7848.6914 8589.4092 -7849.3926 8590.0303 c
-7854.1719 8594.2842 -7857.5137 8598.8506 -7865.5391 8602.6123 c
-7872.4512 8605.8535 -7875.1113 8608.4854 -7882.3862 8606.7158 c
-7885.6875 8605.9189 -7887.0313 8605.4209 -7888.4351 8600.3447 C
-7889.9473 8594.1885 -7888.8672 8596.6729 -7889.0845 8589.3281 c
-7889.2222 8584.5869 -7892 8573.3447 -7879.5254 8559.1494 C
-7879.4199 8559.0381 -7879.4336 8558.8857 -7879.5337 8558.7969 C
-7879.6328 8558.6924 -7879.7959 8558.7061 -7879.8862 8558.8057 C
-7885.5786 8563.6064 -7889.0234 8570.5479 -7890.3145 8577.832 c
-7891.2871 8583.3564 -7890.9199 8588.1396 -7890.6665 8594.5264 c
-7890.5688 8596.9834 -7891.6855 8603.9619 -7886.9102 8607.9521 c
-7883.3926 8610.8896 -7878.3911 8610.4365 -7874.3545 8609.0459 c
-7868.6992 8607.1016 -7863.9727 8604.0361 -7858.8711 8600.499 c
-7855.2656 8598.0146 -7847.2881 8588.1748 -7846.4785 8587.2158 C
-7846.4351 8587.1484 -7846.4502 8587.04 -7846.5313 8586.999 C
b
-7881.0503 8574.1953 m
-7880.1685 8573.3926 -7879.7017 8574.7354 -7879.4297 8575.4912 c
-7879.1626 8576.2471 -7878.1895 8576.1396 -7878.5127 8576.4629 c
-7878.8369 8576.7871 -7878.8369 8576.8418 -7879.3232 8576.4092 c
-7879.8086 8575.9775 -7879.8086 8576.626 -7880.5649 8576.1396 c
-7881.3198 8575.6523 -7881.6455 8574.7354 -7881.0503 8574.1953 c
b
-7873.6519 8578.8389 m
-7873.3657 8578.4814 -7872.6802 8578.4619 -7872.4648 8578.7842 c
-7872.25 8579.1094 -7871.3306 8579.1631 -7871.4937 8579.4863 c
-7871.6543 8579.8115 -7871.6016 8580.0283 -7872.0874 8579.8115 c
-7872.5737 8579.5947 -7872.4121 8580.1895 -7872.8975 8579.9736 c
-7873.3833 8579.7568 -7873.8687 8579.1094 -7873.6519 8578.8389 c
b
-7865.6074 8583.9688 m
-7865.1206 8583.6455 -7863.8794 8584.4014 -7864.4727 8584.4014 c
-7865.0674 8584.4014 -7864.3115 8585.1572 -7864.8521 8585.373 c
-7865.3906 8585.5889 -7865.2832 8585.3193 -7865.6074 8585.5342 c
-7865.9297 8585.751 -7866.3633 8586.1289 -7866.5239 8585.3193 c
-7866.6855 8584.5088 -7866.3633 8584.5088 -7865.9849 8584.2393 c
-7865.6074 8583.9688 -7865.6074 8583.9688 y
b
-7880.2402 8584.2393 m
-7879.1074 8584.1318 -7879.8633 8584.8877 -7879.2695 8585.373 c
-7878.6738 8585.8594 -7877.9185 8586.5068 -7878.7295 8586.29 c
-7879.5391 8586.0752 -7880.9961 8586.5615 -7880.9434 8585.4277 c
-7880.8887 8584.293 -7880.6328 8584.2764 -7880.2402 8584.2393 c
b
-7874.5703 8592.501 m
-7874.1016 8592.2334 -7874.6802 8592.6094 -7874.0303 8592.501 c
-7873.3833 8592.3936 -7872.7886 8592.501 -7873.2207 8592.7178 c
-7873.6519 8592.9336 -7874.3008 8593.042 -7874.4634 8592.8789 c
-7874.6255 8592.7178 -7874.9473 8592.7178 -7874.5703 8592.501 c
b
-7865.0674 8592.0693 m
-7865.4785 8591.0693 -7864.0962 8591.3135 -7863.4473 8591.6357 c
-7862.7998 8591.9619 -7861.8262 8591.3672 -7862.4209 8591.7998 c
-7863.0137 8592.2314 -7862.7998 8591.7998 -7863.3926 8592.123 c
-7863.9873 8592.4463 -7864.6895 8592.9873 -7865.0674 8592.0693 c
b
-7880.6738 8597.9561 m
-7880.7222 8596.9648 -7879.8086 8597.8467 -7879.2695 8597.9014 c
-7878.7295 8597.9561 -7878.0801 8597.9561 -7878.2432 8598.1709 c
-7878.4038 8598.3877 -7878.4595 8598.3877 -7879.1626 8598.6025 c
-7879.8633 8598.8193 -7880.6191 8599.0342 -7880.6738 8597.9561 c
b
-7881.1582 8592.501 m
-7882.0664 8592.8643 -7882.2935 8592.7705 -7882.5625 8593.0947 c
-7882.8345 8593.4189 -7883.1558 8594.1211 -7883.5352 8592.9873 c
-7883.9121 8591.8525 -7883.4282 8590.666 -7883.0479 8590.8271 c
-7882.6714 8590.9893 -7882.2935 8591.6357 -7881.8618 8591.8525 c
-7881.4297 8592.0693 -7880.6191 8592.2842 -7881.1582 8592.501 c
b
U
U
%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(New Pattern 41)0 A
u
0 J 0 j 1 w 4 M []0 d0 XR
-7892 8610.8896 m
-7811 8610.8896 L
-7811 8505.8896 L
-7892 8505.8896 L
-7892 8610.8896 L
n
u
u
u
0 O
0 0 0 1 k
-7873.8057 8523.3154 m
-7874.0742 8521.5518 -7875.1602 8520.1807 -7876.5239 8520.2861 c
-7877.8862 8520.3916 -7878.7075 8521.9131 -7878.7432 8523.6963 c
-7878.7485 8523.959 -7878.6743 8525.1338 -7878.6304 8525.3672 C
-7878.6382 8525.4717 -7878.6191 8525.5635 -7878.6104 8525.6699 c
-7878.5142 8526.915 -7877.3574 8528.25 -7875.9414 8528.1396 c
-7874.5249 8528.0303 -7873.4897 8526.751 -7873.6367 8525.3623 c
-7873.6445 8525.2969 -7873.6958 8524.5156 -7873.7075 8524.4521 C
-7873.6816 8524.1748 -7873.7598 8523.6152 -7873.8057 8523.3154 c
f
-7884.2646 8532.623 m
-7884.9946 8540.8057 -7879.5015 8540.0088 v
-7876.3682 8538.9082 -7877.4414 8536.0107 v
-7877.6426 8534.6416 -7879.7847 8533.3877 v
-7880.1465 8533.1396 -7880.7632 8531.9912 v
-7881.1294 8530.4873 -7882.5186 8530.1875 v
-7884.0762 8530.1406 -7884.2646 8532.623 v
f
-7858.7646 8541.3867 m
F
-7858.0762 8539.2305 m
-7858.7847 8538.083 -7861.8848 8538.5176 Y
-7862.8115 8538.5781 -7863.3799 8538.001 Y
-7865.8394 8533.9814 -7869.0386 8534.7754 -7869.4082 8534.8828 C
-7869.4097 8534.876 L
-7872.9995 8535.4941 -7873.2666 8540.4932 V
-7873.4912 8541.2725 -7874.3354 8541.6592 V
-7877.2695 8542.751 -7877.3481 8544.0977 V
-7877.8999 8546.0049 -7875.6006 8546.6318 V
-7873.6792 8547.1465 -7871.7886 8544.7842 V
-7870.6113 8543.5693 -7867.5762 8542.8291 V
-7867.5728 8542.8428 L
-7864.3594 8541.9355 -7862.6392 8542.4785 Y
-7859.8521 8543.6572 -7858.4063 8542.291 Y
-7856.6826 8540.6455 -7858.0762 8539.2305 Y
f
-7871.9834 8522.7686 m
-7872.5854 8521.0898 -7872.2822 8519.3672 -7871.0327 8518.8125 c
-7869.7842 8518.2568 -7868.3384 8519.2061 -7867.4585 8520.7568 c
-7867.3286 8520.9854 -7866.8359 8522.0547 -7866.7632 8522.2803 C
-7866.7065 8522.3682 -7866.6792 8522.458 -7866.6362 8522.5566 c
-7866.1289 8523.6982 -7866.5122 8525.4199 -7867.8105 8525.9971 c
-7869.1089 8526.5752 -7870.6279 8525.9424 -7871.1582 8524.6514 c
-7871.1831 8524.5898 -7871.5078 8523.8779 -7871.5298 8523.8164 C
-7871.6831 8523.5859 -7871.8809 8523.0557 -7871.9834 8522.7686 c
f
-7857.7129 8525.8213 m
-7853.1802 8532.6719 -7858.3911 8534.584 v
-7861.6714 8535.1064 -7862.1035 8532.0469 v
-7862.5786 8530.7461 -7861.29 8528.625 v
-7861.0903 8528.2344 -7861.0938 8526.9297 v
-7861.4858 8525.4346 -7860.4082 8524.5078 v
-7859.0591 8523.7256 -7857.7129 8525.8213 v
f
U
u
-7832.7358 8574.9971 m
-7832.3687 8573.252 -7832.9048 8571.5859 -7834.2183 8571.2061 c
-7835.5322 8570.8271 -7836.8345 8571.9648 -7837.4937 8573.6221 c
-7837.5903 8573.8672 -7837.9326 8574.9922 -7837.9746 8575.2266 C
-7838.0176 8575.3223 -7838.0322 8575.4141 -7838.0625 8575.5176 c
-7838.4087 8576.7168 -7837.7935 8578.3701 -7836.4282 8578.7646 c
-7835.0635 8579.1592 -7833.6455 8578.3262 -7833.2969 8576.9746 c
-7833.2793 8576.9102 -7833.0552 8576.1602 -7833.0425 8576.0967 C
-7832.9214 8575.8447 -7832.7983 8575.2949 -7832.7358 8574.9971 c
f
-7846.2705 8579.5068 m
-7849.8242 8586.9141 -7844.3999 8588.0957 v
-7841.0801 8588.165 -7841.0688 8585.0742 v
-7840.7778 8583.7207 -7842.3433 8581.7969 v
-7842.5942 8581.4355 -7842.7695 8580.1436 v
-7842.5854 8578.6084 -7843.7793 8577.8389 v
-7845.2222 8577.249 -7846.2705 8579.5068 v
f
-7825.4648 8596.6592 m
F
-7824.0635 8594.8809 m
-7824.3247 8593.5586 -7827.3799 8592.8779 Y
-7828.27 8592.6094 -7828.5986 8591.8691 Y
-7829.4922 8587.2432 -7832.7666 8586.8643 -7833.1494 8586.835 C
-7833.1494 8586.8291 L
-7836.7271 8586.1484 -7838.7314 8590.7363 V
-7839.2153 8591.3857 -7840.1416 8591.4521 V
-7843.2725 8591.4453 -7843.8169 8592.6787 V
-7845.0039 8594.2705 -7843.0713 8595.666 V
-7841.4526 8596.8213 -7838.8535 8595.2715 V
-7837.3242 8594.5479 -7834.2222 8594.9189 V
-7834.2231 8594.9316 L
-7830.8965 8595.2109 -7829.4766 8596.3223 Y
-7827.2793 8598.4043 -7825.4463 8597.6328 Y
-7823.2554 8596.6953 -7824.0635 8594.8809 Y
f
-7830.8374 8575.125 m
-7830.8135 8573.3408 -7829.9258 8571.835 -7828.5601 8571.7529 c
-7827.1943 8571.6699 -7826.1743 8573.0664 -7825.8955 8574.8281 c
-7825.8545 8575.0869 -7825.7666 8576.2607 -7825.7778 8576.499 C
-7825.7559 8576.6006 -7825.7617 8576.6934 -7825.7559 8576.8018 c
-7825.6807 8578.0488 -7826.6445 8579.5264 -7828.0625 8579.6113 c
-7829.4814 8579.6963 -7830.6826 8578.5723 -7830.7246 8577.1768 c
-7830.7271 8577.1113 -7830.7822 8576.3301 -7830.7798 8576.2646 C
-7830.8433 8575.9941 -7830.8423 8575.4297 -7830.8374 8575.125 c
f
-7819.0186 8582.4521 m
-7817.1777 8590.458 -7822.7271 8590.4199 v
-7825.9834 8589.7588 -7825.3154 8586.7412 v
-7825.3032 8585.3564 -7823.3535 8583.8223 v
-7823.0278 8583.5273 -7822.5742 8582.3047 v
-7822.4175 8580.7656 -7821.0835 8580.2773 v
-7819.5454 8580.0176 -7819.0186 8582.4521 v
f
U
U
1 Ap
-7892 8610.8896 m
-7892 8505.8896 L
-7811 8505.8896 L
-7811 8610.8896 L
-7892 8610.8896 L
n
U
U
%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(New Pattern 42)0 A
u
0 Ap
0 J 0 j 1 w 4 M []0 d0 XR
-7865.4609 8583.9746 m
-7893 8583.9746 L
-7893 8611.5137 L
-7865.4609 8611.5137 L
-7865.4609 8583.9746 L
n
0 O
0 0.55 1 0.12 k
-7879.7598 8602.252 m
-7879.7598 8611.8896 L
-7878.6343 8611.8896 L
-7878.6343 8602.252 L
-7879.7598 8602.252 L
f
0 0.55 1 0.3 k
-7883.4233 8597.7656 m
-7882.3096 8596.0449 -7878.8809 8594.3467 -7874.4966 8594.3467 c
-7870.1152 8594.3467 -7866.6138 8595.9961 -7865.5718 8597.7637 C
-7865.5718 8597.7637 L
-7866.6138 8599.4902 -7870.1152 8601.1875 -7874.4966 8601.1875 c
-7878.8755 8601.1875 -7882.3242 8599.4512 -7883.4233 8597.7656 C
f
U
%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(New Pattern 45)0 A
u
0 J 0 j 1 w 4 M []0 d0 XR
-7893 8568.8076 m
-7893 8611.8896 L
-7806.2217 8611.8896 L
-7806.2217 8568.8076 L
-7893 8568.8076 L
n
u
u
0 O
0 0 0 1 k
-7833.2217 8598.126 m
-7833.2217 8605.9639 L
-7821.2217 8599.0342 L
-7809.2217 8592.1064 L
-7821.2217 8585.1787 L
-7833.2217 8578.251 L
-7833.2217 8586.3721 L
-7891.9351 8572.6064 L
-7878.9878 8591.6924 L
-7893 8611.8896 L
-7833.2217 8598.126 L
f
0 1 1 0.1 k
0 R
0 0 0 1 K
-7831.2217 8595.126 m
-7831.2217 8602.9639 L
-7819.2217 8596.0342 L
-7807.2217 8589.1064 L
-7819.2217 8582.1787 L
-7831.2217 8575.251 L
-7831.2217 8583.3721 L
-7889.9351 8569.6064 L
-7875.2754 8589.249 L
-7889.9351 8608.8896 L
-7831.2217 8595.126 L
b
U
U
U
%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(New Pattern 5)0 A
u
0 J 0 j 1 w 4 M []0 d0 XR
-7734.3994 8611.8896 m
-7734.3994 8598.3096 L
-7893 8598.3096 L
-7893 8611.8896 L
-7734.3994 8611.8896 L
n
u
u
0 O
0.285 0.228 0.171 0 k
-7749.0786 8610.374 m
-7749.0435 8611.5791 L
-7735.5103 8612.4072 -7734.8418 8611.1719 v
-7734.7441 8610.9912 -7734.6475 8610.6045 -7734.5615 8610.083 C
-7736.5845 8610.7139 -7746.2915 8610.4609 -7749.0786 8610.374 C
f
0.44 0.352 0.264 0 k
-7749.4063 8598.9131 m
-7749.3711 8600.1572 L
-7746.4912 8599.9385 -7736.1914 8599.2061 -7734.5435 8599.7549 C
-7734.7031 8599.1084 -7734.9199 8598.6543 -7735.2046 8598.5049 c
-7736.8306 8597.6553 -7749.4063 8598.9131 Y
f
0.145 0.116 0.087 0 k
-7749.3711 8600.1572 m
-7749.0786 8610.374 L
-7746.2915 8610.4609 -7736.5845 8610.7139 -7734.5615 8610.083 C
-7734.1519 8607.667 -7733.9258 8602.25 -7734.5435 8599.7549 C
-7736.1914 8599.2061 -7746.4912 8599.9385 -7749.3711 8600.1572 C
f
U
u
0.155 0.124 0.093 0 k
-7774.9375 8604.1631 m
-7773.8975 8604.5459 L
-7755.0728 8600.0361 L
-7755.4814 8599.2041 L
-7774.3633 8601.6143 L
-7775.2524 8601.8955 L
-7775.6504 8601.7832 -7776.1934 8601.7139 V
-7775.6094 8602.127 -7775.1426 8603.0303 -7774.9375 8604.1631 C
f
u
0.085 0.068 0.051 0 k
-7779.7993 8608.5557 m
-7780.5977 8608.6113 -7777.7495 8608.5537 Y
-7778.3481 8607.9072 -7778.7715 8606.71 -7778.8105 8605.3271 c
-7778.8169 8605.1143 -7778.8105 8604.9072 -7778.7993 8604.7031 C
-7779.0415 8604.5967 -7779.0918 8604.6631 -7779.6289 8604.4541 C
-7779 8608.501 -7779.7993 8608.5557 v
f
0.305 0.244 0.183 0 k
-7778.3442 8601.7568 m
-7778.5527 8601.7002 -7778.4937 8603.8203 Y
-7777.4785 8604.6484 L
-7775.8359 8603.833 L
-7774.9375 8604.1631 L
-7775.1426 8603.0303 -7775.6094 8602.127 -7776.1934 8601.7139 C
-7776.6094 8601.6611 -7777.8745 8601.6895 -7778.3442 8601.7568 C
f
U
0.115 0.092 0.069 0 k
-7774.9375 8604.1631 m
-7775.8359 8603.833 L
-7777.4785 8604.6484 L
-7778.4937 8603.8203 L
-7778.7935 8604.5977 -7778.7993 8604.7031 V
-7777.5137 8605.2686 -7776.1831 8605.6299 -7774.8398 8605.8154 C
-7774.79 8605.6172 -7774.7842 8605.4326 -7774.79 8605.2266 c
-7774.7998 8604.8613 -7774.8218 8604.5078 -7774.9375 8604.1631 C
f
0.41 0.328 0.246 0 k
-7755.4512 8600.2861 m
-7757.3774 8601.5322 -7766.3862 8606.9883 -7774.8398 8605.8154 C
-7774.9038 8606.9824 -7775.2485 8607.9805 -7775.75 8608.5527 C
-7775.1895 8608.5518 L
-7754.7402 8611.6455 L
-7755.0366 8601.3154 L
-7755.0728 8600.0361 L
-7755.2046 8600.127 -7755.4512 8600.2861 v
f
0.395 0.316 0.237 0 k
-7778.8105 8605.3271 m
-7778.7715 8606.71 -7778.3481 8607.9072 -7777.7495 8608.5537 C
-7775.6807 8608.5527 L
-7775.1782 8607.9805 -7774.8218 8606.9609 -7774.8398 8605.8154 C
-7776.1831 8605.6299 -7777.5137 8605.2686 -7778.7993 8604.7031 C
-7778.8105 8604.9072 -7778.8169 8605.1143 -7778.8105 8605.3271 c
f
U
u
0 0 0 0.11 k
-7749.2642 8599.0908 m
-7748.2407 8598.9248 L
-7749.2642 8599.0908 L
-7749.2642 8599.0908 L
f
0 0 0 0.34 k
-7755.4814 8599.2041 m
-7755.0728 8600.0361 L
-7753.6714 8599.8076 L
-7752.5234 8599.6211 L
-7750.6758 8599.3203 L
-7749.2642 8599.0908 L
-7748.2407 8598.9248 L
-7748.2954 8598.6064 -7748.3672 8598.3877 -7748.4648 8598.3096 C
-7755.4814 8599.2041 L
f
0 0 0 0.32 k
-7753.8042 8604.0967 m
-7754.0415 8611.751 L
-7748.7144 8611.8896 L
-7747.7266 8608.4043 -7748.1816 8604.0439 V
-7753.8042 8604.0967 L
f
U
0.025 0.02 0.015 0 k
-7747.3223 8601.2744 m
-7744.3735 8601.8096 -7741.2402 8602.0498 -7738.3159 8601.251 c
-7738.2856 8601.2393 -7738.2754 8601.208 -7738.2871 8601.1865 c
-7738.2881 8601.1553 -7738.3198 8601.1455 -7738.3418 8601.1455 c
-7741.2422 8601.9541 -7744.3755 8601.7139 -7747.3042 8601.168 c
-7747.3262 8601.1689 -7747.3574 8601.1807 -7747.3672 8601.2119 c
-7747.3662 8601.2334 -7747.3555 8601.2646 -7747.3223 8601.2744 c
-7747.3223 8601.2744 l
f
-7745.8374 8600.1973 m
-7745.7295 8600.2686 -7745.6313 8600.3838 -7745.5234 8600.3916 c
-7741.7886 8600.7217 -7738.1631 8600.6709 -7734.4746 8600.5537 c
-7734.4526 8600.5537 -7734.4209 8600.5322 -7734.4214 8600.5107 c
-7734.4214 8600.4775 -7734.4551 8600.458 -7734.4766 8600.458 c
-7737.3223 8600.5713 -7740.1401 8600.5889 -7743.0039 8600.4248 c
-7743.9336 8600.3662 -7744.9082 8600.6299 -7745.7778 8600.1104 c
-7745.7993 8600.1006 -7745.8306 8600.1006 -7745.8506 8600.123 c
-7745.8618 8600.1455 -7745.8594 8600.1768 -7745.8374 8600.1973 c
-7745.8374 8600.1973 l
f
-7741.3735 8602.2568 m
-7739.5098 8603.5693 -7737.3022 8604.2637 -7735.1001 8604.7764 c
-7735.0679 8604.7861 -7735.0474 8604.7744 -7735.0366 8604.7432 c
-7735.0273 8604.71 -7735.0488 8604.6904 -7735.0703 8604.6797 c
-7737.2617 8604.1553 -7739.4595 8603.4932 -7741.3105 8602.1699 c
-7741.3433 8602.1494 -7741.3755 8602.1611 -7741.3848 8602.1826 c
-7741.4058 8602.2041 -7741.3945 8602.2354 -7741.3735 8602.2568 c
-7741.3735 8602.2568 l
f
-7746.9321 8608.9463 m
-7744.7295 8609.46 -7742.5298 8609.9199 -7740.2798 8610.165 c
-7740.2598 8610.1748 -7740.2295 8610.1533 -7740.2295 8610.1318 c
-7740.2183 8610.0986 -7740.2407 8610.0674 -7740.2729 8610.0684 c
-7742.5122 8609.7705 -7744.7305 8609.4072 -7746.9126 8608.8398 c
-7746.9351 8608.8408 -7746.9673 8608.8525 -7746.9766 8608.8838 c
-7746.9751 8608.9053 -7746.9648 8608.9375 -7746.9321 8608.9463 c
-7746.9321 8608.9463 l
f
-7746.4395 8608.25 m
-7744.3457 8609.0869 -7742.1016 8608.8193 -7739.9023 8608.8525 c
-7739.8706 8608.8506 -7739.8496 8608.8291 -7739.8506 8608.7979 c
-7739.8521 8608.7646 -7739.8735 8608.7451 -7739.8945 8608.7451 c
-7742.0928 8608.7334 -7744.3374 8608.9893 -7746.4209 8608.1426 c
-7746.4434 8608.1436 -7746.4746 8608.1553 -7746.4834 8608.1865 c
-7746.4834 8608.208 -7746.4722 8608.2402 -7746.4395 8608.25 c
-7746.4395 8608.25 l
f
-7745.7075 8609.5947 m
-7744.3833 8609.6416 -7743.1504 8609.4365 -7741.8271 8609.0986 c
-7741.3594 8608.9893 -7740.9199 8609.1162 -7740.4609 8609.1025 c
-7739.8975 8609.0869 l
-7739.8745 8609.0859 -7739.8633 8609.0752 -7739.8535 8609.0635 c
-7739.8345 8609.042 -7739.8442 8609.0107 -7739.8662 8608.9893 c
-7740.0625 8608.835 l
-7740.0742 8608.835 -7740.0854 8608.8252 -7740.0962 8608.8252 c
-7740.5 8608.8369 l
-7741.9551 8609.0811 -7743.4575 8609.5615 -7744.8926 8608.9639 c
-7744.9258 8608.9541 -7744.9575 8608.9756 -7744.9673 8608.9971 c
-7744.9673 8609.0293 -7744.9551 8609.0498 -7744.9336 8609.0605 c
-7743.6475 8609.5889 -7742.1714 8609.3652 -7740.8818 8608.9443 c
-7740.0918 8608.9326 L
-7740.1245 8608.9229 L
-7739.9282 8609.0771 L
-7739.8984 8608.9795 L
-7740.4639 8608.9961 l
-7740.9321 8609.0303 -7741.3848 8608.873 -7741.8398 8608.9932 c
-7743.1543 8609.3506 -7744.3975 8609.5146 -7745.71 8609.4883 c
-7745.7422 8609.4893 -7745.7642 8609.5107 -7745.7617 8609.543 c
-7745.7617 8609.5752 -7745.7402 8609.5957 -7745.7075 8609.5947 c
-7745.7075 8609.5947 l
f
-7746.5718 8609.9502 m
-7743.8711 8611.1104 -7740.9023 8610.46 -7738.1279 8610.0713 c
-7737.7832 8610.1787 l
-7737.7617 8610.1885 -7737.7417 8610.1768 -7737.7207 8610.1553 c
-7737.71 8610.1338 -7737.7217 8610.1025 -7737.7422 8610.0918 c
-7738.0801 8609.8994 l
-7740.7754 8609.2822 -7743.5391 8609.6709 -7746.2715 8609.6748 c
-7746.3022 8609.6768 -7746.3232 8609.6982 -7746.3223 8609.7295 c
-7746.3198 8609.7617 -7746.2983 8609.7822 -7746.2681 8609.7822 c
-7743.6738 8609.8252 -7741.0303 8609.333 -7738.4727 8609.9639 c
-7737.7954 8610.1787 L
-7737.7534 8610.0811 L
-7738.1406 8609.9756 l
-7740.9058 8610.332 -7743.8418 8611.0244 -7746.5313 8609.8643 c
-7746.5537 8609.8545 -7746.5854 8609.8545 -7746.5962 8609.8877 c
-7746.6055 8609.9092 -7746.6055 8609.9404 -7746.5718 8609.9502 c
-7746.5718 8609.9502 l
f
-7743.6895 8603.2842 m
-7742.3945 8603.79 -7740.9834 8603.5361 -7739.6802 8603.2334 c
-7739.6475 8603.2314 -7739.6367 8603.21 -7739.6382 8603.1787 c
-7739.6504 8603.1465 -7739.6714 8603.1357 -7739.7031 8603.1377 c
-7740.9985 8603.4199 -7742.3774 8603.7051 -7743.6504 8603.1865 c
-7743.6826 8603.1768 -7743.7144 8603.1885 -7743.7246 8603.2207 c
-7743.7222 8603.2422 -7743.7114 8603.2744 -7743.6895 8603.2842 c
-7743.6895 8603.2842 l
f
-7744.1401 8605.1104 m
-7742.2266 8605.5791 -7740.3145 8605.9932 -7738.3555 8606.2139 c
-7738.3242 8606.2236 -7738.3022 8606.2021 -7738.2935 8606.1699 c
-7738.2954 8606.1494 -7738.3159 8606.1182 -7738.3374 8606.1182 c
-7740.2959 8605.8975 -7742.2095 8605.4717 -7744.1206 8605.0029 c
-7744.1426 8605.0049 -7744.1738 8605.0156 -7744.1831 8605.0479 c
-7744.1831 8605.0693 -7744.1719 8605.1006 -7744.1401 8605.1104 c
-7744.1401 8605.1104 l
f
-7744.9336 8607.5244 m
-7742.4995 8608.3506 -7739.8647 8607.9443 -7737.3457 8607.9775 c
-7737.3135 8607.9775 -7737.2935 8607.9561 -7737.2935 8607.9229 c
-7737.2954 8607.9014 -7737.3159 8607.8818 -7737.3481 8607.8818 c
-7739.8574 8607.8057 -7742.4814 8608.2744 -7744.8945 8607.416 c
-7744.9282 8607.417 -7744.9595 8607.4287 -7744.9688 8607.4502 c
-7744.9678 8607.4814 -7744.9561 8607.5137 -7744.9336 8607.5244 c
-7744.9336 8607.5244 l
f
-7740.0542 8608.7393 m
-7738.6582 8609.4346 -7737.0503 8609.293 -7735.5342 8609.3564 c
-7735.5024 8609.3545 -7735.4824 8609.333 -7735.4824 8609.3018 c
-7735.4834 8609.2803 -7735.5054 8609.249 -7735.5366 8609.249 c
-7737.0137 8609.1104 -7738.6489 8609.4131 -7740.0039 8608.6514 c
-7740.0366 8608.6426 -7740.0679 8608.6533 -7740.0786 8608.6758 c
-7740.0879 8608.6973 -7740.0767 8608.7295 -7740.0542 8608.7393 c
-7740.0542 8608.7393 l
f
-7739.3418 8605.3145 m
-7738.3926 8605.2871 -7737.4336 8605.2598 -7736.4839 8605.2324 c
-7736.4526 8605.2314 -7736.4312 8605.21 -7736.4336 8605.1777 c
-7736.4336 8605.1455 -7736.4551 8605.125 -7736.4878 8605.126 c
-7737.4375 8605.1533 -7738.3975 8605.1807 -7739.3457 8605.208 c
-7739.3774 8605.208 -7739.3975 8605.2314 -7739.3975 8605.2627 c
-7739.3975 8605.2939 -7739.3745 8605.3154 -7739.3418 8605.3145 c
-7739.3418 8605.3145 l
f
-7737.1592 8602.9258 m
-7736.6895 8602.9541 -7736.2095 8602.9619 -7735.7383 8602.9814 c
-7735.7168 8602.9805 -7735.6855 8602.958 -7735.6865 8602.9268 c
-7735.6875 8602.8936 -7735.71 8602.874 -7735.7417 8602.874 c
-7736.2114 8602.877 -7736.6816 8602.8271 -7737.1514 8602.8291 c
-7737.1831 8602.8193 -7737.2031 8602.8408 -7737.2134 8602.874 c
-7737.2129 8602.9053 -7737.1914 8602.9268 -7737.1592 8602.9258 c
-7737.1592 8602.9258 l
f
-7744.9702 8605.124 m
-7744.5688 8605.4004 -7744.1255 8605.5693 -7743.6455 8605.6406 c
-7743.6113 8605.6504 -7743.5918 8605.6279 -7743.5806 8605.6064 c
-7743.5703 8605.5752 -7743.5928 8605.5439 -7743.6152 8605.5439 c
-7744.0854 8605.4619 -7744.5176 8605.292 -7744.9209 8605.0371 c
-7744.9521 8605.0273 -7744.9849 8605.0283 -7744.9946 8605.0605 c
-7745.0039 8605.083 -7744.9922 8605.1143 -7744.9702 8605.124 c
-7744.9702 8605.124 l
f
-7746.1904 8610.9746 m
-7743.7344 8611.417 -7741.2983 8611.8906 -7738.7993 8611.6162 c
-7738.7778 8611.6162 -7738.7568 8611.5938 -7738.7578 8611.5615 c
-7738.7578 8611.5303 -7738.7798 8611.5088 -7738.8022 8611.5088 c
-7741.2915 8611.7627 -7743.7344 8611.374 -7746.1719 8610.8672 c
-7746.1934 8610.8682 -7746.2256 8610.8799 -7746.2344 8610.9111 c
-7746.2344 8610.9326 -7746.2222 8610.9648 -7746.1904 8610.9746 c
-7746.1904 8610.9746 l
f
0.195 0.156 0.117 0 k
-7746.1665 8599.5342 m
-7743.7969 8599.1572 -7741.4058 8599.2373 -7739.0298 8599.4795 c
-7738.9985 8599.4775 -7738.9766 8599.4561 -7738.9766 8599.4248 c
-7738.9785 8599.4033 -7739 8599.3721 -7739.0215 8599.3721 c
-7741.4082 8599.1318 -7743.7915 8599.0498 -7746.1694 8599.4287 c
-7746.2026 8599.4287 -7746.2222 8599.4502 -7746.2217 8599.4834 c
-7746.2207 8599.5146 -7746.1992 8599.5361 -7746.1665 8599.5342 c
-7746.1665 8599.5342 l
f
0.335 0.268 0.201 0 k
-7745.4351 8599.001 m
-7742.9282 8599.0049 -7740.4146 8599.167 -7737.9185 8598.7861 c
-7737.8862 8598.7842 -7737.8647 8598.7627 -7737.8662 8598.7314 c
-7737.8672 8598.6982 -7737.8896 8598.6787 -7737.9209 8598.6787 c
-7740.4185 8599.0596 -7742.9297 8598.9189 -7745.4375 8598.8955 c
-7745.46 8598.8955 -7745.4814 8598.917 -7745.4785 8598.9492 c
-7745.4785 8598.9814 -7745.4575 8599.002 -7745.4351 8599.001 c
-7745.4351 8599.001 l
f
0.205 0.164 0.123 0 k
-7746.9766 8599.2158 m
-7745.5039 8599.5576 -7744.0078 8599.292 -7742.5391 8599.1104 c
-7742.5078 8599.1104 -7742.4873 8599.0869 -7742.4995 8599.0557 c
-7742.5 8599.0244 -7742.5215 8599.0029 -7742.5537 8599.0146 c
-7744.0103 8599.1738 -7745.4961 8599.4727 -7746.9473 8599.1084 c
-7746.9785 8599.1104 -7747.0103 8599.1221 -7747.0098 8599.1533 c
-7747.0195 8599.1748 -7746.9985 8599.2061 -7746.9766 8599.2158 c
-7746.9766 8599.2158 l
f
-7740.3535 8598.6846 m
-7739.1978 8598.8115 -7738.0273 8598.7041 -7736.8926 8598.4795 c
-7736.8711 8598.4678 -7736.8506 8598.4463 -7736.8618 8598.4141 c
-7736.8623 8598.3926 -7736.8945 8598.3721 -7736.9165 8598.3838 c
-7738.0503 8598.6299 -7739.1914 8598.6836 -7740.3462 8598.5781 c
-7740.3794 8598.5791 -7740.3984 8598.6006 -7740.4087 8598.6221 c
-7740.4082 8598.6543 -7740.3862 8598.6748 -7740.3535 8598.6846 c
-7740.3535 8598.6846 l
f
0.335 0.268 0.201 0 k
-7747.2681 8601.3369 m
-7745.9214 8602.0781 -7744.3066 8601.4873 -7742.8555 8601.5313 c
-7742.8223 8601.5303 -7742.8022 8601.5088 -7742.8022 8601.4756 c
-7742.8042 8601.4551 -7742.8262 8601.4346 -7742.8574 8601.4346 c
-7744.2886 8601.3799 -7745.8823 8601.9697 -7747.2168 8601.2402 c
-7747.2383 8601.2295 -7747.2695 8601.2412 -7747.2915 8601.2637 c
-7747.3008 8601.2852 -7747.2886 8601.3174 -7747.2681 8601.3369 c
-7747.2681 8601.3369 l
f
-7745.8945 8603.4541 m
-7743.6719 8603.9346 -7741.3896 8603.5059 -7739.1504 8603.4521 c
-7739.1177 8603.4512 -7739.0977 8603.4287 -7739.0977 8603.3975 c
-7739.1001 8603.376 -7739.1318 8603.3564 -7739.1519 8603.3564 c
-7741.3833 8603.3672 -7743.6519 8603.8701 -7745.8755 8603.3467 c
-7745.8975 8603.3467 -7745.9287 8603.3584 -7745.9375 8603.3916 c
-7745.9375 8603.4121 -7745.9258 8603.4443 -7745.8945 8603.4541 c
-7745.8945 8603.4541 l
f
-7740.0273 8600.0303 m
-7738.3496 8600.8584 -7736.4995 8601.3916 -7734.6035 8601.251 c
-7734.5718 8601.251 -7734.5513 8601.2285 -7734.5527 8601.1963 c
-7734.5527 8601.165 -7734.5742 8601.1436 -7734.6074 8601.1455 c
-7736.4814 8601.3057 -7738.3198 8600.75 -7739.9873 8599.9443 c
-7740.0078 8599.9346 -7740.0415 8599.9346 -7740.0503 8599.9678 c
-7740.0615 8599.9893 -7740.0615 8600.0205 -7740.0273 8600.0303 c
-7740.0273 8600.0303 l
f
u
0.5 0.85 1 0.45 k
-7893 8606.7979 m
-7893.0254 8607.3779 -7892.5664 8608.0771 -7891.1675 8608.8799 C
-7890.8521 8608.8926 -7889.3945 8608.9131 -7887.0889 8608.9385 C
-7887.0889 8606.7119 L
-7889.1382 8606.7354 -7891.1177 8606.7764 -7893 8606.7979 C
f
-7892.5088 8605.8584 m
-7887.0889 8605.7344 L
-7887.0889 8604.7041 L
-7890.6445 8604.8486 L
-7891.8145 8605.2197 -7892.5088 8605.8584 V
f
0.5 0.85 1 0.32 k
-7887.0889 8605.7148 m
-7892.4746 8605.833 L
-7892.7695 8606.1045 -7892.9849 8606.4463 -7893 8606.8174 C
-7891.1177 8606.7959 -7889.1382 8606.7744 -7887.0889 8606.751 C
-7887.0889 8605.7148 L
f
0.5 0.85 1 0.45 k
-7782.1504 8605.5068 m
-7860.3584 8606.4307 -7887.1079 8606.7314 V
-7887.1079 8608.9385 L
-7870.8145 8609.1221 -7811.9902 8609.5967 Y
-7777.7495 8608.5537 L
-7778.4575 8605.458 L
-7782.1504 8605.5068 L
f
0.5 0.85 1 0.12 k
-7887.1079 8604.7041 m
-7887.1079 8605.7344 L
-7778.4258 8603.8896 L
-7778.3833 8601.7529 L
-7811.6553 8601.6025 L
-7887.1079 8604.7041 L
f
u
0.065 0.052 0.039 0 k
-7755.0728 8600.0361 m
-7755.0366 8601.3154 L
-7755.2954 8600.0068 L
-7773.8975 8604.5459 L
-7774.9375 8604.1631 L
-7774.8794 8604.4951 -7774.8398 8604.8467 -7774.8306 8605.2119 c
-7774.8242 8605.418 -7774.8281 8605.6182 -7774.8398 8605.8154 C
-7766.3862 8606.9883 -7756.9634 8602.5615 -7755.0366 8601.3154 C
-7754.7402 8611.6455 L
-7754.0415 8611.751 L
-7753.8042 8604.0967 L
-7748.1816 8604.0439 L
-7748.0898 8601.9033 -7748.0718 8599.9111 -7748.2407 8598.9248 C
-7755.0728 8600.0361 L
f
0.4 0.7 1 0 k
-7778.4575 8605.4775 m
-7778.4258 8603.8701 L
-7887.1079 8605.7148 L
-7887.1079 8606.751 L
-7860.3584 8606.4502 -7778.4575 8605.4775 Y
f
U
U
0.025 0.02 0.015 0 k
-7742.7344 8607.9189 m
-7742.7344 8607.9521 -7742.7129 8607.9717 -7742.6802 8607.9717 c
-7739.6714 8608.0029 -7737.4214 8607.835 -7734.4155 8607.749 C
-7734.4087 8607.6553 L
-7737.3262 8607.7598 -7739.7607 8607.8975 -7742.6841 8607.8643 C
-7742.7168 8607.8662 -7742.7358 8607.8877 -7742.7344 8607.9189 C
f
-7734.3994 8607.6553 m
-7734.4082 8607.6338 L
-7734.4087 8607.6553 L
-7734.4063 8607.6553 -7734.4033 8607.6553 -7734.3994 8607.6553 C
f
-7738.4487 8606.3135 m
-7739.4458 8606.1816 -7740.3394 8606.6553 -7741.2114 8607.0869 C
-7741.2441 8607.0977 -7741.2534 8607.1299 -7741.2422 8607.1611 C
-7741.2305 8607.1826 -7741.1982 8607.1924 -7741.1777 8607.1807 c
-7740.3262 8606.7197 -7739.4312 8606.3096 -7738.4678 8606.4092 c
-7737.1079 8606.5518 -7735.9038 8607.2646 -7734.5254 8607.3428 C
-7734.4463 8607.249 L
-7736.04 8607.1553 -7736.8647 8606.5127 -7738.4487 8606.3135 c
f
U
U
%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(New Pattern 50)0 A
u
0 J 0 j 1 w 4 M []0 d0 XR
-7892 8610.8896 m
-7764.8774 8610.8896 L
-7764.8774 8563.3047 L
-7892 8563.3047 L
-7892 8610.8896 L
n
u
*u
0 O
0.9529 0.949 0.1961 0.0745 k
-7865.7935 8595.3066 m
-7865.8232 8595.1572 L
-7867.9849 8589.2539 -7868.9438 8586.5273 -7869.2754 8585.1787 c
-7869.3657 8585.1787 L
-7869.6953 8586.4971 -7870.7754 8589.2246 -7872.9673 8595.1572 c
-7872.9966 8595.3066 L
-7865.7935 8595.3066 l
f
1 D
-7876.1182 8603.8574 m
-7877.6191 8607.4268 -7878.3994 8609.5986 -7876.1182 8609.8066 c
-7876.1182 8610.8574 L
-7878.6992 8610.8271 -7881.5806 8610.8066 -7884.3418 8610.8066 c
-7888.0649 8610.8066 -7890.5273 8610.8271 -7892 8610.8574 c
-7892 8609.8066 L
-7890.1064 8609.5986 -7889.0542 8607.457 -7881.5513 8590.3926 c
-7869.6953 8563.3047 L
-7867.8638 8563.3047 L
-7856.1582 8590.3926 L
-7848.8047 8607.3975 -7847.7246 8609.5986 -7845.8887 8609.8066 c
-7845.8887 8610.8574 L
-7847.5142 8610.8271 -7849.9165 8610.8066 -7853.5767 8610.8066 c
-7856.5488 8610.8066 -7859.6694 8610.8271 -7862.7026 8610.8574 c
-7862.7026 8609.8066 L
-7860.4814 8609.5986 -7861.3218 8607.3975 -7862.7617 8603.8574 C
-7876.1182 8603.8574 l
f
*U
*u
0 D
-7821.0762 8578.9707 m
-7821.0762 8575.3613 -7823.3535 8572.9844 -7827.1294 8572.9844 c
-7828.2383 8572.9844 -7829.0767 8573.1055 -7829.5273 8573.1348 c
-7829.5273 8585.4375 L
-7828.8672 8585.498 -7828.2085 8585.498 -7827.7295 8585.498 c
-7826.2002 8585.498 -7824.7026 8585.0166 -7823.6841 8584.2949 c
-7822.3945 8583.4229 -7821.0762 8581.6777 -7821.0762 8579.0313 C
-7821.0762 8578.9707 l
f
1 D
-7840.0806 8583.2822 m
-7840.0806 8567.5342 -7840.0806 8565.3184 -7842.5425 8565.168 c
-7842.5425 8564.208 L
-7841.0425 8564.1484 -7838.3174 8564.0889 -7835.5664 8564.0586 c
-7833.6538 8563.998 -7830.3945 8563.9082 -7828.1479 8563.8672 c
-7824.5825 8563.8672 -7821.5854 8564.3154 -7819.0049 8565.1523 c
-7814.3535 8566.7373 -7809.9702 8570.7422 -7809.9702 8578.5498 c
-7809.9702 8583.6328 -7812.4014 8587.209 -7814.5034 8588.9502 c
-7815.5835 8589.9111 -7816.8135 8590.7217 -7817.7744 8591.2021 c
-7817.7744 8591.3525 L
-7815.5234 8594.3809 -7813.6025 8596.9521 -7807.3906 8605.5322 c
-7805.5 8607.9541 -7803.9102 8609.6279 -7802.7402 8609.8672 c
-7802.7402 8610.8896 L
-7804.6602 8610.8896 -7807 8610.7744 -7809.1294 8610.7744 c
-7811.3511 8610.7744 -7812.8521 8610.8896 -7814.4424 8610.8896 c
-7815.6729 8610.8896 -7816.7241 8610.8301 -7817.5039 8610.1621 c
-7821.0151 8604.7373 -7824.9121 8598.6455 -7828.1182 8593.6035 c
-7828.5078 8593.6035 -7828.9575 8593.6035 -7829.5273 8593.6035 c
-7829.5273 8596.1748 L
-7829.5273 8607.416 -7829.4375 8609.6582 -7827.1895 8609.8672 c
-7827.1895 8610.8594 L
-7828.6279 8610.8301 -7831.9194 8610.8047 -7834.6992 8610.8047 c
-7837.9287 8610.8047 -7840.8921 8610.8301 -7842.5122 8610.8594 c
-7842.5122 8609.8672 L
-7840.0518 8609.6582 -7840.0806 8607.416 -7840.0806 8590.4814 C
-7840.0806 8583.2822 l
f
*U
*u
0 D
-7789.4561 8590.4824 m
-7789.4561 8607.3838 -7789.4561 8609.5381 -7792.2832 8609.8672 C
-7792.2832 8610.8594 l
-7790.3887 8610.8301 -7787.0542 8610.8047 -7783.7822 8610.8047 c
-7780.6294 8610.8047 -7777.5688 8610.8301 -7775.2881 8610.8594 C
-7775.2881 8609.8672 l
-7778.2578 8609.8672 -7778.2881 8607.4141 -7778.2881 8590.4824 C
-7778.2881 8573.041 L
-7770.8193 8573.041 l
-7767.9995 8573.041 -7766.5298 8573.8496 -7765.8994 8576.1523 C
-7764.9072 8576.1523 l
-7764.9072 8571.3594 -7764.8774 8567.3047 -7764.8774 8564.0605 c
-7769.3486 8564.0908 -7774.7485 8564.1211 -7780.0601 8564.1211 C
-7787.7446 8564.1211 l
-7792.5537 8564.1211 -7797.9966 8564.0908 -7802.9614 8564.0605 c
-7802.9614 8567.2744 -7802.9326 8571.3594 -7802.9326 8576.1523 C
-7801.9072 8576.1523 l
-7801.3657 8573.999 -7799.7715 8573.041 -7796.9438 8573.041 C
-7789.4561 8573.041 l
-7789.4561 8590.4824 L
f
*U
U
U
%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(New Pattern 6)0 A
u
1 Ap
0 J 0 j 1 w 4 M []0 d0 XR
-7892.75 8587.8896 m
-7892.75 8611.8896 L
-7882.75 8611.8896 L
-7882.75 8587.8896 L
-7892.75 8587.8896 L
n
0 Ap
0 O
1 g
-7882.75 8589.8896 m
-7883.0703 8589.8896 -7883.3857 8589.9082 -7883.6982 8589.9375 c
-7885.5879 8590.1152 -7887.3198 8590.8242 -7888.7559 8591.9072 c
-7890.2529 8593.0361 -7891.4199 8594.5713 -7892.0942 8596.3535 c
-7892.5122 8597.4541 -7892.75 8598.6426 -7892.75 8599.8896 c
-7892.75 8601.752 -7892.2319 8603.4893 -7891.3457 8604.9814 c
-7889.6025 8607.917 -7886.4102 8609.8896 -7882.75 8609.8896 C
-7882.75 8589.8896 L
f
0 R
0 G
1 J 1 j 0.5 w-7882.75 8609.5713 m
-7885.7793 8608.6152 -7888.6074 8606.957 -7891.3457 8604.9814 C
S
-7882.75 8603.9385 m
-7885.8999 8601.5332 -7888.9575 8598.8027 -7892.0942 8596.3535 C
S
-7888.7559 8591.9072 m
-7886.6904 8592.998 -7884.7017 8594.3564 -7882.75 8595.8467 C
S
-7883.6982 8589.9375 m
-7883.3809 8590.0205 -7883.0635 8590.1045 -7882.75 8590.2041 C
S
-7888.7559 8591.9072 m
-7887.3193 8590.8252 -7885.5879 8590.1152 -7883.6982 8589.9375 C
S
-7892.0942 8596.3535 m
-7892.5122 8597.4541 -7892.75 8598.6426 -7892.75 8599.8896 c
-7892.75 8601.752 -7892.2314 8603.4893 -7891.3457 8604.9814 C
S
-7882.75 8589.8896 m
-7883.0703 8589.8896 -7883.3857 8589.9082 -7883.6982 8589.9375 C
S
-7888.7559 8591.9072 m
-7890.2529 8593.0361 -7891.4199 8594.5713 -7892.0942 8596.3535 C
S
-7891.3457 8604.9814 m
-7889.6025 8607.917 -7886.4102 8609.8896 -7882.75 8609.8896 C
S
U
%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(New Pattern 62)0 A
u
0 J 0 j 1 w 4 M []0 d0 XR
-7893 8611.8896 m
-7893 8573.6201 L
-7854.7305 8573.6201 L
-7854.7305 8611.8896 L
-7893 8611.8896 L
n
0 O
1 0.14 0.09 0 k
-7854.7305 8594.7939 m
-7854.7305 8586.2305 L
-7893 8586.2305 L
-7893 8594.7939 L
-7854.7305 8594.7939 L
f
-7854.7305 8597.9863 m
-7854.7305 8597.3125 L
-7893 8597.3125 L
-7893 8597.9863 L
-7854.7305 8597.9863 L
f
U
%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(New Pattern 63)0 A
u
0 J 0 j 1 w 4 M []0 d0 XR
-7893 8611.8896 m
-7893 8573.6201 L
-7854.7305 8573.6201 L
-7854.7305 8611.8896 L
-7893 8611.8896 L
n
0 O
1 0.14 0.09 0 k
-7854.7305 8590.7158 m
-7854.7305 8599.2793 L
-7867.3408 8599.2793 L
-7867.3408 8611.8896 L
-7875.9038 8611.8896 L
-7875.9063 8590.7158 L
-7875.9038 8590.7158 L
-7875.9038 8590.7148 L
-7854.7305 8590.7158 L
f
-7854.7305 8588.1973 m
-7878.4233 8588.1973 L
-7878.4233 8611.8896 L
-7879.0967 8611.8896 L
-7879.0977 8587.5225 L
-7854.7305 8587.5225 L
-7854.7305 8588.1973 L
f
U
%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(New Pattern 64)0 A
u
0 J 0 j 1 w 4 M []0 d0 XR
-7893 8611.8887 m
-7893 8573.6182 L
-7854.7305 8573.6182 L
-7854.7305 8611.8887 L
-7893 8611.8887 L
n
0 O
1 0.14 0.09 0 k
-7854.7305 8586.2285 m
-7880.3896 8586.2285 L
-7880.3896 8611.8887 L
-7871.8262 8611.8896 L
-7871.8262 8594.793 L
-7854.7305 8594.793 L
-7854.7305 8586.2285 L
f
-7854.7305 8597.3115 m
-7869.3081 8597.3115 L
-7869.3081 8611.8896 L
-7868.6338 8611.8896 L
-7868.6338 8597.9854 L
-7854.7305 8597.9854 L
-7854.7305 8597.3115 L
f
U
%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(New Pattern 65)0 A
u
1 Ap
0 J 0 j 1 w 4 M []0 d0 XR
-7865.0625 8584.3506 m
-7892.6025 8584.3506 L
-7892.6025 8611.8896 L
-7865.0625 8611.8896 L
-7865.0625 8584.3506 L
n
0 O
0 0.55 1 0.12 k
-7864.8418 8597.5898 m
-7893 8597.5898 L
-7893 8598.7148 L
-7864.8418 8598.7148 L
-7864.8418 8597.5898 L
f
u
0 0.55 1 0.3 k
-7891.9814 8585.4111 m
-7892.4102 8587.415 -7891.1865 8591.041 -7888.0874 8594.1406 c
-7884.9878 8597.2393 -7881.3457 8598.5498 -7879.3594 8598.0352 C
-7879.3594 8598.0352 L
-7878.8755 8596.0791 -7880.1519 8592.4014 -7883.25 8589.3037 c
-7886.3457 8586.208 -7890.0122 8584.9961 -7891.9814 8585.4111 C
f
0 0.39 0.7 0.12 k
-7891.9814 8610.8809 m
-7892.4102 8608.8779 -7891.1865 8605.251 -7888.0874 8602.1514 c
-7884.9878 8599.0537 -7881.3457 8597.7432 -7879.3594 8598.2568 C
-7879.3594 8598.2568 L
-7878.8755 8600.2139 -7880.1519 8603.8906 -7883.25 8606.9893 c
-7886.3457 8610.085 -7890.0122 8611.2959 -7891.9814 8610.8809 C
f
U
u
0 0.55 1 0.3 k
-7878.1782 8610.8809 m
-7878.6074 8608.8779 -7877.3838 8605.251 -7874.2842 8602.1514 c
-7871.1855 8599.0537 -7867.5435 8597.7432 -7865.5576 8598.2568 C
-7865.5566 8598.2568 L
-7865.0718 8600.2139 -7866.3496 8603.8906 -7869.4473 8606.9893 c
-7872.5435 8610.085 -7876.2095 8611.2959 -7878.1782 8610.8809 C
f
0 0.39 0.7 0.12 k
-7878.1782 8585.4111 m
-7878.6074 8587.415 -7877.3838 8591.041 -7874.2842 8594.1406 c
-7871.1855 8597.2393 -7867.5435 8598.5498 -7865.5576 8598.0352 C
-7865.5566 8598.0352 L
-7865.0718 8596.0791 -7866.3496 8592.4014 -7869.4473 8589.3037 c
-7872.5435 8586.208 -7876.2095 8584.9961 -7878.1782 8585.4111 C
f
U
U
%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(New Pattern 67)0 A
u
0 Ap
0 J 0 j 1 w 4 M []0 d0 XR
-7865.4609 8583.9746 m
-7893 8583.9746 L
-7893 8611.5137 L
-7865.4609 8611.5137 L
-7865.4609 8583.9746 L
n
0 O
0 0.55 1 0.12 k
-7879.7598 8602.252 m
-7879.7598 8611.8896 L
-7878.6343 8611.8896 L
-7878.6343 8602.252 L
-7879.7598 8602.252 L
f
0 0.55 1 0.3 k
-7883.4233 8597.7656 m
-7882.3096 8596.0449 -7878.8809 8594.3467 -7874.4966 8594.3467 c
-7870.1152 8594.3467 -7866.6138 8595.9961 -7865.5718 8597.7637 C
-7865.5718 8597.7637 L
-7866.6138 8599.4902 -7870.1152 8601.1875 -7874.4966 8601.1875 c
-7878.8755 8601.1875 -7882.3242 8599.4512 -7883.4233 8597.7656 C
f
U
%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(New Pattern 69)0 A
u
0 J 0 j 1 w 4 M []0 d0 XR
-7865.4609 8584.3506 m
-7893 8584.3506 L
-7893 8611.8896 L
-7865.4609 8611.8896 L
-7865.4609 8584.3506 L
n
0 O
0 0.55 1 0.3 k
-7883.4233 8598.1416 m
-7882.3096 8596.4209 -7878.8809 8594.7227 -7874.4966 8594.7227 c
-7870.1152 8594.7227 -7866.6138 8596.3721 -7865.5718 8598.1396 C
-7865.5718 8598.1396 L
-7866.6138 8599.8662 -7870.1152 8601.5635 -7874.4966 8601.5635 c
-7878.8755 8601.5635 -7882.3242 8599.8271 -7883.4233 8598.1416 C
f
U
%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(New Pattern 8)0 A
u
0 J 0 j 1 w 4 M []0 d0 XR
-7891.9521 8609.2021 m
-7784.7954 8609.2021 L
-7784.7954 8595.0752 L
-7891.9521 8595.0752 L
-7891.9521 8609.2021 L
n
u
0 O
0 0 0 1 k
-7890.2832 8608.5127 m
-7890.8535 8610.8896 -7890.8184 8606.8936 V
-7891.0479 8603.6924 L
-7891.6167 8601.3447 L
-7891.4502 8599.0127 L
-7889.9502 8598.3447 -7873.2832 8597.0127 V
-7866.6167 8595.6787 -7857.6167 8595.6787 V
-7792.3936 8596.3662 -7787.4912 8597.7744 v
-7828.3882 8595.7646 -7830.9688 8596.4014 v
-7791.8569 8598.0498 -7788.8545 8599.3213 v
-7826.79 8597.4365 -7830.1675 8599.0674 v
-7795.2495 8600.7998 -7791.0215 8602.4209 v
-7797.7217 8601.7725 -7799.5127 8601.9717 v
-7796.3896 8602.46 l
-7801.4194 8602.3916 l
-7804.3218 8602.0186 l
-7796.4521 8603.1318 -7795.9033 8603.6982 v
-7792.3154 8603.0205 -7806.5186 8603.2744 v
-7840.1177 8599.3447 -7890.2832 8608.5127 V
f
/BBAccumRotation (5.805971) XT
0 R
0 0 0 0.5 K
0.025 w-7891.9502 8598.0127 m
-7871.6675 8596.1846 -7851.9727 8595.1104 v
-7809.1514 8595.3916 -7804.5737 8595.79 v
-7792.1631 8595.9209 -7784.7959 8596.917 v
S
/BBAccumRotation (5.805971) XT
0 0 0 1 K
-7829.8369 8595.2979 m
-7833.2959 8594.917 -7859.2607 8595.1689 Y
-7869.6274 8595.0498 -7891.9502 8598.0127 Y
S
/BBAccumRotation (5.805971) XT
-7828.9873 8598.5537 m
-7798.3608 8599.4717 -7791.6606 8600.1221 v
S
/BBAccumRotation (5.805971) XT
0 0 0 0.5 K
-7837.6201 8603.0947 m
-7802.3706 8604.5068 -7799.4058 8605.0303 v
S
/BBAccumRotation (5.805971) XT
U
U
%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(New Pattern 83)0 A
u
0 J 0 j 1 w 4 M []0 d0 XR
-7892 8610.8252 m
-7678.4009 8610.8252 L
-7678.4009 8603.0244 L
-7892 8603.0244 L
-7892 8610.8252 L
n
0 O
0 0 0 1 k
-7892 8606.9248 m
-7881.9858 8609.417 -7875.1875 8610.7646 -7863.2007 8610.8252 c
-7850.2183 8610.8896 -7785.2002 8610.8252 y
-7720.1816 8610.8896 -7707.2002 8610.8252 v
-7695.2129 8610.7646 -7688.4155 8609.417 -7678.4009 8606.9248 C
-7688.4155 8604.4326 -7695.2129 8603.085 -7707.2002 8603.0244 c
-7720.1816 8602.959 -7785.2002 8603.0244 y
-7850.2183 8602.959 -7863.2007 8603.0244 v
-7875.1875 8603.085 -7881.9858 8604.4326 -7892 8606.9248 C
f
U
%AI8_EndBrushPattern
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI8_BeginPluginObject
(Adobe Brush Manager Order)
(Adobe Brush Manager Order)
( Adobe Calligraphic Brush Tool/ 6 pt Flat / Adobe Calligraphic) -
( Brush Tool/ 10 pt Oval/ Adobe Calligraphic Brush Tool/ 12 pt ) -
(Oval / Adobe Calligraphic Brush Tool/ 20 pt Oval/ Adobe Callig) -
(raphic Brush Tool/ 25 pt Round / Adobe Calligraphic Brush Tool) -
(/ 50 pt Flat/ Adobe Scatter Brush Tool/ Dog Tracks/ Adobe Scat) -
(ter Brush Tool/ Fall Leaf/ Adobe Scatter Brush Tool/ Ladybug/ ) -
(Adobe Scatter Brush Tool/ Push Pin/ Adobe Scatter Brush Tool/ ) -
(Strawberry/ Adobe Scatter Brush Tool/ Twinkle Star / Adobe Art) -
(OnPath Brush Tool/ Marker/ Adobe ArtOnPath Brush Tool/ Tapered) -
( Stroke/ Adobe ArtOnPath Brush Tool/ Arrow/ Adobe ArtOnPath Br) -
(ush Tool/ Paintbrush/ Adobe ArtOnPath Brush Tool/ Type/ Adobe ) -
(PatternOnPath Brush Tool/ Double Lines/ Adobe PatternOnPath Br) -
(ush Tool/ Laurel/ Adobe PatternOnPath Brush Tool/ Rope /) .
%AI8_EndPluginObject
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI8_BeginPluginObject
(Adobe Scatter Brush Tool)
(Dog Tracks)
(1 /New Pattern 41/ 1 0 0 0 1 / 0 1 1 0 1 1 0 0 0 0 -90 -90 0 1) -
( 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe Scatter Brush Tool)
(Fall Leaf)
(1 /New Pattern 34/ 1 0.0745 0.9 0.9019 0.18 / 0 0.602793 1 1 0) -
(.1 1 1 -1 1 1 -180 180 1 0 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe Scatter Brush Tool)
(Ladybug)
(1 /New Pattern 10/ 5 0.898039 0 0 / 0 1 1 0 0.803911 1.2 1 -1.) -
(55 1.55 1 -180 180 1 0 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe Scatter Brush Tool)
(Push Pin)
(1 /New Pattern 36/ 1 0.025 0.1 0.475 0 / 0 1 1 0 0.401676 1 1 ) -
(-1.06145 1.06 1 -180 180 1 0 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe Scatter Brush Tool)
(Strawberry)
(1 /New Pattern 37/ 1 0 0 0 1 / 0 0.803911 1 1 0.803911 1 1 -0.) -
(5 0.5 1 -75 75.419 1 0 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe Scatter Brush Tool)
(Twinkle Star )
(1 /New Pattern 2/ 0 1 / 1 0.5 1 1 0.25 1 1 -0.5 0.5 1 0 0 0 0 ) -
(0) .
%AI8_EndPluginObject
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI8_BeginPluginObject
(Adobe Calligraphic Brush Tool)
(10 pt Oval)
(1 1 19 15 15 130 130 2 0 0 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe Calligraphic Brush Tool)
(12 pt Oval )
(1 7 17 45 45 0 0 2 0 0 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe Calligraphic Brush Tool)
(20 pt Oval)
(1 20 20 20 100 40 80 0 2 1 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe Calligraphic Brush Tool)
(25 pt Round )
(1 10 40 100 100 0 0 2 0 0 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe Calligraphic Brush Tool)
(50 pt Flat)
(1 40 60 0 0 44 44 0 0 0 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe Calligraphic Brush Tool)
(6 pt Flat )
(1 4 8 10 10 90 90 2 0 0 0) .
%AI8_EndPluginObject
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI8_BeginPluginObject
(Adobe ArtOnPath Brush Tool)
(Arrow)
(1 / New Pattern 45/ / / / / 5 0.898039 0 0 /  2 0 1 0 1 0 0 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe ArtOnPath Brush Tool)
(Marker)
(1 / New Pattern 8/ / / / / 0 0 /  1 1 1 0 1 0 0 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe ArtOnPath Brush Tool)
(Paintbrush)
(1 / New Pattern 5/ / / / / 1 0.5 0.85 1 0.45 /  0 0 1 0 1 0 0 ) -
(0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe ArtOnPath Brush Tool)
(Tapered Stroke)
(1 / New Pattern 83/ / / / / 1 0 0 0 1 /  1 1 1 0 1 0 0 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe ArtOnPath Brush Tool)
(Type)
(1 / New Pattern 50/ / / / / 1 0.952941 0.94902 0.196078 0.0745) -
(098 /  1 0 1 0 1 0 0 0) .
%AI8_EndPluginObject
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI8_BeginPluginObject
(Adobe PatternOnPath Brush Tool)
(Double Lines)
(1 / New Pattern 62/ New Pattern 63/ New Pattern 64/ / / 1 1 0.) -
(14 0.09 0 /  1 0 1 0 1 0 0 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe PatternOnPath Brush Tool)
(Laurel)
(1 / New Pattern 65/ New Pattern 42/ New Pattern 67/ / New Patt) -
(ern 69/ 1 0 0.55 1 0.3 /  1 0 1 0 1 0 0 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe PatternOnPath Brush Tool)
(Rope )
(1 / New Pattern 1/ / / New Pattern 3/ New Pattern 6/ 5 0 0 0 /) -
(  1 0 1 0 1 0 0 0) .
%AI8_EndPluginObject
%AI5_End_NonPrinting--
%AI5_BeginPalette
0 0 Pb
1 1 1 1 ([Registration]) 0 Xs
([Registration])
Pc
0 0 0 0 k
(C=0 M=0 Y=0 K=0)
Pc
0 0 0 1 k
(C=0 M=0 Y=0 K=100)
Pc
0 0.1 1 0 k
(C=0 M=10 Y=100 K=0)
Pc
0 0.5 0 0 k
(C=0 M=50 Y=0 K=0)
Pc
0 0.5 1 0 k
(C=0 M=50 Y=100 K=0)
Pc
1 0.55 1 0 k
(C=100 M=55 Y=100 K=0)
Pc
1 0.9 0.1 0 k
(C=100 M=90 Y=10 K=0)
Pc
0.15 1 1 0 k
(C=15 M=100 Y=100 K=0)
Pc
0.45 0.9 0 0 k
(C=45 M=90 Y=0 K=0)
Pc
0.5 0.4 0.3 0 k
(C=50 M=40 Y=30 K=0)
Pc
0.5 0.85 1 0 k
(C=50 M=85 Y=100 K=0)
Pc
0.75 0.05 1 0 k
(C=75 M=5 Y=100 K=0)
Pc
0.75 0.9 0 0 k
(C=75 M=90 Y=0 K=0)
Pc
0.8 0.05 0 0 k
(C=80 M=5 Y=0 K=0)
Pc
Bb
2 (Black, White) 0 0 0 1 1 0 0 1 0 0 Bg
0 BB
(Black, White)
Pc
Bb
2 (Chrome) 0 0 0 1 1 0 0 1 0 0 Bg
0 BB
(Chrome)
Pc
Bb
2 (Rainbow) 0 0 0 1 1 0 0 1 0 0 Bg
0 BB
(Rainbow)
Pc
Bb
0 0 0 0 Bh
2 (Yellow & Orange Radial) 0 0 0 1 1 0 0 1 0 0 Bg
0 BB
(Yellow & Orange Radial)
Pc
(Brick) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p
(Brick)
Pc
(Confetti) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p
(Confetti)
Pc
(Leaves - Fall ) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p
(Leaves - Fall )
Pc
(Stripes) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p
(Stripes)
Pc
0 1 0.7 0 (PANTONE 199 C) 0 x
(PANTONE 199 C)
Pc
0 0 0 0.5 (PANTONE Cool Gray 10 C) 0 x
(PANTONE Cool Gray 10 C)
Pc
PB
%AI5_EndPalette
%%EndSetup
%AI5_BeginLayer
1 1 1 1 0 0 1 0 79 128 255 0 50 Lb
(Layer 1) Ln
0 A
*u
0 O
0 0 0 0.6 k
0 J 0 j 1 w 4 M []0 d0 XR
489.3721 743.6606 m
493.6982 743.6606 L
493.6982 742.5054 L
490.8428 742.5054 L
490.8428 740.6997 L
493.457 740.6997 L
493.457 739.5444 L
490.8428 739.5444 L
490.8428 737.4863 L
493.7197 737.4863 L
493.7197 736.3315 L
489.3721 736.3315 L
489.3721 743.6606 l
f
*U
*u
495.0635 741.7393 m
496.376 741.7393 L
496.376 740.9829 L
496.3965 740.9829 L
496.8379 741.6445 497.4785 741.8652 498.0029 741.8652 c
498.7598 741.8652 499.2949 741.5815 499.5996 740.9097 c
499.9248 741.5605 500.6279 741.8652 501.29 741.8652 c
502.623 741.8652 503.001 740.9517 503.001 739.7441 c
503.001 736.3315 L
501.5947 736.3315 L
501.5947 739.5552 L
501.5947 740.0591 501.5947 740.7729 500.7861 740.7729 c
499.8516 740.7729 499.7363 739.6602 499.7363 738.9565 c
499.7363 736.3315 L
498.3291 736.3315 L
498.3291 739.5552 L
498.3291 740.0591 498.3291 740.7729 497.5205 740.7729 c
496.5859 740.7729 496.4707 739.6602 496.4707 738.9565 c
496.4707 736.3315 L
495.0635 736.3315 L
495.0635 741.7393 l
f
*U
*u
505.8359 739.0513 m
505.8359 739.8071 506.1934 740.7729 507.0967 740.7729 c
508.0098 740.7729 508.2617 739.7754 508.2617 739.0513 c
508.2617 738.3057 507.999 737.2974 507.0752 737.2974 c
506.1406 737.2974 505.8359 738.2847 505.8359 739.0513 c
f
1 D
504.4189 736.3315 m
505.7842 736.3315 L
505.7842 736.9932 L
505.8047 736.9932 l
506.2139 736.4155 506.8652 736.2056 507.4639 736.2056 c
509.123 736.2056 509.7314 737.5703 509.7314 739.0513 c
509.7314 740.542 509.123 741.8652 507.4639 741.8652 c
506.7285 741.8652 506.2354 741.5605 505.8467 741.0459 C
505.8262 741.0459 L
505.8262 744.2065 L
504.4189 744.2065 l
504.4189 736.3315 L
f
*U
*u
0 D
510.8662 744.2065 m
512.2725 744.2065 L
512.2725 736.3315 L
510.8662 736.3315 L
510.8662 744.2065 l
f
*U
*u
514.751 739.5654 m
514.8135 740.29 515.2129 740.8359 516 740.8359 c
516.7881 740.8359 517.1025 740.248 517.1445 739.5654 c
514.751 739.5654 L
f
1 D
518.0898 737.7808 m
517.5645 737.4863 516.9766 737.2344 516.2939 737.2344 c
515.4229 737.2344 514.8135 737.728 514.751 738.5996 C
518.4883 738.5996 l
518.4883 740.4897 517.9219 741.8652 515.916 741.8652 c
514.2363 741.8652 513.4072 740.5737 513.4072 739.0088 c
513.4072 737.2344 514.4463 736.2056 516.2314 736.2056 c
516.9873 736.2056 517.5752 736.3525 518.0898 736.6362 c
518.0898 737.7808 L
f
*U
*u
0 D
519.5703 741.7393 m
520.8828 741.7393 L
520.8828 740.9829 L
520.9033 740.9829 L
521.3447 741.6445 521.9854 741.8652 522.5098 741.8652 c
523.2666 741.8652 523.8018 741.5815 524.1064 740.9097 c
524.4316 741.5605 525.1348 741.8652 525.7969 741.8652 c
527.1299 741.8652 527.5078 740.9517 527.5078 739.7441 c
527.5078 736.3315 L
526.1016 736.3315 L
526.1016 739.5552 L
526.1016 740.0591 526.1016 740.7729 525.293 740.7729 c
524.3584 740.7729 524.2432 739.6602 524.2432 738.9565 c
524.2432 736.3315 L
522.8359 736.3315 L
522.8359 739.5552 L
522.8359 740.0591 522.8359 740.7729 522.0273 740.7729 c
521.0928 740.7729 520.9775 739.6602 520.9775 738.9565 c
520.9775 736.3315 L
519.5703 736.3315 L
519.5703 741.7393 l
f
*U
*u
508.0488 722.3145 m
507.125 722.3145 L
507.125 722.6084 L
502.7568 722.6084 L
502.7568 722.3145 L
501.8438 722.3145 L
501.8438 725.8428 L
508.0488 725.8428 L
508.0488 722.3145 l
f
1 D
507.125 723.4487 m
507.125 725.0029 L
502.7568 725.0029 L
502.7568 723.4487 L
507.125 723.4487 l
f
502.2217 727.2705 m
502.5713 727.2705 502.8408 727.4106 503.0303 727.6904 c
503.2188 727.9707 503.3135 728.3027 503.3135 728.6885 c
503.3135 729.0801 503.2188 729.4141 503.0303 729.6909 c
502.8408 729.9673 502.5713 730.1055 502.2217 730.1055 c
501.8711 730.1055 501.5996 729.9673 501.4072 729.6909 c
501.2148 729.4141 501.1191 729.0801 501.1191 728.6885 c
501.1191 728.3027 501.2148 727.9707 501.4072 727.6904 c
501.5996 727.4106 501.8711 727.2705 502.2217 727.2705 c
f
0 D
502.2217 730.9351 m
502.7813 730.9351 503.2314 730.7617 503.5703 730.415 c
503.9102 730.0688 504.1152 729.6328 504.1846 729.1084 C
505.4658 729.1084 L
505.4658 731.3447 L
506.3799 731.3447 L
506.3799 726.2939 L
505.4658 726.2939 L
505.4658 728.2783 l
504.6191 728.2783 504.1914 728.2783 504.1846 728.2783 c
504.1152 727.7466 503.9121 727.3076 503.5762 726.9609 c
503.2402 726.6143 502.7881 726.4414 502.2217 726.4414 c
501.584 726.4414 501.0928 726.6582 500.7461 727.0918 c
500.3994 727.5264 500.2266 728.0581 500.2266 728.6885 c
500.2266 729.3184 500.3994 729.8496 500.7461 730.2842 c
501.0928 730.7178 501.2656 730.9351 y
501.584 730.9351 502.2217 730.9351 v
f
508.0488 726.2837 m
507.125 726.2837 L
507.125 731.6597 L
508.0488 731.6597 L
508.0488 726.2837 l
f
*U
*u
517.0371 728.1738 m
511.0098 728.1738 L
511.0098 731.6387 L
511.9238 731.6279 L
511.9238 730.6094 L
516.1133 730.6094 L
516.1133 731.6597 L
517.0371 731.6494 L
517.0371 728.1738 l
f
518.3916 726.7036 m
509.6768 726.7036 L
509.6768 727.5439 L
518.3916 727.5439 L
518.3916 726.7036 l
f
517.1738 722.4824 m
511.0098 722.4824 L
511.0098 724.6455 L
516.1133 724.6455 L
516.1133 725.2441 L
511.0098 725.2441 L
511.0098 725.9795 L
517.0371 725.9795 L
517.0371 723.9629 L
511.9238 723.9629 L
511.9238 723.2178 L
517.1738 723.2178 L
517.1738 722.4824 l
f
1 D
516.1025 728.9507 m
516.1025 729.833 L
511.9238 729.833 L
511.9238 728.9507 L
516.1025 728.9507 l
f
*U
*u
0 D
526.9375 726.3047 m
526.0137 726.3047 L
526.0137 731.6597 L
526.9375 731.6597 L
526.9375 726.3047 l
f
525.1836 726.3154 m
524.2705 726.3154 L
524.2705 728.5728 L
523.0938 728.5728 L
523.0938 729.4023 L
524.2705 729.4023 L
524.2705 731.376 L
525.1836 731.376 L
525.1836 726.3154 l
f
523.4199 726.8086 m
522.8877 726.7036 522.3291 726.6143 521.7451 726.541 c
521.1602 726.4673 520.3398 726.4307 519.2822 726.4307 C
519.2822 729.2026 L
521.8555 729.2026 L
521.8555 730.1475 L
519.293 730.1475 L
519.293 730.9873 L
522.7686 730.9873 L
522.7686 728.4365 L
520.1963 728.4365 L
520.1963 727.2705 l
520.9385 727.2847 521.5361 727.3267 521.9912 727.3965 c
522.4463 727.4668 522.874 727.5469 523.2725 727.6382 C
523.4199 726.8086 l
f
526.9375 722.3042 m
526.0137 722.3042 L
526.0137 722.5981 L
521.6133 722.5981 L
521.6133 722.3042 L
520.7002 722.3042 L
520.7002 725.874 L
526.9375 725.874 L
526.9375 722.3042 l
f
1 D
526.0137 723.4385 m
526.0137 725.0342 L
521.6133 725.0342 L
521.6133 723.4385 L
526.0137 723.4385 l
f
*U
*u
0 D
399.8115 695.4834 m
399.293 695.4834 L
399.293 699.7676 L
399.8115 699.7676 L
399.8115 695.4834 l
f
398.5283 695.6025 m
397.9932 695.6025 L
397.9932 697.3789 L
397.1855 697.3789 l
397.1396 696.999 396.9883 696.6738 396.7305 696.4014 c
396.4727 696.1299 396.1309 695.9878 395.7061 695.9766 c
395.293 695.9707 394.9326 696.1167 394.627 696.4141 c
394.3203 696.7119 394.168 697.127 394.168 697.6597 c
394.168 698.0957 394.3047 698.4756 394.5801 698.7988 c
394.8545 699.1216 395.2305 699.2832 395.7061 699.2832 c
396.1484 699.2832 396.499 699.1372 396.7598 698.8457 c
397.0205 698.5537 397.165 698.2373 397.1934 697.8975 C
397.9932 697.8975 L
397.9932 699.5469 L
398.5283 699.5469 L
398.5283 695.6025 l
f
399.8115 692.2959 m
399.293 692.2959 L
399.293 692.5171 L
395.6465 692.5171 L
395.6465 692.2959 L
395.1201 692.2959 L
395.1201 695.1348 L
399.8115 695.127 L
399.8115 692.2959 l
f
1 D
395.7061 696.4609 m
396.0635 696.4609 396.3281 696.5928 396.501 696.8564 c
396.6738 697.1201 396.7598 697.376 396.7598 697.6255 c
396.7598 697.9941 396.6514 698.2813 396.4326 698.4883 c
396.2148 698.6953 395.9697 698.7988 395.6973 698.7988 c
395.4424 698.7988 395.2002 698.6934 394.9707 698.4844 c
394.7412 698.2744 394.627 698.0078 394.627 697.6851 c
394.627 697.334 394.7188 697.042 394.9033 696.8096 c
395.0869 696.5771 395.3545 696.4609 395.7061 696.4609 c
f
399.293 693.0439 m
399.293 694.6167 L
395.6465 694.6167 L
395.6465 693.0439 L
399.293 693.0439 l
f
*U
*u
0 D
406.4268 697.125 m
401.5566 697.125 L
401.5566 699.6494 L
402.083 699.6494 L
402.083 698.7573 L
405.9082 698.7573 L
405.9082 699.6582 L
406.4268 699.6582 L
406.4268 697.125 l
f
407.1924 695.8506 m
400.7402 695.8506 L
400.7402 696.3433 L
407.1924 696.3433 L
407.1924 695.8506 l
f
406.5459 692.3228 m
401.5566 692.3228 L
401.5566 693.9717 L
405.9004 693.9717 L
405.9004 694.6436 L
401.5566 694.6436 L
401.5566 695.1191 L
406.418 695.1191 L
406.418 693.5127 L
402.0752 693.5127 L
402.0752 692.7988 L
406.5459 692.7988 L
406.5459 692.3228 l
f
1 D
405.9082 697.6182 m
405.9082 698.3066 L
402.083 698.3066 L
402.083 697.6182 L
405.9082 697.6182 l
f
*U
*u
0 D
413.4063 695.271 m
412.8877 695.271 L
412.8877 699.7676 L
413.4063 699.7676 L
413.4063 695.271 l
f
410.9072 695.8745 m
410.5156 695.8179 410.0928 695.7695 409.6367 695.73 c
409.1807 695.6904 408.6035 695.665 407.9063 695.6533 C
407.9063 697.8467 L
409.8955 697.8467 L
409.8955 698.79 L
407.9063 698.79 L
407.9063 699.3174 L
410.4141 699.3174 L
410.4141 697.3789 L
408.4336 697.3789 L
408.4336 696.189 l
408.9092 696.2061 409.3291 696.2275 409.6914 696.2529 c
410.0547 696.2783 410.4307 696.3335 410.8223 696.4185 C
410.9072 695.8745 l
f
412.2246 695.356 m
411.7061 695.356 L
411.7061 697.1411 L
410.7119 697.1411 L
410.7119 697.668 L
411.7061 697.668 L
411.7061 699.5552 L
412.2246 699.5552 L
412.2246 695.356 l
f
413.4063 692.1943 m
412.8877 692.1943 L
412.8877 692.4238 L
409.3096 692.4238 L
409.3096 692.1943 L
408.7822 692.1943 L
408.7822 694.897 L
413.4063 694.8887 L
413.4063 692.1943 l
f
1 D
412.8877 692.9502 m
412.8877 694.3701 L
409.3096 694.3701 L
409.3096 692.9502 L
412.8877 692.9502 l
f
*U
*u
0 D
417.7783 699.4551 m
418.1748 699.4551 418.6758 699.3784 419.2793 699.2256 c
419.8828 699.0723 420.1846 698.6758 420.1846 698.0356 c
420.1846 697.3896 419.8828 696.9956 419.2793 696.854 c
418.6758 696.7124 418.1748 696.6416 417.7783 696.6416 c
417.3818 696.6416 416.8828 696.7124 416.2822 696.854 c
415.6816 696.9956 415.3818 697.3896 415.3818 698.0356 c
415.3818 698.6758 415.6816 699.0723 416.2822 699.2256 c
416.8828 699.3784 417.3818 699.4551 417.7783 699.4551 c
f
421.0088 695.2988 m
414.5576 695.3071 L
414.5576 695.834 L
421.0088 695.8252 L
421.0088 695.2988 l
f
420.3623 692.3745 m
415.3477 692.3745 L
415.3477 694.6699 L
415.875 694.6699 L
415.875 692.9014 L
420.3623 692.9014 L
420.3623 692.3745 l
f
1 D
417.7783 697.1006 m
418.2773 697.1006 418.7207 697.1787 419.1094 697.334 c
419.4971 697.4902 419.6914 697.7236 419.6914 698.0356 c
419.6914 698.3472 419.4971 698.582 419.1094 698.7412 c
418.7207 698.8994 418.2773 698.979 417.7783 698.979 c
417.3086 698.979 416.873 698.8994 416.4736 698.7412 c
416.0742 698.582 415.875 698.3472 415.875 698.0356 c
415.875 697.7236 416.0732 697.4902 416.4697 697.334 c
416.8662 697.1787 417.3027 697.1006 417.7783 697.1006 c
f
*U
*u
0 D
428.1611 696.5293 m
427.8896 696.478 427.5391 696.4297 427.1113 696.3848 c
426.6836 696.3389 426.3447 696.3052 426.0957 696.2822 C
426.0957 694.8799 L
425.6201 694.8716 L
425.6201 696.2568 l
425.3535 696.2344 425.0449 696.2061 424.6934 696.1719 c
424.3418 696.1377 424.0078 696.1152 423.6904 696.104 C
423.5371 696.6479 l
424.4551 696.6763 425.5547 696.7529 426.835 696.8774 c
426.9033 697.1948 426.9541 697.5107 426.9883 697.8252 c
427.0225 698.1396 427.0479 698.4585 427.0645 698.7813 C
424.1836 698.7813 L
424.1836 699.3086 L
427.5576 699.3086 l
427.5469 698.793 427.5107 698.3027 427.4512 697.8379 c
427.3916 697.373 427.3477 697.0645 427.3193 696.9116 c
427.6484 696.9512 427.9121 696.9878 428.1104 697.022 C
428.1611 696.5293 l
f
429.1816 693.9023 m
428.6631 693.9023 L
428.6631 694.9902 L
427.1494 694.9902 L
427.1494 695.4922 L
428.6631 695.4922 L
428.6631 699.7676 L
429.1816 699.7676 L
429.1816 693.9023 l
f
429.3174 692.3979 m
424.5908 692.3979 L
424.5908 694.7783 L
425.1094 694.7783 L
425.1094 692.9248 L
429.3174 692.9248 L
429.3174 692.3979 l
f
*U
*u
432.8037 699.293 m
433.4102 699.293 433.8438 699.1416 434.1045 698.8379 c
434.3652 698.5352 434.4951 698.2192 434.4951 697.8906 c
434.4951 697.5615 434.3652 697.2471 434.1045 696.9473 c
433.8438 696.6465 433.4131 696.4966 432.8125 696.4966 c
432.2119 696.4966 431.7852 696.6465 431.5332 696.9473 c
431.2803 697.2471 431.1543 697.5645 431.1543 697.8989 c
431.1543 698.2217 431.2793 698.5352 431.5283 698.8379 c
431.7783 699.1416 432.2031 699.293 432.8037 699.293 c
f
436.1445 692.2041 m
435.6338 692.2041 L
435.6338 699.752 L
436.1445 699.752 L
436.1445 692.2041 l
f
435.2344 695.502 m
434.8096 695.4512 434.4189 695.4082 434.0615 695.3745 c
433.7051 695.3403 433.3623 695.312 433.0332 695.2896 C
433.0332 692.7822 L
432.5146 692.7822 L
432.5146 695.2637 l
432.3164 695.2471 432.0303 695.2285 431.6563 695.209 c
431.2822 695.1885 430.9229 695.1675 430.5771 695.145 C
430.5 695.6973 l
430.7266 695.6973 431.0254 695.7031 431.3965 695.7144 c
431.7676 695.7256 432.1943 695.7427 432.6758 695.7656 c
433.209 695.7993 433.6992 695.8359 434.1465 695.876 c
434.5947 695.9155 434.9346 695.9551 435.167 695.9951 C
435.2344 695.502 l
f
1 D
432.8125 696.9639 m
433.084 696.9639 433.3506 697.0361 433.6113 697.1807 c
433.8721 697.3252 434.002 697.5615 434.002 697.8906 c
434.002 698.2134 433.8701 698.4512 433.6074 698.6045 c
433.3438 698.7573 433.0762 698.834 432.8037 698.834 c
432.543 698.834 432.2852 698.7646 432.0303 698.626 c
431.7754 698.4868 431.6475 698.2446 431.6475 697.8989 c
431.6475 697.5645 431.7754 697.3252 432.0303 697.1807 c
432.2852 697.0361 432.5459 696.9639 432.8125 696.9639 c
f
*U
*u
0 D
441.75 695.0332 m
441.3369 694.9199 440.709 694.8105 439.8672 694.7061 c
439.0264 694.6006 438.2764 694.5488 437.6191 694.5488 C
437.6191 698.8584 L
438.1465 698.8584 L
438.1465 695.1348 l
438.6338 695.1406 439.2432 695.1846 439.9736 695.2666 c
440.7051 695.3486 441.2686 695.4521 441.665 695.5771 C
441.75 695.0332 l
f
443.7646 695.7217 m
442.7451 695.7217 L
442.7451 692.2026 L
442.209 692.2026 L
442.209 699.7676 L
442.7451 699.7676 L
442.7451 696.2485 L
443.7646 696.2485 L
443.7646 695.7217 l
f
*U
*u
452.8906 696.8096 m
451.9219 696.8096 L
451.9219 695.2202 L
451.4033 695.2202 L
451.4033 699.7676 L
451.9219 699.7676 L
451.9219 697.3369 L
452.8906 697.3369 L
452.8906 696.8096 l
f
448.9385 698.7734 m
448.9551 698.1553 449.167 697.6182 449.5752 697.1621 c
449.9834 696.7061 450.3799 696.4014 450.7656 696.2485 C
450.4346 695.8066 l
449.9922 696.0332 449.6064 696.3389 449.2783 696.7246 c
448.9492 697.1094 448.7422 697.4526 448.6572 697.7529 c
448.5498 697.4243 448.3389 697.0659 448.0244 696.6777 c
447.71 696.2896 447.292 695.9395 446.7705 695.6279 C
446.3965 696.0273 l
446.9121 696.3105 447.3652 696.6807 447.7568 697.1367 c
448.1475 697.5928 448.3574 698.1387 448.3857 698.7734 C
446.8047 698.7734 L
446.8047 699.2915 L
450.4678 699.2915 L
450.4678 698.7734 L
448.9385 698.7734 l
f
449.6943 694.999 m
450.2383 694.999 450.7744 694.9111 451.3008 694.7354 c
451.8281 694.5596 452.0918 694.1777 452.0918 693.5879 c
452.0918 692.9932 451.8291 692.6206 451.3057 692.4702 c
450.7813 692.3203 450.2441 692.2451 449.6943 692.2451 c
449.1396 692.2451 448.5938 692.3203 448.0586 692.4702 c
447.5225 692.6206 447.2549 692.9932 447.2549 693.5879 c
447.2549 694.1831 447.5225 694.5669 448.0586 694.7397 c
448.5938 694.9126 449.1396 694.999 449.6943 694.999 c
f
1 D
449.6943 692.7725 m
450.2217 692.7725 450.668 692.833 451.0332 692.9551 c
451.3984 693.0771 451.582 693.2881 451.582 693.5879 c
451.5869 693.9507 451.3789 694.1943 450.957 694.3193 c
450.5342 694.4434 450.1143 694.5 449.6943 694.4893 c
449.2129 694.4834 448.7754 694.4282 448.3809 694.3232 c
447.9873 694.2183 447.791 693.9736 447.791 693.5879 c
447.791 693.3271 447.9561 693.126 448.2881 692.9844 c
448.6191 692.8428 449.0879 692.7725 449.6943 692.7725 c
f
*U
*u
0 D
455.7207 698.688 m
455.7607 698.291 455.9619 697.8438 456.3242 697.3447 c
456.6875 696.8467 457.1123 696.4551 457.5996 696.1719 C
457.2344 695.7305 l
456.8652 695.9678 456.5059 696.2925 456.1543 696.7031 c
455.8027 697.1143 455.5684 697.481 455.4492 697.8042 c
455.3076 697.4302 455.0889 697.0645 454.7949 696.7075 c
454.5 696.3506 454.1377 696.019 453.707 695.7129 C
453.2813 696.1211 l
454.001 696.5459 454.501 697.04 454.7813 697.6045 c
455.0625 698.168 455.2305 698.8096 455.2871 699.5293 C
455.832 699.4023 l
455.8203 699.2773 455.8047 699.1655 455.7852 699.0664 c
455.7646 698.9673 455.7432 698.8408 455.7207 698.688 c
f
458.9854 695.2793 m
458.4668 695.2793 L
458.4668 699.7676 L
458.9854 699.7676 L
458.9854 695.2793 l
f
458.9766 692.2109 m
458.458 692.2109 L
458.458 694.3789 L
454.3525 694.3789 L
454.3525 694.9053 L
458.9766 694.9053 L
458.9766 692.2109 l
f
*U
*u
465.7627 695.2046 m
465.2354 695.2046 L
465.2354 697.2363 L
463.9521 697.2363 L
463.9521 697.7549 L
465.2354 697.7549 L
465.2354 699.752 L
465.7627 699.752 L
465.7627 695.2046 l
f
462.5752 698.7402 m
462.5752 698.2134 462.749 697.6904 463.0977 697.1719 c
463.4463 696.6533 463.8496 696.2695 464.3086 696.0205 C
463.9346 695.604 l
463.5889 695.8306 463.2529 696.1509 462.9277 696.5645 c
462.6016 696.978 462.3906 697.3408 462.2939 697.6523 c
462.1982 697.3633 462.0039 697.0078 461.7119 696.5859 c
461.4199 696.1636 461.0225 695.7852 460.5176 695.4512 C
460.1348 695.876 l
460.6563 696.1592 461.0996 696.5703 461.4658 697.1084 c
461.8311 697.6465 462.0137 698.1904 462.0137 698.7402 C
460.4834 698.7402 L
460.4834 699.2676 L
464.1221 699.2676 L
464.1221 698.7402 L
462.5752 698.7402 l
f
465.7627 692.2041 m
465.2354 692.2041 L
465.2354 694.2949 L
461.1719 694.2949 L
461.1719 694.8223 L
465.7627 694.8223 L
465.7627 692.2041 l
f
*U
*u
469.2432 699.0723 m
469.7412 699.0723 470.165 698.9175 470.5137 698.6084 c
470.8623 698.2998 471.0361 697.8936 471.0361 697.3887 c
471.0361 696.8789 470.8633 696.4707 470.5176 696.165 c
470.1719 695.8589 469.7471 695.7061 469.2432 695.7061 c
468.7324 695.7061 468.3076 695.8604 467.9678 696.1689 c
467.6279 696.478 467.458 696.8848 467.458 697.3887 c
467.458 697.8936 467.6357 698.2998 467.9932 698.6084 c
468.3496 698.9175 468.7666 699.0723 469.2432 699.0723 c
f
472.7705 693.9976 m
472.252 693.9976 L
472.252 699.752 L
472.7705 699.752 L
472.7705 693.9976 l
f
472.8721 692.4424 m
468.1377 692.4424 L
468.1377 694.873 L
468.6563 694.873 L
468.6563 692.9688 L
472.8721 692.9688 L
472.8721 692.4424 l
f
1 D
469.2432 696.1992 m
469.5654 696.1992 469.8545 696.2998 470.1094 696.501 c
470.3643 696.7021 470.4922 696.998 470.4922 697.3887 c
470.4922 697.791 470.3633 698.0869 470.1055 698.2773 c
469.8477 698.4668 469.5596 698.562 469.2432 698.562 c
468.9307 698.562 468.6465 698.4658 468.3887 698.2729 c
468.1309 698.0801 468.002 697.7856 468.002 697.3887 c
468.002 696.9922 468.1309 696.6943 468.3887 696.4961 c
468.6465 696.2979 468.9307 696.1992 469.2432 696.1992 c
f
*U
*u
0 D
479.3633 699.627 m
479.834 699.627 480.3486 699.5586 480.9063 699.4229 c
481.4648 699.2871 481.7441 698.9243 481.7441 698.335 c
481.7441 697.9043 481.501 697.6055 481.0166 697.4385 c
480.5322 697.271 479.9727 697.1875 479.3379 697.1875 c
478.7539 697.1875 478.2129 697.2568 477.7148 697.3955 c
477.2158 697.5342 476.9668 697.8477 476.9668 698.335 c
476.9668 698.896 477.2227 699.2515 477.7363 699.4014 c
478.248 699.5518 478.791 699.627 479.3633 699.627 c
f
482.6025 695.5303 m
476.125 695.5303 L
476.125 696.04 L
477.9609 696.04 L
477.9609 697.0342 L
478.4707 697.0342 L
478.4707 696.04 L
480.1543 696.04 L
480.1543 697.0342 L
480.6563 697.0342 L
480.6563 696.04 L
482.6025 696.04 L
482.6025 695.5303 l
f
479.3125 694.8418 m
480.0439 694.8418 480.6348 694.7422 481.085 694.5439 c
481.5352 694.3457 481.7607 693.9941 481.7607 693.4902 c
481.7607 692.9912 481.498 692.6484 480.9746 692.4614 c
480.4502 692.2744 479.8994 692.1807 479.3213 692.1807 c
478.6191 692.1807 478.0234 692.2788 477.5361 692.4741 c
477.0488 692.6699 476.8047 693.0029 476.8047 693.4727 c
476.8047 693.9375 477.0293 694.2817 477.4766 694.5059 c
477.9238 694.7295 478.5361 694.8418 479.3125 694.8418 c
f
1 D
479.3379 697.6636 m
479.8994 697.6636 480.3555 697.7227 480.707 697.8418 c
481.0576 697.9609 481.2334 698.1279 481.2334 698.3438 c
481.2334 698.6777 481.0469 698.8975 480.6729 699.002 c
480.2988 699.1069 479.8652 699.1592 479.3721 699.1592 c
478.9131 699.1592 478.4824 699.1099 478.0801 699.0107 c
477.6777 698.9116 477.4766 698.7061 477.4766 698.3945 c
477.4766 698.1167 477.6621 697.9258 478.0332 697.8208 c
478.4043 697.7158 478.8398 697.6636 479.3379 697.6636 c
f
479.3125 692.708 m
479.874 692.708 480.3359 692.7744 480.6982 692.9077 c
481.0605 693.041 481.2422 693.2354 481.2422 693.4902 c
481.2422 693.8408 481.0381 694.0732 480.6299 694.1865 c
480.2227 694.2998 479.7803 694.3569 479.3047 694.3569 c
478.8223 694.3569 478.3789 694.2988 477.9736 694.1826 c
477.5684 694.0664 477.3662 693.833 477.3662 693.4814 c
477.3662 693.1699 477.5625 692.9629 477.957 692.8608 c
478.3506 692.7588 478.8027 692.708 479.3125 692.708 c
f
*U
*u
0 D
485.9424 695.7871 m
483.8008 695.7871 L
483.8008 699.3145 L
488.5947 699.3145 L
488.5947 698.7871 L
484.3193 698.7871 L
484.3193 696.314 L
488.6543 696.314 L
488.6543 695.7871 L
486.4697 695.7871 L
486.4697 693.9595 L
489.376 693.9595 L
489.376 693.4326 L
482.916 693.4326 L
482.916 693.9595 L
485.9424 693.9595 L
485.9424 695.7871 l
f
*U
*u
496.2383 693.3115 m
489.7705 693.3115 L
489.7705 693.8389 L
492.7021 693.8389 L
492.7021 695.335 L
490.5693 695.335 L
490.5693 697.6465 L
494.8271 697.6465 L
494.8271 698.709 L
490.5693 698.709 L
490.5693 699.2363 L
495.3545 699.2363 L
495.3545 697.1455 L
491.0879 697.1455 L
491.0879 695.8618 L
495.4736 695.8618 L
495.4736 695.335 L
493.2295 695.335 L
493.2295 693.8389 L
496.2383 693.8389 L
496.2383 693.3115 l
f
*U
*u
501.2227 698.0674 m
501.1992 697.4839 501.3359 696.8521 501.6299 696.1719 c
501.9248 695.4922 502.2705 694.9707 502.667 694.6084 C
502.2764 694.1748 l
502.0215 694.4463 501.7549 694.8247 501.4775 695.3096 c
501.1992 695.7939 501.0156 696.2769 500.9248 696.7588 c
500.7998 696.2822 500.582 695.7852 500.2705 695.2666 c
499.959 694.748 499.5986 694.3389 499.1904 694.0386 C
498.7656 694.4639 l
499.3555 694.8145 499.8311 695.4014 500.1934 696.2227 c
500.5566 697.0449 500.7373 697.9995 500.7373 699.0879 C
501.29 699.0107 l
501.2793 698.8184 501.2686 698.6626 501.2607 698.5435 c
501.252 698.4243 501.2393 698.2656 501.2227 698.0674 c
f
505.2598 695.6367 m
504.291 695.6367 L
504.291 692.3555 L
503.7725 692.3555 L
503.7725 699.7676 L
504.291 699.7676 L
504.291 696.1636 L
505.2598 696.1636 L
505.2598 695.6367 l
f
*U
*u
509.0459 699.627 m
509.5156 699.627 510.0303 699.5586 510.5879 699.4229 c
511.1465 699.2871 511.4258 698.9243 511.4258 698.335 c
511.4258 697.9043 511.1826 697.6055 510.6982 697.4385 c
510.2139 697.271 509.6543 697.1875 509.0195 697.1875 c
508.4365 697.1875 507.8945 697.2568 507.3965 697.3955 c
506.8975 697.5342 506.6484 697.8477 506.6484 698.335 c
506.6484 698.896 506.9053 699.2515 507.418 699.4014 c
507.9307 699.5518 508.4727 699.627 509.0459 699.627 c
f
512.2842 695.5303 m
505.8066 695.5303 L
505.8066 696.04 L
507.6426 696.04 L
507.6426 697.0342 L
508.1533 697.0342 L
508.1533 696.04 L
509.8359 696.04 L
509.8359 697.0342 L
510.3379 697.0342 L
510.3379 696.04 L
512.2842 696.04 L
512.2842 695.5303 l
f
508.9941 694.8418 m
509.7256 694.8418 510.3164 694.7422 510.7666 694.5439 c
511.2168 694.3457 511.4424 693.9941 511.4424 693.4902 c
511.4424 692.9912 511.1807 692.6484 510.6563 692.4614 c
510.1318 692.2744 509.5811 692.1807 509.0029 692.1807 c
508.3008 692.1807 507.7051 692.2788 507.2178 692.4741 c
506.7305 692.6699 506.4873 693.0029 506.4873 693.4727 c
506.4873 693.9375 506.7109 694.2817 507.1582 694.5059 c
507.6064 694.7295 508.2178 694.8418 508.9941 694.8418 c
f
1 D
509.0195 697.6636 m
509.5811 697.6636 510.0371 697.7227 510.3887 697.8418 c
510.7393 697.9609 510.915 698.1279 510.915 698.3438 c
510.915 698.6777 510.7285 698.8975 510.3545 699.002 c
509.9805 699.1069 509.5469 699.1592 509.0537 699.1592 c
508.5947 699.1592 508.1641 699.1099 507.7617 699.0107 c
507.3594 698.9116 507.1582 698.7061 507.1582 698.3945 c
507.1582 698.1167 507.3438 697.9258 507.7148 697.8208 c
508.0859 697.7158 508.5215 697.6636 509.0195 697.6636 c
f
508.9941 692.708 m
509.5557 692.708 510.0176 692.7744 510.3799 692.9077 c
510.7422 693.041 510.9238 693.2354 510.9238 693.4902 c
510.9238 693.8408 510.7197 694.0732 510.3115 694.1865 c
509.9043 694.2998 509.4619 694.3569 508.9863 694.3569 c
508.5039 694.3569 508.0605 694.2988 507.6553 694.1826 c
507.25 694.0664 507.0479 693.833 507.0479 693.4814 c
507.0479 693.1699 507.2451 692.9629 507.6387 692.8608 c
508.0322 692.7588 508.4844 692.708 508.9941 692.708 c
f
*U
*u
0 D
515.6504 698.9585 m
513.9248 698.9585 L
513.9248 699.5029 L
515.6504 699.5029 L
515.6504 698.9585 l
f
516.8486 697.9639 m
512.6924 697.9639 L
512.6924 698.4824 L
516.8486 698.4824 L
516.8486 697.9639 l
f
519.0332 696.2129 m
517.9785 696.2129 L
517.9785 693.8838 L
517.4609 693.8838 L
517.4609 699.7832 L
517.9785 699.7832 L
517.9785 696.7402 L
519.0332 696.7402 L
519.0332 696.2129 l
f
514.6729 697.4795 m
515.0127 697.4795 515.3477 697.3887 515.6797 697.2075 c
516.0107 697.0264 516.1768 696.709 516.1768 696.2559 c
516.1768 695.8252 516.0107 695.5132 515.6797 695.3203 c
515.3477 695.1279 515.0127 695.0313 514.6729 695.0313 c
514.332 695.0313 513.9971 695.1235 513.665 695.3076 c
513.334 695.4917 513.168 695.8076 513.168 696.2559 c
513.168 696.709 513.334 697.0264 513.665 697.2075 c
513.9971 697.3887 514.332 697.4795 514.6729 697.4795 c
f
518.123 692.3799 m
513.5332 692.3799 L
513.5332 694.4707 L
514.0518 694.4707 L
514.0518 692.9063 L
518.123 692.9063 L
518.123 692.3799 l
f
1 D
514.6729 695.5244 m
514.916 695.5244 515.1396 695.5854 515.3438 695.707 c
515.5479 695.8291 515.6504 696.0117 515.6504 696.2559 c
515.6504 696.5107 515.5508 696.6992 515.3525 696.8208 c
515.1543 696.9424 514.9277 697.0039 514.6729 697.0039 c
514.417 697.0039 514.1895 696.9453 513.9883 696.8291 c
513.7871 696.7129 513.6865 696.5215 513.6865 696.2559 c
513.6865 696.0005 513.7881 695.8149 513.9922 695.6987 c
514.1963 695.5825 514.4229 695.5244 514.6729 695.5244 c
f
*U
*u
0 D
523.7637 694.4209 m
523.2939 694.3301 522.6904 694.2495 521.9531 694.1787 c
521.2168 694.1079 520.5029 694.061 519.8115 694.0386 C
519.8115 698.79 L
523.1436 698.7813 L
523.1436 698.2549 L
520.3301 698.2627 L
520.3301 694.5996 l
520.7773 694.6108 521.3271 694.6475 521.9785 694.71 c
522.6309 694.7725 523.2002 694.8486 523.6875 694.9395 C
523.7637 694.4209 l
f
525.8799 696.0786 m
524.9033 696.0786 L
524.9033 692.2026 L
524.3672 692.2026 L
524.3672 699.7676 L
524.9033 699.7676 L
524.9033 696.6055 L
525.8799 696.6055 L
525.8799 696.0786 l
f
*U
*u
526.8838 692.5742 m
526.8838 693.4238 L
527.5898 693.4238 L
527.5898 692.5742 L
526.8838 692.5742 l
f
*U
*u
0 1 0.7 0 (PANTONE 199 C) 0 x
574.2295 698.6367 m
574.2295 698.0425 l
574.2295 697.4126 574.1035 696.7466 573.2852 696.7466 c
572.5557 696.7466 572.4121 697.4575 572.4121 698.0425 C
572.4121 698.6367 l
574.2295 698.6367 L
f
576.7139 698.6367 m
576.7139 698.1509 l
576.7139 697.5747 576.6602 696.9355 575.9307 696.9355 c
575.2832 696.9355 575.166 697.5928 575.166 698.1235 C
575.166 698.6367 l
576.7139 698.6367 L
f
1 D
571.4219 699.8965 m
571.4219 697.7007 l
571.4219 696.9087 571.6563 695.4868 573.2402 695.4868 c
574.0137 695.4868 574.5898 696.0718 574.6709 696.9268 C
574.6885 696.9268 l
574.8242 696.1797 575.3457 695.6758 576.0928 695.6758 c
577.4697 695.6758 577.7041 696.8906 577.7041 697.7007 C
577.7041 699.8965 l
571.4219 699.8965 L
f
*U
*u
0 D
572.7627 693.6509 m
573.4736 693.6509 573.5635 692.8496 573.5635 692.3096 C
573.5635 691.7876 l
573.2041 691.7876 572.8711 691.8418 572.6104 692.0396 c
572.3574 692.2285 572.1963 692.5166 572.1963 692.8857 c
572.1963 693.3179 572.3672 693.6509 572.7627 693.6509 c
f
1 D
574.7793 694.2627 m
575.085 693.8579 575.2832 693.3447 575.2832 692.8315 c
575.2832 692.1206 575.0313 691.7876 574.2842 691.7876 C
574.2842 692.4536 l
574.2842 692.9575 574.2393 693.5518 574.0137 694.0107 c
573.7891 694.4697 573.3838 694.8027 572.6904 694.8027 c
571.8086 694.8027 571.3135 694.002 571.3135 693.1826 c
571.3135 692.6338 571.6016 692.0308 572.1152 691.752 C
572.1152 691.7339 l
571.9707 691.7246 571.665 691.7246 571.4219 691.6797 C
571.4219 690.6177 l
571.7822 690.6445 572.1055 690.6626 572.457 690.6719 c
572.7988 690.6807 573.1494 690.6899 573.6182 690.6899 C
574.2119 690.6899 l
575.5801 690.6899 576.165 691.2749 576.165 692.6875 c
576.165 693.2007 576.0303 693.8306 575.8135 694.2988 c
574.7793 694.2627 L
f
*U
*u
0 D
575.085 686.7476 m
575.2109 687.1167 575.2832 687.3867 575.2832 687.8276 c
575.2832 688.1519 575.166 688.5386 574.7695 688.5386 c
574.0322 688.5386 574.5 686.4419 572.8262 686.4419 c
571.7461 686.4419 571.3135 687.4048 571.3135 688.3857 c
571.3135 688.8447 571.3945 689.313 571.5117 689.7539 c
572.502 689.6816 L
572.3125 689.3037 572.1963 688.9077 572.1963 688.4937 c
572.1963 688.1875 572.3125 687.7017 572.7627 687.7017 c
573.6719 687.7017 573.0508 689.7988 574.7246 689.7988 c
575.7236 689.7988 576.165 688.9258 576.165 687.981 c
576.165 687.4136 576.0752 687.0449 575.9941 686.6665 C
575.085 686.7476 l
f
*U
*u
576.0566 685.479 m
576.0566 684.2729 L
571.4219 684.2729 L
571.4219 685.479 L
576.0566 685.479 l
f
578.0547 685.479 m
578.0547 684.2729 L
576.9033 684.2729 L
576.9033 685.479 L
578.0547 685.479 l
f
*U
*u
575.0576 679.998 m
575.1572 680.2139 575.2285 680.4478 575.2285 680.8169 c
575.2285 681.564 574.6348 682.041 573.7617 682.041 c
572.9072 682.041 572.25 681.6357 572.25 680.79 c
572.25 680.4478 572.376 680.0698 572.4658 679.8628 c
571.4668 679.8091 L
571.3594 680.1597 571.3135 680.52 571.3135 681.0146 c
571.3135 682.5361 572.3486 683.3008 573.7617 683.3008 c
575.1025 683.3008 576.165 682.5088 576.165 681.0601 c
576.165 680.5737 576.1113 680.2227 576.0117 679.8896 C
575.0576 679.998 l
f
*U
*u
576.5518 673.0229 m
576.7227 673.4189 576.8223 673.8599 576.8223 674.3008 c
576.8223 674.7329 576.6328 675.291 575.9492 675.291 c
574.8604 675.291 575.3193 672.5371 573.2129 672.5371 c
571.8359 672.5371 571.3135 673.626 571.3135 674.895 c
571.3135 675.5791 571.4043 675.8853 571.5566 676.5059 c
572.6904 676.3892 L
572.457 675.957 572.3037 675.4619 572.3037 674.9668 c
572.3037 674.4902 572.5469 673.8511 573.1143 673.8511 c
574.3105 673.8511 573.8154 676.605 575.8945 676.605 c
577.2988 676.605 577.8115 675.5161 577.8115 674.4092 c
577.8115 673.8691 577.7402 673.3652 577.5869 672.9063 C
576.5518 673.0229 l
f
*U
*u
572.6729 669.5762 m
572.6729 669.5581 L
576.0566 668.4419 L
576.0566 667.2178 L
571.458 668.9551 L
570.4316 669.3418 569.4238 669.6211 569.4238 670.8809 c
569.4238 671.1689 569.4688 671.457 569.5498 671.7358 c
570.4404 671.6553 L
570.3867 671.502 570.3604 671.3311 570.3604 671.0342 c
570.3604 670.5479 570.6934 670.251 571.1875 670.251 c
576.0566 672.0239 L
576.0566 670.6919 L
572.6729 669.5762 l
f
*U
*u
575.085 663.7441 m
575.2109 664.1128 575.2832 664.3828 575.2832 664.8242 c
575.2832 665.1479 575.166 665.5352 574.7695 665.5352 c
574.0322 665.5352 574.5 663.438 572.8262 663.438 c
571.7461 663.438 571.3135 664.4009 571.3135 665.3818 c
571.3135 665.8408 571.3945 666.3091 571.5117 666.75 c
572.502 666.6782 L
572.3125 666.2998 572.1963 665.9038 572.1963 665.4902 c
572.1963 665.1841 572.3125 664.6982 572.7627 664.6982 c
573.6719 664.6982 573.0508 666.7949 574.7246 666.7949 c
575.7236 666.7949 576.165 665.9219 576.165 664.9771 c
576.165 664.4102 576.0752 664.041 575.9941 663.6631 C
575.085 663.7441 l
f
*U
*u
575.1748 662.106 m
575.1748 662.9971 L
576.0566 662.9971 L
576.0566 662.106 L
576.9844 662.106 L
577.3711 660.9004 L
576.0566 660.9004 L
576.0566 659.8291 L
575.1748 659.8291 L
575.1748 660.9004 L
573.0146 660.9004 L
572.6191 660.9004 572.25 660.792 572.25 660.333 c
572.25 660.1172 572.2949 659.9102 572.376 659.7842 c
571.4219 659.748 L
571.3496 660 571.3135 660.2793 571.3135 660.6392 c
571.3135 661.584 571.8984 662.106 572.8164 662.106 C
575.1748 662.106 l
f
*U
*u
574.1943 658.1465 m
574.8145 658.0923 575.2832 657.75 575.2832 657.0752 c
575.2832 656.4004 574.7793 656.1304 574.1943 656.0942 c
574.1943 658.1465 L
f
1 D
572.6641 655.2842 m
572.4121 655.7344 572.1963 656.2383 572.1963 656.8232 c
572.1963 657.5703 572.6191 658.0923 573.3662 658.1465 C
573.3662 654.9424 l
574.9863 654.9424 576.165 655.4282 576.165 657.1475 c
576.165 658.5874 575.0576 659.2983 573.7168 659.2983 c
572.1963 659.2983 571.3135 658.4072 571.3135 656.8774 c
571.3135 656.229 571.4395 655.7251 571.6826 655.2842 c
572.6641 655.2842 L
f
*U
*u
0 D
576.0566 654.0151 m
576.0566 652.8901 L
575.4092 652.8901 L
575.4092 652.8721 L
575.9756 652.4941 576.165 651.9453 576.165 651.4951 c
576.165 650.8472 575.9219 650.3882 575.3457 650.1274 c
575.9043 649.8481 576.165 649.2451 576.165 648.6782 c
576.165 647.5352 575.3818 647.2114 574.3467 647.2114 c
571.4219 647.2114 L
571.4219 648.417 L
574.1846 648.417 L
574.6172 648.417 575.2285 648.417 575.2285 649.1104 c
575.2285 649.9111 574.2754 650.0103 573.6719 650.0103 c
571.4219 650.0103 L
571.4219 651.2163 L
574.1846 651.2163 L
574.6172 651.2163 575.2285 651.2163 575.2285 651.9092 c
575.2285 652.7104 574.2754 652.8091 573.6719 652.8091 c
571.4219 652.8091 L
571.4219 654.0151 L
576.0566 654.0151 l
f
*U
u
u
0 R
0 0 0 0.6 K
0.3 w211.3394 347.4268 m
211.3394 116.1719 l
S
/ShapeBlendPathID (B) XT
/ShapeBlendPathType (K) XT
0.1 w217.1177 347.4268 m
217.1177 116.1719 L
S
222.8999 347.4268 m
222.8999 116.1719 L
S
228.6782 347.4268 m
228.6782 116.1719 L
S
234.458 347.4268 m
234.458 116.1719 L
S
240.2397 347.4268 m
240.2397 116.1719 L
S
246.0322 347.4268 m
246.0322 116.1719 L
S
251.8008 347.4268 m
251.8008 116.1719 L
S
257.5913 347.4268 m
257.5913 116.1719 L
S
263.3623 347.4268 m
263.3623 116.1719 L
S
0.3 w269.1528 347.4268 m
269.1528 116.1719 L
S
0.1 w274.9204 347.4268 m
274.9204 116.1719 L
S
280.71 347.4268 m
280.71 116.1719 L
S
286.4834 347.4268 m
286.4834 116.1719 L
S
292.2739 347.4268 m
292.2739 116.1719 L
S
298.0415 347.4268 m
298.0415 116.1719 L
S
303.8301 347.4268 m
303.8301 116.1719 L
S
309.6006 347.4268 m
309.6006 116.1719 L
S
315.3916 347.4268 m
315.3916 116.1719 L
S
321.1816 347.4268 m
321.1816 116.1719 L
S
0.3 w326.9482 347.4268 m
326.9482 116.1719 L
S
0.1 w332.7432 347.4268 m
332.7432 116.1719 L
S
338.5127 347.4268 m
338.5127 116.1719 L
S
344.3037 347.4268 m
344.3037 116.1719 L
S
350.0732 347.4268 m
350.0732 116.1719 L
S
355.8643 347.4268 m
355.8643 116.1719 L
S
361.6338 347.4268 m
361.6338 116.1719 L
S
367.4248 347.4268 m
367.4248 116.1719 L
S
373.1904 347.4268 m
373.1904 116.1719 L
S
378.9854 347.4268 m
378.9854 116.1719 L
S
0.3 w384.7529 347.4268 m
384.7529 116.1719 L
S
0.1 w390.5479 347.4268 m
390.5479 116.1719 L
S
396.3174 347.4268 m
396.3174 116.1719 L
S
402.1045 347.4268 m
402.1045 116.1719 L
S
407.8779 347.4268 m
407.8779 116.1719 L
S
413.665 347.4268 m
413.665 116.1719 L
S
419.4336 347.4268 m
419.4336 116.1719 L
S
425.2334 347.4268 m
425.2334 116.1719 L
S
431.0225 347.4268 m
431.0225 116.1719 L
S
436.7842 347.4268 m
436.7842 116.1719 L
S
0.3 w442.585 347.4268 m
442.585 116.1719 L
S
U
u
442.585 231.8008 m
211.3394 231.8008 L
S
0.1 w442.585 226.0098 m
211.3394 226.0098 L
S
442.585 220.2383 m
211.3394 220.2383 L
S
442.585 214.4473 m
211.3394 214.4473 L
S
442.585 208.6777 m
211.3394 208.6777 L
S
442.585 202.8867 m
211.3394 202.8867 L
S
442.585 197.1172 m
211.3394 197.1172 L
S
442.585 191.3252 m
211.3394 191.3252 L
S
442.585 185.5566 m
211.3394 185.5566 L
S
442.585 179.7627 m
211.3394 179.7627 L
S
0.3 w442.585 173.9971 m
211.3394 173.9971 L
S
0.1 w442.585 168.207 m
211.3394 168.207 L
S
442.585 162.4385 m
211.3394 162.4385 L
S
442.585 156.6445 m
211.3394 156.6445 L
S
442.585 150.874 m
211.3394 150.874 L
S
442.585 145.084 m
211.3394 145.084 L
S
442.585 139.3164 m
211.3394 139.3164 L
S
442.585 133.5215 m
211.3394 133.5215 L
S
442.585 127.7559 m
211.3394 127.7559 L
S
442.585 121.9609 m
211.3394 121.9609 L
S
0.3 w442.585 116.1719 m
211.3394 116.1719 l
S
/ShapeBlendPathID (A) XT
/ShapeBlendPathType (K) XT
U
u
442.585 289.6006 m
211.3394 289.6006 L
S
0.1 w442.585 283.832 m
211.3394 283.832 L
S
442.585 278.041 m
211.3394 278.041 L
S
442.585 272.2725 m
211.3394 272.2725 L
S
442.585 266.4785 m
211.3394 266.4785 L
S
442.585 260.7109 m
211.3394 260.7109 L
S
442.585 254.9219 m
211.3394 254.9219 L
S
442.585 249.1484 m
211.3394 249.1484 L
S
442.585 243.3633 m
211.3394 243.3633 L
S
442.585 237.5898 m
211.3394 237.5898 L
S
U
u
0.3 w442.585 347.4268 m
211.3394 347.4268 L
S
0.1 w442.585 341.6338 m
211.3394 341.6338 L
S
442.585 335.8525 m
211.3394 335.8525 L
S
442.585 330.0732 m
211.3394 330.0732 L
S
442.585 324.2822 m
211.3394 324.2822 L
S
442.585 318.5117 m
211.3394 318.5117 L
S
442.585 312.7217 m
211.3394 312.7217 L
S
442.585 306.9512 m
211.3394 306.9512 L
S
442.585 301.1621 m
211.3394 301.1621 L
S
442.585 295.3926 m
211.3394 295.3926 L
S
U
*u
0 O
0 0 0 0.6 k
1 w211.3394 108.2197 m
212.2095 108.2197 212.2993 107.1396 212.2993 106.4434 c
212.2993 105.748 212.2095 104.668 211.3394 104.668 c
210.4692 104.668 210.3794 105.748 210.3794 106.4434 c
210.3794 107.1396 210.4692 108.2197 211.3394 108.2197 c
f
1 D
211.3394 108.5801 m
210.2231 108.5801 209.9653 107.4219 209.9653 106.4434 c
209.9653 105.5674 210.1455 104.3076 211.3394 104.3076 c
212.5332 104.3076 212.7134 105.5674 212.7134 106.4434 c
212.7134 107.4219 212.4556 108.5801 211.3394 108.5801 c
f
*U
*u
0 D
267.5029 108.5381 m
267.875 108.5381 L
267.875 104.3496 L
267.4609 104.3496 L
267.4609 108.0693 L
266.7827 107.4756 L
266.5547 107.7461 L
267.5029 108.5381 l
f
*U
*u
270.8208 108.2197 m
271.6909 108.2197 271.7808 107.1396 271.7808 106.4434 c
271.7808 105.748 271.6909 104.668 270.8208 104.668 c
269.9507 104.668 269.8608 105.748 269.8608 106.4434 c
269.8608 107.1396 269.9507 108.2197 270.8208 108.2197 c
f
1 D
270.8208 108.5801 m
269.7051 108.5801 269.4468 107.4219 269.4468 106.4434 c
269.4468 105.5674 269.627 104.3076 270.8208 104.3076 c
272.0146 104.3076 272.1948 105.5674 272.1948 106.4434 c
272.1948 107.4219 271.937 108.5801 270.8208 108.5801 c
f
*U
*u
0 D
199.8564 174.4141 m
200.0845 174.1436 L
200.7627 174.7373 L
200.7627 171.0176 L
201.1768 171.0176 L
201.1768 175.2061 L
200.8047 175.2061 l
199.8564 174.4141 L
f
*U
*u
204.1226 174.8877 m
204.9927 174.8877 205.0825 173.8076 205.0825 173.1113 c
205.0825 172.416 204.9927 171.3359 204.1226 171.3359 c
203.2524 171.3359 203.1626 172.416 203.1626 173.1113 c
203.1626 173.8076 203.2524 174.8877 204.1226 174.8877 c
f
1 D
204.1226 175.248 m
203.0068 175.248 202.7485 174.0898 202.7485 173.1113 c
202.7485 172.2354 202.9287 170.9756 204.1226 170.9756 c
205.3164 170.9756 205.4966 172.2354 205.4966 173.1113 c
205.4966 174.0898 205.2388 175.248 204.1226 175.248 c
f
*U
*u
0 D
199.4185 229.0889 m
201.9326 229.0889 L
201.9326 229.4492 L
199.9287 229.4492 L
200.6846 230.2773 l
201.2246 230.8711 201.8364 231.5967 201.8364 232.2207 c
201.8364 232.9766 201.3027 233.3193 200.6245 233.3193 c
200.2827 233.3193 199.8745 233.1865 199.5684 233.0371 C
199.6406 232.6592 l
199.9707 232.8506 200.2705 232.959 200.6484 232.959 c
201.0625 232.959 201.3867 232.6465 201.3867 232.2031 c
201.3867 231.6934 200.8828 231.0693 200.3784 230.5107 C
199.4185 229.4492 l
199.4185 229.0889 L
f
*U
*u
203.1626 231.1826 m
203.1626 230.4873 203.2524 229.4072 204.1226 229.4072 c
204.9927 229.4072 205.0825 230.4873 205.0825 231.1826 c
205.0825 231.8789 204.9927 232.959 204.1226 232.959 c
203.2524 232.959 203.1626 231.8789 203.1626 231.1826 c
f
205.4966 231.1826 m
205.4966 230.3066 205.3164 229.0469 204.1226 229.0469 c
202.9287 229.0469 202.7485 230.3066 202.7485 231.1826 c
202.7485 232.1611 203.0068 233.3193 204.1226 233.3193 c
205.2388 233.3193 205.4966 232.1611 205.4966 231.1826 c
f
*U
*u
200.0186 289.0576 m
200.1265 289.0576 L
200.6968 289.0576 201.5488 289.1182 201.5488 289.8984 c
201.5488 290.3662 201.0386 290.5762 200.5884 290.5762 c
200.2588 290.5762 199.9468 290.4922 199.6523 290.3545 c
199.6167 290.7441 L
199.9224 290.8584 200.2827 290.9365 200.6304 290.9365 c
201.3208 290.9365 201.9624 290.6426 201.9624 289.8984 c
201.9624 289.3877 201.6025 289.0225 201.0928 288.8965 c
201.0928 288.8838 L
201.6504 288.8604 201.9624 288.4277 201.9624 287.8701 c
201.9624 287.1084 201.2905 286.6641 200.4507 286.6641 c
200.0908 286.6641 199.7544 286.7061 199.4185 286.832 c
199.4668 287.2285 L
199.8086 287.0664 200.1748 287.0244 200.4746 287.0244 c
200.9785 287.0244 201.5488 287.2705 201.5488 287.9063 c
201.5488 288.626 200.8525 288.6982 200.4023 288.6982 c
200.0186 288.6982 L
200.0186 289.0576 l
f
*U
*u
204.1226 290.5762 m
204.9927 290.5762 205.0825 289.4961 205.0825 288.7998 c
205.0825 288.1045 204.9927 287.0244 204.1226 287.0244 c
203.2524 287.0244 203.1626 288.1045 203.1626 288.7998 c
203.1626 289.4961 203.2524 290.5762 204.1226 290.5762 c
f
1 D
204.1226 290.9365 m
203.0068 290.9365 202.7485 289.7783 202.7485 288.7998 c
202.7485 287.9238 202.9287 286.6641 204.1226 286.6641 c
205.3164 286.6641 205.4966 287.9238 205.4966 288.7998 c
205.4966 289.7783 205.2388 290.9365 204.1226 290.9365 c
f
*U
*u
0 D
201.2544 348.4473 m
201.2427 348.4473 L
199.6348 345.999 L
201.2544 345.999 L
201.2544 348.4473 l
f
199.2568 346.0469 m
201.1406 348.8613 L
201.6685 348.8613 L
201.6685 345.999 L
202.2866 345.999 L
202.2866 345.6387 L
201.6685 345.6387 L
201.6685 344.6729 L
201.2544 344.6729 L
201.2544 345.6387 L
199.2568 345.6387 L
199.2568 346.0469 l
f
*U
*u
204.1226 348.543 m
204.9927 348.543 205.0825 347.4629 205.0825 346.7666 c
205.0825 346.0713 204.9927 344.9912 204.1226 344.9912 c
203.2524 344.9912 203.1626 346.0713 203.1626 346.7666 c
203.1626 347.4629 203.2524 348.543 204.1226 348.543 c
f
1 D
204.1226 348.9033 m
203.0068 348.9033 202.7485 347.7451 202.7485 346.7666 c
202.7485 345.8906 202.9287 344.6309 204.1226 344.6309 c
205.3164 344.6309 205.4966 345.8906 205.4966 346.7666 c
205.4966 347.7451 205.2388 348.9033 204.1226 348.9033 c
f
*U
*u
0 D
323.9121 104.71 m
324.8721 105.7715 L
325.376 106.3301 325.8799 106.9541 325.8799 107.4639 c
325.8799 107.9072 325.5566 108.2197 325.1426 108.2197 c
324.7646 108.2197 324.4639 108.1113 324.1338 107.9199 c
324.0625 108.2979 L
324.3682 108.4473 324.7764 108.5801 325.1182 108.5801 c
325.7959 108.5801 326.3301 108.2373 326.3301 107.4814 c
326.3301 106.8574 325.7178 106.1318 325.1787 105.5381 c
324.4219 104.71 L
326.4258 104.71 L
326.4258 104.3496 L
323.9121 104.3496 L
323.9121 104.71 l
f
*U
*u
328.6162 108.2197 m
329.4863 108.2197 329.5762 107.1396 329.5762 106.4434 c
329.5762 105.748 329.4863 104.668 328.6162 104.668 c
327.7461 104.668 327.6563 105.748 327.6563 106.4434 c
327.6563 107.1396 327.7461 108.2197 328.6162 108.2197 c
f
1 D
328.6162 108.5801 m
327.5 108.5801 327.2422 107.4219 327.2422 106.4434 c
327.2422 105.5674 327.4219 104.3076 328.6162 104.3076 c
329.8105 104.3076 329.9902 105.5674 329.9902 106.4434 c
329.9902 107.4219 329.7324 108.5801 328.6162 108.5801 c
f
*U
*u
0 D
382.3174 106.7012 m
382.4248 106.7012 L
382.9951 106.7012 383.8467 106.7617 383.8467 107.542 c
383.8467 108.0098 383.3369 108.2197 382.8867 108.2197 c
382.5566 108.2197 382.2451 108.1357 381.9512 107.998 c
381.915 108.3877 L
382.2207 108.502 382.5811 108.5801 382.9287 108.5801 c
383.6191 108.5801 384.2607 108.2852 384.2607 107.542 c
384.2607 107.0313 383.9014 106.666 383.3906 106.54 c
383.3906 106.5273 L
383.9492 106.5039 384.2607 106.0713 384.2607 105.5137 c
384.2607 104.752 383.5889 104.3076 382.749 104.3076 c
382.3887 104.3076 382.0527 104.3496 381.7168 104.4756 c
381.7646 104.8721 L
382.1074 104.71 382.4727 104.668 382.7725 104.668 c
383.2773 104.668 383.8467 104.9141 383.8467 105.5498 c
383.8467 106.2695 383.1514 106.3418 382.7012 106.3418 c
382.3174 106.3418 L
382.3174 106.7012 l
f
*U
*u
386.4209 108.2197 m
387.291 108.2197 387.3809 107.1396 387.3809 106.4434 c
387.3809 105.748 387.291 104.668 386.4209 104.668 c
385.5508 104.668 385.4609 105.748 385.4609 106.4434 c
385.4609 107.1396 385.5508 108.2197 386.4209 108.2197 c
f
1 D
386.4209 108.5801 m
385.3047 108.5801 385.0469 107.4219 385.0469 106.4434 c
385.0469 105.5674 385.2266 104.3076 386.4209 104.3076 c
387.6152 104.3076 387.7949 105.5674 387.7949 106.4434 c
387.7949 107.4219 387.5371 108.5801 386.4209 108.5801 c
f
*U
*u
0 D
441.3848 108.124 m
441.373 108.124 L
439.7646 105.6758 L
441.3848 105.6758 L
441.3848 108.124 l
f
439.3867 105.7236 m
441.2705 108.5381 L
441.7988 108.5381 L
441.7988 105.6758 L
442.417 105.6758 L
442.417 105.3154 L
441.7988 105.3154 L
441.7988 104.3496 L
441.3848 104.3496 L
441.3848 105.3154 L
439.3867 105.3154 L
439.3867 105.7236 l
f
*U
*u
444.2529 108.2197 m
445.123 108.2197 445.2129 107.1396 445.2129 106.4434 c
445.2129 105.748 445.123 104.668 444.2529 104.668 c
443.3828 104.668 443.293 105.748 443.293 106.4434 c
443.293 107.1396 443.3828 108.2197 444.2529 108.2197 c
f
1 D
444.2529 108.5801 m
443.1367 108.5801 442.8789 107.4219 442.8789 106.4434 c
442.8789 105.5674 443.0586 104.3076 444.2529 104.3076 c
445.4473 104.3076 445.627 105.5674 445.627 106.4434 c
445.627 107.4219 445.3691 108.5801 444.2529 108.5801 c
f
*U
U
*u
0 D
210.9541 371.3574 m
213.6909 371.3574 L
213.6909 370.7422 L
211.6538 370.7422 L
211.6538 369.3135 L
213.5088 369.3135 L
213.5088 368.6973 L
211.6538 368.6973 L
211.6538 367.0879 L
213.6909 367.0879 L
213.6909 366.4717 L
210.9541 366.4717 L
210.9541 371.3574 l
f
*U
*u
214.7407 370.041 m
215.3569 370.041 L
215.3569 369.5234 L
215.3711 369.5234 L
215.623 369.9365 215.98 370.125 216.5049 370.125 c
216.918 370.125 217.3311 369.916 217.52 369.4326 c
217.7646 369.9434 218.3037 370.125 218.626 370.125 c
219.5356 370.125 219.8647 369.5371 219.8647 368.7607 c
219.8647 366.4717 L
219.207 366.4717 L
219.207 368.5996 L
219.207 369.041 219.1021 369.5938 218.5698 369.5938 c
217.8979 369.5938 217.6318 368.9355 217.6318 368.2705 c
217.6318 366.4717 L
216.9736 366.4717 L
216.9736 368.5996 L
216.9736 369.041 216.8687 369.5938 216.3369 369.5938 c
215.665 369.5938 215.3989 368.9355 215.3989 368.2705 c
215.3989 366.4717 L
214.7407 366.4717 L
214.7407 370.041 l
f
*U
*u
223.666 368.2705 m
223.6797 367.7109 223.3857 366.9199 222.6787 366.9199 c
221.937 366.9199 221.6289 367.6543 221.6289 368.25 c
221.6289 368.9141 221.9717 369.5938 222.686 369.5938 c
223.3999 369.5938 223.6797 368.9141 223.666 368.2705 c
f
1 D
220.9707 366.4717 m
221.6006 366.4717 L
221.6006 366.9756 L
221.6147 366.9756 l
221.79 366.709 222.1958 366.3877 222.833 366.3877 c
223.9106 366.3877 224.3657 367.3398 224.3657 368.3203 c
224.3657 369.2793 223.8618 370.125 222.8257 370.125 c
222.2026 370.125 221.8457 369.8809 221.6431 369.5518 C
221.6289 369.5518 L
221.6289 371.7217 L
220.9707 371.7217 l
220.9707 366.4717 L
f
*U
*u
0 D
225.332 371.7217 m
225.9897 371.7217 L
225.9897 366.4717 L
225.332 366.4717 L
225.332 371.7217 l
f
*U
*u
227.6558 368.5996 m
227.7046 369.0615 227.9707 369.5938 228.6147 369.5938 c
229.1816 369.5938 229.5039 369.1455 229.5039 368.5996 c
227.6558 368.5996 L
f
1 D
229.9307 367.2773 m
229.7695 367.1436 229.2656 366.9199 228.8315 366.9199 c
228.209 366.9199 227.6558 367.4023 227.6558 368.1094 C
230.2036 368.1094 l
230.2036 369.2578 229.8188 370.125 228.6289 370.125 c
227.6206 370.125 226.9556 369.377 226.9556 368.3203 c
226.9556 367.1582 227.5366 366.3877 228.8037 366.3877 c
229.3916 366.3877 229.6787 366.5273 229.9307 366.6191 c
229.9307 367.2773 L
f
*U
*u
0 D
231.0786 370.041 m
231.6948 370.041 L
231.6948 369.5234 L
231.709 369.5234 L
231.9609 369.9365 232.3179 370.125 232.8428 370.125 c
233.2559 370.125 233.6689 369.916 233.8579 369.4326 c
234.1025 369.9434 234.6416 370.125 234.9639 370.125 c
235.8735 370.125 236.2026 369.5371 236.2026 368.7607 c
236.2026 366.4717 L
235.5449 366.4717 L
235.5449 368.5996 L
235.5449 369.041 235.4399 369.5938 234.9077 369.5938 c
234.2358 369.5938 233.9697 368.9355 233.9697 368.2705 c
233.9697 366.4717 L
233.3115 366.4717 L
233.3115 368.5996 L
233.3115 369.041 233.2065 369.5938 232.6748 369.5938 c
232.0029 369.5938 231.7368 368.9355 231.7368 368.2705 c
231.7368 366.4717 L
231.0786 366.4717 L
231.0786 370.041 l
f
*U
*u
243.0278 370.4902 m
242.6846 370.7139 242.3135 370.8262 241.6836 370.8262 c
240.5566 370.8262 239.8076 370.0068 239.8076 368.9141 c
239.8076 367.7666 240.6338 367.0039 241.6489 367.0039 c
242.1318 367.0039 242.2578 367.0527 242.4326 367.0879 c
242.4326 368.5723 L
241.4038 368.5723 L
241.4038 369.1455 L
243.1328 369.1455 L
243.1328 366.6045 L
242.8667 366.5137 242.4048 366.3877 241.6416 366.3877 c
240.0947 366.3877 239.0659 367.3818 239.0659 368.9355 c
239.0659 370.4404 240.1577 371.4414 241.6489 371.4414 c
242.3628 371.4414 242.6777 371.3369 243.0835 371.1973 C
243.0278 370.4902 l
f
*U
*u
244.3086 370.041 m
244.9248 370.041 L
244.9248 369.4883 L
244.9385 369.4883 L
245.1138 369.8594 245.4917 370.125 245.8696 370.125 c
246.0654 370.125 246.1636 370.1045 246.3037 370.0762 c
246.3037 369.4883 L
246.1846 369.5371 246.0518 369.5518 245.9395 369.5518 c
245.3516 369.5518 244.9668 368.9922 244.9668 368.0957 c
244.9668 366.4717 L
244.3086 366.4717 L
244.3086 370.041 l
f
*U
*u
247.1157 370.041 m
247.7734 370.041 L
247.7734 366.4717 L
247.1157 366.4717 L
247.1157 370.041 l
f
247.8154 370.8398 m
247.0737 370.8398 L
247.0737 371.582 L
247.8154 371.582 L
247.8154 370.8398 l
f
*U
*u
249.4395 368.2705 m
249.4258 368.9219 249.7056 369.5938 250.4194 369.5938 c
251.1338 369.5938 251.4766 368.9141 251.4766 368.25 c
251.4766 367.6543 251.1685 366.9199 250.4268 366.9199 c
249.7197 366.9199 249.4258 367.7109 249.4395 368.2705 c
f
1 D
251.5044 366.4717 m
252.1348 366.4717 L
252.1348 371.7217 L
251.4766 371.7217 L
251.4766 369.5518 L
251.4624 369.5518 l
251.2598 369.8809 250.9023 370.125 250.2798 370.125 c
249.2437 370.125 248.7397 369.2793 248.7397 368.3203 c
248.7397 367.3467 249.1943 366.3877 250.2725 366.3877 c
250.9097 366.3877 251.3154 366.709 251.4907 366.9756 C
251.5044 366.9756 l
251.5044 366.4717 L
f
*U
u
u
u
*u
0 D
253.3354 258.2598 m
253.9399 259.5732 L
259.3208 257.1006 L
255.7407 263.4912 L
256.5459 265.2402 L
260.3467 258.2676 L
268.9365 259.9551 L
268.0542 258.0361 L
260.1797 256.7051 L
266.1743 253.9482 L
265.5684 252.6338 L
253.3354 258.2598 l
f
*U
U
U
u
u
*u
262.7412 275.3721 m
264.5571 277.8447 268.0137 277.5332 271.2334 275.1699 c
274.5288 272.749 275.7925 269.6143 273.9688 267.1289 c
272.1445 264.6455 268.7754 264.9121 265.4775 267.333 c
262.2598 269.6963 260.9263 272.9004 262.7412 275.3721 c
f
1 D
272.6001 268.1338 m
273.979 270.0127 272.4858 272.3477 270.3247 273.9346 c
268.1172 275.5557 265.4126 276.1748 264.1108 274.3682 c
262.7759 272.584 264.1782 270.1904 266.3867 268.5693 c
268.5469 266.9814 271.2217 266.2568 272.6001 268.1338 c
f
*U
U
U
u
u
*u
0 D
270.9302 284.6299 m
272.7529 286.3027 L
274.2236 287.6533 275.9297 288.6406 278.1064 286.2666 c
279.2153 285.0576 279.3262 283.5898 278.645 282.5967 c
278.6714 282.5684 L
279.1582 282.7021 279.5137 282.6348 280.3086 282.2383 c
285.3418 279.5791 L
284.1265 278.4639 L
279.8296 280.8564 L
278.6118 281.5205 278.2593 281.1992 277.6953 280.6797 c
277.0557 280.0928 L
281.0986 275.6855 L
280.0332 274.708 L
270.9302 284.6299 l
f
1 D
275.9092 281.3428 m
276.8149 282.1738 L
277.8271 283.1035 277.8765 284.248 277.0024 285.2021 c
276.1807 286.0967 275.1479 286.1963 274.1665 285.2959 c
273.144 284.3574 L
275.9092 281.3428 l
f
*U
U
U
u
u
*u
0 D
281.8521 293.6846 m
286.6113 296.7402 L
287.5283 295.3125 L
283.9863 293.0371 L
286.1133 289.7266 L
289.3389 291.7988 L
290.2568 290.3701 L
287.0313 288.2988 L
289.4282 284.5654 L
292.9702 286.8418 L
293.8892 285.4121 L
289.1284 282.3555 L
281.8521 293.6846 l
f
*U
U
U
u
u
*u
296.3804 301.5752 m
297.7866 302.1475 L
306.8105 291.2783 L
305.3486 290.6855 L
303.1201 293.4443 L
298.5356 291.582 L
298.8628 288.0479 L
297.4546 287.4766 L
296.3804 301.5752 l
f
1 D
297.7188 300.1611 m
298.3687 293.2217 L
302.0947 294.7354 L
297.7188 300.1611 l
f
*U
U
U
u
u
*u
0 D
316.7793 307.124 m
318.7412 307.2754 L
324.0273 296.8154 L
324.0557 296.8164 L
323.2119 307.625 L
324.6533 307.7383 L
325.7021 294.3145 L
323.8564 294.1699 L
318.4385 304.8525 L
318.4092 304.8506 L
319.2705 293.8115 L
317.8271 293.6992 L
316.7793 307.124 l
f
*U
U
U
u
u
*u
335.9961 307.1699 m
337.5029 306.9844 L
340.0938 293.0977 L
338.5313 293.292 L
337.9248 296.7871 L
333.0127 297.3916 L
331.5791 294.1455 L
330.0723 294.332 L
335.9961 307.1699 l
f
1 D
336.4775 305.2832 m
333.666 298.9043 L
337.6582 298.4141 L
336.4775 305.2832 l
f
*U
U
U
u
u
*u
0 D
348.5859 302.9258 m
345.5781 303.8271 L
346.0664 305.4541 L
353.4668 303.2344 L
352.9805 301.6084 L
349.9717 302.5107 L
346.5928 291.2383 L
345.208 291.6543 L
348.5859 302.9258 l
f
*U
U
U
u
u
*u
359.1758 300.8613 m
360.4932 300.2607 L
354.9082 288.0088 L
353.5938 288.6074 L
359.1758 300.8613 l
f
*U
U
U
u
u
*u
371.0332 294.5957 m
373.5889 292.8965 373.4355 289.4307 371.2217 286.1064 c
368.957 282.7012 365.8809 281.2949 363.3154 283.0039 c
360.749 284.71 360.8633 288.0889 363.1289 291.4922 c
365.3418 294.8184 368.4795 296.2969 371.0332 294.5957 c
f
1 D
364.2578 284.415 m
366.1973 283.124 368.459 284.7236 369.9453 286.9561 c
371.4619 289.2363 371.96 291.9648 370.0928 293.1846 c
368.25 294.4346 365.9219 292.9238 364.4043 290.6436 c
362.918 288.4111 362.3184 285.7061 364.2578 284.415 c
f
*U
U
U
u
u
*u
0 D
380.8662 286.6973 m
382.2441 285.293 L
377.627 274.5186 L
377.6475 274.498 L
385.3828 282.0918 L
386.3994 281.0586 L
376.7891 271.627 L
375.4912 272.9482 L
380.1904 283.9688 L
380.1719 283.9883 L
372.2676 276.2314 L
371.2559 277.2656 L
380.8662 286.6973 l
f
*U
U
U
u
u
*u
393.249 271.9854 m
394.0742 270.7109 L
385.0889 259.8115 L
384.2314 261.1367 L
386.5254 263.8428 L
383.8359 267.9971 L
380.4287 267.0146 L
379.6016 268.29 L
393.249 271.9854 l
f
1 D
392.1123 270.4043 m
385.4141 268.4678 L
387.5996 265.0908 L
392.1123 270.4043 l
f
*U
U
U
u
u
*u
0 D
399.3281 261.0469 m
399.8848 259.7129 L
389.0264 255.1748 L
390.6543 251.2773 L
389.0889 250.623 L
386.9033 255.8555 L
399.3281 261.0469 l
f
*U
U
U
u
u
*u
262.6816 202.9121 m
259.1016 201.6943 256.7222 202.3994 255.9224 204.7559 c
255.1206 207.1113 256.5767 209.1211 260.1572 210.3379 c
267.6279 212.877 L
268.0928 211.5078 L
260.8604 209.0488 L
258.4126 208.2168 256.9287 207.0703 257.5293 205.3018 c
258.1299 203.5361 260.0063 203.5313 262.4541 204.3623 c
269.6865 206.8223 L
270.1509 205.4521 L
262.6816 202.9121 l
f
*U
U
U
u
u
*u
271.4971 202.4297 m
272.459 200.7139 L
265.1826 191.5264 L
265.1968 191.501 L
274.6528 196.8018 L
275.3599 195.541 L
263.6167 188.9541 L
262.7104 190.5703 L
270.1323 199.9736 L
270.1172 200 L
260.4604 194.584 L
259.752 195.8438 L
271.4971 202.4297 l
f
*U
U
U
u
u
*u
277.6772 192.4219 m
278.5532 191.2695 L
267.8374 183.1172 L
266.9614 184.2695 L
277.6772 192.4219 l
f
*U
U
U
u
u
*u
274.5986 175.5264 m
273.3213 176.8076 L
280.1714 189.0098 L
281.3149 187.8594 L
275.1777 177.3506 L
275.1968 177.3311 L
285.7881 183.373 L
286.8618 182.2959 L
274.5986 175.5264 l
f
*U
U
U
u
u
*u
288.8564 180.8066 m
293.437 177.4883 L
292.4419 176.1133 L
289.0322 178.5869 L
286.7227 175.3994 L
289.8271 173.1494 L
288.8306 171.7744 L
285.7261 174.0244 L
283.1235 170.4307 L
286.5313 167.96 L
285.5361 166.5869 L
280.9546 169.9053 L
288.8564 180.8066 l
f
*U
U
U
u
u
*u
296.2686 175.7324 m
298.4722 174.6104 L
300.251 173.7002 301.7725 172.4473 300.3076 169.5781 c
299.5615 168.1182 298.2231 167.5029 297.0581 167.7949 c
297.04 167.7588 L
297.334 167.3496 297.3945 166.9932 297.3018 166.1104 c
296.5649 160.4658 L
295.0957 161.2139 L
295.8389 166.0762 L
296.0356 167.4482 295.6108 167.666 294.9277 168.0156 c
294.1548 168.4092 L
291.436 163.082 L
290.1479 163.7412 L
296.2686 175.7324 l
f
1 D
294.9277 169.9209 m
296.0229 169.3613 L
297.2471 168.7373 298.3379 169.0938 298.9238 170.2412 c
299.4766 171.3242 299.209 172.3291 298.0239 172.9316 c
296.7866 173.5635 L
294.9277 169.9209 l
f
*U
U
U
u
u
*u
0 D
309.1104 168.0898 m
308.5332 168.6875 308.2012 168.9814 307.4883 169.2188 c
306.7197 169.4727 305.6924 169.4072 305.2471 168.0723 c
304.4316 165.6201 308.7393 164.8174 307.3389 160.6084 c
306.4307 157.8799 304.4932 157.3262 302.5703 157.9648 c
301.8984 158.1865 301.3262 158.6641 300.7842 159.1484 c
301.4883 160.8047 L
301.8691 160.3936 302.5723 159.7539 303.2715 159.5215 c
304.0537 159.2588 305.3486 159.4795 305.8467 160.9814 c
306.7949 163.8369 302.415 164.4199 303.7383 168.3936 c
304.4902 170.6611 306.2393 171.4229 307.9678 170.8477 c
308.6006 170.6387 309.3066 170.2393 309.8633 169.708 C
309.1104 168.0898 l
f
*U
U
U
u
u
*u
313.8584 169.0049 m
315.2773 168.7139 L
312.5693 155.5234 L
311.1533 155.8135 L
313.8584 169.0049 l
f
*U
U
U
u
u
*u
321.1865 166.167 m
318.0576 166.4131 L
318.1934 168.1055 L
325.8936 167.498 L
325.7588 165.8066 L
322.6289 166.0537 L
321.7051 154.3213 L
320.2627 154.4355 L
321.1865 166.167 l
f
*U
U
U
u
u
*u
331.8311 159.9482 m
327.2666 167.4375 L
328.9512 167.5732 L
332.4355 161.7969 L
334.8799 168.0488 L
336.5684 168.1875 L
333.2725 160.0615 L
333.7227 154.4492 L
332.2803 154.332 L
331.8311 159.9482 l
f
*U
U
U
u
u
*u
348.457 171.7334 m
351.3281 172.8125 354.0508 170.6641 355.457 166.9258 c
356.8975 163.0957 356.2422 159.7793 353.3574 158.6943 c
350.4717 157.6094 347.7949 159.6768 346.3574 163.5039 c
344.9512 167.2402 345.5859 170.6543 348.457 171.7334 c
f
1 D
352.7598 160.2852 m
354.9395 161.1045 354.9648 163.875 354.0205 166.3838 c
353.0576 168.9492 351.1318 170.9463 349.0527 170.1426 c
346.96 169.377 346.8281 166.6074 347.791 164.0439 c
348.7344 161.5322 350.5801 159.4639 352.7598 160.2852 c
f
*U
U
U
u
u
*u
0 D
355.6279 174.6592 m
360.2705 177.3584 L
361.1221 175.8906 L
357.7334 173.918 L
359.7109 170.5156 L
362.9492 172.4014 L
363.8047 170.9336 L
360.5625 169.0508 L
363.6455 163.7461 L
362.3955 163.0186 L
355.6279 174.6592 l
f
*U
U
U
u
u
*u
369.6719 184.9365 m
370.7451 186.0098 L
383.2715 179.4775 L
382.1523 178.3633 L
379.0303 180.0439 L
375.5225 176.5547 L
377.1895 173.4238 L
376.1123 172.3516 L
369.6719 184.9365 l
f
1 D
371.4521 184.1523 m
374.7344 178.002 L
377.5859 180.8379 L
371.4521 184.1523 l
f
*U
U
U
u
u
*u
0 D
375.1299 190.8643 m
376.5605 192.8799 L
377.7158 194.5088 379.1758 195.832 381.8027 193.9678 c
383.1396 193.0195 383.5557 191.6064 383.0986 190.4932 c
383.1289 190.4717 L
383.5791 190.7031 383.9395 190.7129 384.8018 190.4932 c
390.2803 188.9463 L
389.3242 187.6016 L
384.623 189.041 L
383.292 189.4346 383.0156 189.043 382.5723 188.4199 c
382.0693 187.71 L
386.9473 184.251 L
386.1084 183.0703 L
375.1299 190.8643 l
f
1 D
380.6846 188.6934 m
381.3965 189.6953 L
382.1914 190.8164 382 191.9443 380.9463 192.6943 c
379.9551 193.3984 378.9238 193.2783 378.1523 192.1914 c
377.3496 191.0605 L
380.6846 188.6934 l
f
*U
U
U
u
u
*u
0 D
382.9805 200.0566 m
381.5732 197.2529 L
380.0557 198.0146 L
383.5225 204.9189 L
385.0391 204.1572 L
383.6309 201.3506 L
394.1445 196.0693 L
393.498 194.7783 L
382.9805 200.0566 l
f
*U
U
U
u
u
*u
387.8096 211.1523 m
387.2119 210.5752 386.9189 210.2432 386.6826 209.5293 c
386.4277 208.7607 386.4941 207.7334 387.8301 207.29 c
390.2852 206.4775 391.083 210.7852 395.2949 209.3906 c
398.0205 208.4863 398.5801 206.5488 397.9424 204.626 c
397.7207 203.9531 397.2441 203.3809 396.7598 202.8398 c
395.1035 203.541 L
395.5146 203.9229 396.1543 204.626 396.3848 205.3252 c
396.6426 206.1104 396.4229 207.4023 394.9219 207.8975 c
392.0635 208.8457 391.4863 204.4639 387.5117 205.7803 c
385.2402 206.5313 384.4795 208.2803 385.0518 210.0088 c
385.2617 210.6416 385.6582 211.3457 386.1885 211.9043 C
387.8096 211.1523 l
f
*U
U
U
276.3076 241.9941 m
276.1958 241.9941 L
260.2583 241.9941 L
260.2583 239.7119 l
273.4961 239.7119 273.7197 239.7119 v
273.7197 239.502 273.7197 234.3223 273.7197 234.1113 c
273.4961 234.1113 257.7417 234.1113 Y
257.7417 231.8281 l
266.9097 231.8281 267.1294 231.8281 v
267.1294 231.6211 267.1294 228.2539 267.1294 228.0469 c
266.9097 228.0469 260.3101 228.0469 Y
260.3101 225.7646 l
273.4961 225.7646 273.7197 225.7646 v
273.7197 225.5479 273.7197 219.2744 Y
276.2036 219.2744 L
276.2036 228.0469 l
269.8335 228.0469 269.6177 228.0469 v
269.6177 228.2539 269.6177 231.6211 269.6177 231.8281 c
269.835 231.8281 279.0024 231.8281 Y
279.0024 234.1113 l
276.5146 234.1113 276.3076 234.1113 v
276.3076 234.3291 276.3076 241.9941 Y
f
297.8896 242.417 m
297.8896 219.335 L
300.374 219.335 L
300.374 242.417 L
300.2637 242.417 L
297.8896 242.417 L
f
*u
1 D
293.8579 242.4131 m
293.8579 238.5205 293.8579 238.3057 v
293.6567 238.3057 291.0908 238.3057 290.9507 238.3057 c
290.0864 240.8652 288.3853 242.3955 286.3818 242.3955 c
283.3936 242.3955 281.2241 239.0596 281.2241 234.4619 c
281.2241 229.8643 283.3936 226.5264 286.3818 226.5264 c
288.3193 226.5264 289.936 227.9033 290.8374 230.2988 c
290.9741 230.2988 293.6567 230.2988 293.8579 230.2988 c
293.8579 230.0791 293.8579 219.335 Y
296.3442 219.335 L
296.3442 242.4131 L
296.2271 242.4131 L
293.8579 242.4131 L
f
0 D
291.4424 236.0508 m
291.6514 236.0508 293.6616 236.0508 293.8579 236.0508 c
293.8579 235.8467 293.8579 232.7813 293.8579 232.5771 c
293.6616 232.5771 291.6265 232.5771 291.4063 232.5771 c
291.4917 233.1904 291.5444 233.8223 291.5444 234.4619 c
291.5444 234.9971 291.5078 235.5283 291.4424 236.0508 C
f
286.3818 228.8389 m
284.7788 228.8389 283.6177 231.2041 283.6177 234.4619 c
283.6177 237.7197 284.7788 240.085 286.3818 240.085 c
287.9863 240.085 289.1543 237.7197 289.1543 234.4619 c
289.1543 231.2041 287.9863 228.8389 286.3818 228.8389 C
f
*U
303.2031 232.9053 m
303.2031 230.625 l
312.5088 230.625 312.7305 230.625 v
312.7305 230.4277 312.7305 228.792 312.7305 228.6006 c
312.5107 228.6006 306.3896 228.6006 Y
306.3896 226.5771 l
318.6221 226.5771 318.8438 226.5771 v
318.8438 226.3887 318.8438 225.0801 318.8438 224.8926 c
318.6221 224.8926 306.3896 224.8926 Y
306.3896 219.3369 L
321.6377 219.3369 L
321.6377 221.3486 l
309.0977 221.3486 308.877 221.3486 v
308.877 221.5352 308.877 222.8096 308.877 222.9961 c
309.0977 222.9961 321.3057 222.9961 Y
321.3057 228.6006 l
315.4346 228.6006 315.2148 228.6006 v
315.2148 228.792 315.2148 230.4277 315.2148 230.625 c
315.4395 230.625 324.7471 230.625 Y
324.7471 232.9053 L
324.6328 232.9053 L
303.2031 232.9053 L
f
329.793 233.1074 m
332.7344 233.7031 336.0098 234.6611 338.1367 237.2012 c
340.2646 234.6611 343.542 233.7031 346.4844 233.1074 C
346.5537 233.0918 L
348.0068 235.0146 L
347.8252 235.0479 l
343.1836 235.8916 340.5342 237.417 339.708 239.6943 c
340.0371 239.6943 346.4766 239.6943 Y
346.4766 241.9766 L
346.3604 241.9766 L
329.8037 241.9766 L
329.8037 239.6943 l
336.2363 239.6943 336.5684 239.6943 v
335.7539 237.4424 333.1016 235.9209 328.4482 235.0479 C
328.2676 235.0127 L
329.7227 233.0918 L
329.793 233.1074 L
f
339.3535 234.6826 m
339.2402 234.6826 L
336.8662 234.6826 l
336.8662 232.085 336.8662 231.8779 v
336.6455 231.8779 327.3662 231.8779 Y
327.3662 229.5996 L
348.9131 229.5996 L
348.9131 231.8779 l
339.5713 231.8779 339.3535 231.8779 v
339.3535 232.085 339.3535 234.6826 Y
f
*u
1 D
367.0898 228.1338 m
367.0898 225.7852 367.0898 225.5811 v
366.875 225.5811 357.6475 225.5811 357.4336 225.5811 c
357.4336 225.7852 357.4336 228.1338 Y
354.9463 228.1338 L
354.9463 219.3369 L
369.5811 219.3369 L
369.5811 228.1338 L
369.4639 228.1338 L
367.0898 228.1338 L
f
0 D
357.4053 221.3301 m
357.4053 221.5273 357.4053 223.4688 357.4053 223.6631 c
357.6221 223.6631 366.8467 223.6631 367.0664 223.6631 c
367.0664 223.4688 367.0664 221.5273 367.0664 221.3301 c
366.8467 221.3301 357.6221 221.3301 357.4053 221.3301 C
f
*U
369.5811 242.417 m
369.4639 242.417 L
367.0898 242.417 L
367.0898 229.3955 L
369.5811 229.3955 l
369.5811 234.8066 369.5811 235.0234 v
369.7871 235.0234 372.7861 235.0234 Y
372.7861 237.3057 l
369.7871 237.3057 369.5811 237.3057 v
369.5811 237.5195 369.5811 242.417 Y
f
393.2227 242.417 m
393.1064 242.417 L
390.7354 242.417 L
390.7354 228.9883 L
393.2227 228.9883 l
393.2227 234.7617 393.2227 234.9785 v
393.4336 234.9785 396.4307 234.9785 Y
396.4307 237.2578 l
393.4336 237.2578 393.2227 237.2578 v
393.2227 237.4727 393.2227 242.417 Y
f
377.0752 227.4482 m
377.0752 225.168 l
390.5127 225.168 390.7354 225.168 v
390.7354 224.9463 390.7354 219.3076 Y
393.2227 219.3076 L
393.2227 227.4482 L
393.1064 227.4482 L
377.0752 227.4482 L
f
411.5244 223.7461 m
411.5244 223.9658 411.5244 232.3184 Y
411.4111 232.3184 L
409.0625 232.3184 l
409.0625 223.9658 409.0625 223.7461 v
408.8613 223.7461 406.248 223.7461 406.0439 223.7461 c
406.0439 223.9658 406.0439 232.3184 Y
403.5576 232.3184 l
403.5576 223.9658 403.5576 223.7461 v
403.3457 223.7461 398.1387 223.7461 Y
398.1387 221.4648 L
419.4521 221.4648 L
419.4521 223.7461 l
411.7451 223.7461 411.5244 223.7461 V
f
414.8672 228.0742 m
417.4531 228.0742 L
417.4531 241.5557 L
417.3418 241.5557 L
400.3301 241.5557 L
400.3301 239.2744 l
414.6475 239.2744 414.8672 239.2744 v
414.8672 239.0518 414.8672 228.0742 Y
f
305.8193 234.1396 m
309.3145 234.8262 312.2041 236.4639 313.9766 238.75 c
315.748 236.4639 318.6377 234.8262 322.1309 234.1396 C
322.208 234.124 L
323.5576 235.9932 L
323.3896 236.0283 l
319.5273 236.8271 315.3672 239.1533 315.3672 242.3721 C
315.3672 242.4854 L
315.2568 242.4854 L
312.583 242.4854 L
312.583 242.3721 l
312.583 239.1533 308.4268 236.8271 304.5625 236.0283 C
304.3926 235.9932 L
305.7441 234.124 L
305.8193 234.1396 L
f
240.0215 226.4561 m
239.9102 226.4561 L
237.5596 226.4561 L
237.5596 219.3369 L
253.0386 219.3369 L
253.0386 221.6172 l
240.2466 221.6172 240.0215 221.6172 v
240.0215 221.8359 240.0215 226.4561 Y
f
252.8643 242.417 m
252.7505 242.417 L
250.3789 242.417 L
250.3789 225.4746 L
252.8643 225.4746 l
252.8643 233.8613 252.8643 234.084 v
253.0723 234.084 256.0718 234.084 Y
256.0718 236.3594 l
253.0723 236.3594 252.8643 236.3594 v
252.8643 236.5801 252.8643 242.417 Y
f
*u
1 D
246.8628 234.6846 m
246.8628 236.252 246.0513 237.7236 244.686 238.6963 c
245.2515 238.6963 247.7793 238.6963 Y
247.7793 240.7715 l
242.5732 240.7715 242.3579 240.7715 v
242.3579 240.9717 242.3579 242.667 Y
242.2441 242.667 L
239.873 242.667 l
239.873 240.9717 239.873 240.7715 v
239.6538 240.7715 234.4487 240.7715 Y
234.4487 238.6963 l
236.9756 238.6963 237.5464 238.6963 v
236.1768 237.7236 235.3652 236.252 235.3652 234.6846 c
235.3652 231.8486 237.9443 229.543 241.1128 229.543 c
244.2856 229.543 246.8628 231.8486 246.8628 234.6846 C
f
0 D
241.1128 231.7021 m
239.2397 231.7021 237.7188 233.041 237.7188 234.6846 c
237.7188 236.3262 239.2397 237.6631 241.1128 237.6631 c
242.9868 237.6631 244.5122 236.3262 244.5122 234.6846 c
244.5122 233.041 242.9868 231.7021 241.1128 231.7021 C
f
*U
*u
1 D
363.6484 235.1523 m
363.6484 236.5166 362.9385 237.7842 361.7314 238.6963 c
362.2363 238.6963 364.5625 238.6963 Y
364.5625 240.7715 l
359.3594 240.7715 359.1445 240.7715 v
359.1445 240.9717 359.1445 242.667 Y
359.0283 242.667 L
356.6572 242.667 l
356.6572 240.9717 356.6572 240.7715 v
356.4385 240.7715 351.2373 240.7715 Y
351.2373 238.6963 l
353.5654 238.6963 354.0674 238.6963 v
352.8633 237.7861 352.1514 236.5166 352.1514 235.1523 c
352.1514 232.5039 354.7295 230.3477 357.8994 230.3477 c
361.0674 230.3477 363.6484 232.5039 363.6484 235.1523 C
f
0 D
357.8994 232.5039 m
356.0479 232.5039 354.5361 233.6904 354.5361 235.1523 c
354.5361 236.6113 356.0479 237.8008 357.8994 237.8008 c
359.752 237.8008 361.2568 236.6113 361.2568 235.1523 c
361.2568 233.6904 359.752 232.5039 357.8994 232.5039 C
f
*U
*u
1 D
375.791 235.0049 m
375.791 232.2773 378.3711 230.0557 381.542 230.0557 c
384.7109 230.0557 387.2949 232.2773 387.2949 235.0049 c
387.2949 236.4375 386.5674 237.7559 385.3213 238.6963 c
385.8213 238.6963 388.209 238.6963 Y
388.209 240.7715 l
383.001 240.7715 382.7842 240.7715 v
382.7842 240.9717 382.7842 242.667 Y
382.6729 242.667 L
380.2988 242.667 l
380.2988 240.9717 380.2988 240.7715 v
380.082 240.7715 374.877 240.7715 Y
374.877 238.6963 l
377.2637 238.6963 377.7617 238.6963 v
376.5186 237.7559 375.791 236.4375 375.791 235.0049 C
f
0 D
381.542 232.165 m
379.6875 232.165 378.1826 233.4414 378.1826 235.0049 c
378.1826 236.5723 379.6875 237.8438 381.542 237.8438 c
383.3975 237.8438 384.9053 236.5723 384.9053 235.0049 c
384.9053 233.4414 383.3975 232.165 381.542 232.165 C
f
*U
*u
1 D
338.1367 228.499 m
333.2979 228.499 329.9189 226.5518 329.9189 223.7646 c
329.9189 220.9785 333.2979 219.0283 338.1367 219.0283 c
342.9805 219.0283 346.3604 220.9785 346.3604 223.7646 c
346.3604 226.5518 342.9805 228.499 338.1367 228.499 C
f
0 D
338.1367 221.2529 m
334.8877 221.2529 332.5244 222.3096 332.5244 223.7646 c
332.5244 225.2197 334.8877 226.2734 338.1367 226.2734 c
341.3945 226.2734 343.75 225.2197 343.75 223.7646 c
343.75 222.3096 341.3945 221.2529 338.1367 221.2529 C
f
*U
U
u
u
u
*u
253.3354 520.6865 m
253.9399 522 L
259.3208 519.5273 L
255.7407 525.918 L
256.5459 527.667 L
260.3467 520.6943 L
268.9365 522.3818 L
268.0542 520.4629 L
260.1797 519.1318 L
266.1743 516.375 L
265.5684 515.0605 L
253.3354 520.6865 l
f
*U
U
U
u
u
*u
262.7412 537.7988 m
264.5571 540.2715 268.0137 539.96 271.2334 537.5967 c
274.5288 535.1758 275.7925 532.041 273.9688 529.5557 c
272.1445 527.0723 268.7754 527.3389 265.4775 529.7598 c
262.2598 532.123 260.9263 535.3271 262.7412 537.7988 c
f
1 D
272.6001 530.5605 m
273.979 532.4395 272.4858 534.7744 270.3247 536.3613 c
268.1172 537.9824 265.4126 538.6016 264.1108 536.7949 c
262.7759 535.0107 264.1782 532.6172 266.3867 530.9961 c
268.5469 529.4082 271.2217 528.6836 272.6001 530.5605 c
f
*U
U
U
u
u
*u
0 D
270.9302 547.0566 m
272.7529 548.7295 L
274.2236 550.0801 275.9297 551.0674 278.1064 548.6934 c
279.2153 547.4844 279.3262 546.0166 278.645 545.0234 c
278.6714 544.9951 L
279.1582 545.1289 279.5137 545.0615 280.3086 544.665 c
285.3418 542.0059 L
284.1265 540.8906 L
279.8296 543.2832 L
278.6118 543.9473 278.2593 543.626 277.6953 543.1064 c
277.0557 542.5195 L
281.0986 538.1123 L
280.0332 537.1348 L
270.9302 547.0566 l
f
1 D
275.9092 543.7695 m
276.8149 544.6006 L
277.8271 545.5303 277.8765 546.6748 277.0024 547.6289 c
276.1807 548.5234 275.1479 548.623 274.1665 547.7227 c
273.144 546.7842 L
275.9092 543.7695 l
f
*U
U
U
u
u
*u
0 D
281.8521 556.1113 m
286.6113 559.167 L
287.5283 557.7393 L
283.9863 555.4639 L
286.1133 552.1533 L
289.3389 554.2256 L
290.2568 552.7969 L
287.0313 550.7256 L
289.4282 546.9922 L
292.9702 549.2686 L
293.8892 547.8389 L
289.1284 544.7822 L
281.8521 556.1113 l
f
*U
U
U
u
u
*u
296.3804 564.002 m
297.7866 564.5742 L
306.8105 553.7051 L
305.3486 553.1123 L
303.1201 555.8711 L
298.5356 554.0088 L
298.8628 550.4746 L
297.4546 549.9033 L
296.3804 564.002 l
f
1 D
297.7188 562.5879 m
298.3687 555.6484 L
302.0947 557.1621 L
297.7188 562.5879 l
f
*U
U
U
u
u
*u
0 D
316.7793 569.5508 m
318.7412 569.7021 L
324.0273 559.2422 L
324.0557 559.2432 L
323.2119 570.0518 L
324.6533 570.165 L
325.7021 556.7412 L
323.8564 556.5967 L
318.4385 567.2793 L
318.4092 567.2773 L
319.2705 556.2383 L
317.8271 556.126 L
316.7793 569.5508 l
f
*U
U
U
u
u
*u
335.9961 569.5967 m
337.5029 569.4111 L
340.0938 555.5244 L
338.5313 555.7188 L
337.9248 559.2139 L
333.0127 559.8184 L
331.5791 556.5723 L
330.0723 556.7588 L
335.9961 569.5967 l
f
1 D
336.4775 567.71 m
333.666 561.3311 L
337.6582 560.8408 L
336.4775 567.71 l
f
*U
U
U
u
u
*u
0 D
348.5859 565.3525 m
345.5781 566.2539 L
346.0664 567.8809 L
353.4668 565.6611 L
352.9805 564.0352 L
349.9717 564.9375 L
346.5928 553.665 L
345.208 554.0811 L
348.5859 565.3525 l
f
*U
U
U
u
u
*u
359.1758 563.2881 m
360.4932 562.6875 L
354.9082 550.4355 L
353.5938 551.0342 L
359.1758 563.2881 l
f
*U
U
U
u
u
*u
371.0332 557.0225 m
373.5889 555.3232 373.4355 551.8574 371.2217 548.5332 c
368.957 545.1279 365.8809 543.7217 363.3154 545.4307 c
360.749 547.1367 360.8633 550.5156 363.1289 553.9189 c
365.3418 557.2451 368.4795 558.7236 371.0332 557.0225 c
f
1 D
364.2578 546.8418 m
366.1973 545.5508 368.459 547.1504 369.9453 549.3828 c
371.4619 551.6631 371.96 554.3916 370.0928 555.6113 c
368.25 556.8613 365.9219 555.3506 364.4043 553.0703 c
362.918 550.8379 362.3184 548.1328 364.2578 546.8418 c
f
*U
U
U
u
u
*u
0 D
380.8662 549.124 m
382.2441 547.7197 L
377.627 536.9453 L
377.6475 536.9248 L
385.3828 544.5186 L
386.3994 543.4854 L
376.7891 534.0537 L
375.4912 535.375 L
380.1904 546.3955 L
380.1719 546.415 L
372.2676 538.6582 L
371.2559 539.6924 L
380.8662 549.124 l
f
*U
U
U
u
u
*u
393.249 534.4121 m
394.0742 533.1377 L
385.0889 522.2383 L
384.2314 523.5635 L
386.5254 526.2695 L
383.8359 530.4238 L
380.4287 529.4414 L
379.6016 530.7168 L
393.249 534.4121 l
f
1 D
392.1123 532.8311 m
385.4141 530.8945 L
387.5996 527.5176 L
392.1123 532.8311 l
f
*U
U
U
u
u
*u
0 D
399.3281 523.4736 m
399.8848 522.1396 L
389.0264 517.6016 L
390.6543 513.7041 L
389.0889 513.0498 L
386.9033 518.2822 L
399.3281 523.4736 l
f
*U
U
U
u
u
*u
262.6816 465.3389 m
259.1016 464.1211 256.7222 464.8262 255.9224 467.1826 c
255.1206 469.5381 256.5767 471.5479 260.1572 472.7646 c
267.6279 475.3037 L
268.0928 473.9346 L
260.8604 471.4756 L
258.4126 470.6436 256.9287 469.4971 257.5293 467.7285 c
258.1299 465.9629 260.0063 465.958 262.4541 466.7891 c
269.6865 469.249 L
270.1509 467.8789 L
262.6816 465.3389 l
f
*U
U
U
u
u
*u
271.4971 464.8564 m
272.459 463.1406 L
265.1826 453.9531 L
265.1968 453.9277 L
274.6528 459.2285 L
275.3599 457.9678 L
263.6167 451.3809 L
262.7104 452.9971 L
270.1323 462.4004 L
270.1172 462.4268 L
260.4604 457.0107 L
259.752 458.2705 L
271.4971 464.8564 l
f
*U
U
U
u
u
*u
277.6772 454.8486 m
278.5532 453.6963 L
267.8374 445.5439 L
266.9614 446.6963 L
277.6772 454.8486 l
f
*U
U
U
u
u
*u
274.5986 437.9531 m
273.3213 439.2344 L
280.1714 451.4365 L
281.3149 450.2861 L
275.1777 439.7773 L
275.1968 439.7578 L
285.7881 445.7998 L
286.8618 444.7227 L
274.5986 437.9531 l
f
*U
U
U
u
u
*u
288.8564 443.2334 m
293.437 439.915 L
292.4419 438.54 L
289.0322 441.0137 L
286.7227 437.8262 L
289.8271 435.5762 L
288.8306 434.2012 L
285.7261 436.4512 L
283.1235 432.8574 L
286.5313 430.3867 L
285.5361 429.0137 L
280.9546 432.332 L
288.8564 443.2334 l
f
*U
U
U
u
u
*u
296.2686 438.1592 m
298.4722 437.0371 L
300.251 436.127 301.7725 434.874 300.3076 432.0049 c
299.5615 430.5449 298.2231 429.9297 297.0581 430.2217 c
297.04 430.1855 L
297.334 429.7764 297.3945 429.4199 297.3018 428.5371 c
296.5649 422.8926 L
295.0957 423.6406 L
295.8389 428.5029 L
296.0356 429.875 295.6108 430.0928 294.9277 430.4424 c
294.1548 430.8359 L
291.436 425.5088 L
290.1479 426.168 L
296.2686 438.1592 l
f
1 D
294.9277 432.3477 m
296.0229 431.7881 L
297.2471 431.1641 298.3379 431.5205 298.9238 432.668 c
299.4766 433.751 299.209 434.7559 298.0239 435.3584 c
296.7866 435.9902 L
294.9277 432.3477 l
f
*U
U
U
u
u
*u
0 D
309.1104 430.5166 m
308.5332 431.1143 308.2012 431.4082 307.4883 431.6455 c
306.7197 431.8994 305.6924 431.834 305.2471 430.499 c
304.4316 428.0469 308.7393 427.2441 307.3389 423.0352 c
306.4307 420.3066 304.4932 419.7529 302.5703 420.3916 c
301.8984 420.6133 301.3262 421.0908 300.7842 421.5752 c
301.4883 423.2314 L
301.8691 422.8203 302.5723 422.1807 303.2715 421.9482 c
304.0537 421.6855 305.3486 421.9063 305.8467 423.4082 c
306.7949 426.2637 302.415 426.8467 303.7383 430.8203 c
304.4902 433.0879 306.2393 433.8496 307.9678 433.2744 c
308.6006 433.0654 309.3066 432.666 309.8633 432.1348 C
309.1104 430.5166 l
f
*U
U
U
u
u
*u
313.8584 431.4316 m
315.2773 431.1406 L
312.5693 417.9502 L
311.1533 418.2402 L
313.8584 431.4316 l
f
*U
U
U
u
u
*u
321.1865 428.5938 m
318.0576 428.8398 L
318.1934 430.5322 L
325.8936 429.9248 L
325.7588 428.2334 L
322.6289 428.4805 L
321.7051 416.748 L
320.2627 416.8623 L
321.1865 428.5938 l
f
*U
U
U
u
u
*u
331.8311 422.375 m
327.2666 429.8643 L
328.9512 430 L
332.4355 424.2236 L
334.8799 430.4756 L
336.5684 430.6143 L
333.2725 422.4883 L
333.7227 416.876 L
332.2803 416.7588 L
331.8311 422.375 l
f
*U
U
U
u
u
*u
348.457 434.1602 m
351.3281 435.2393 354.0508 433.0908 355.457 429.3525 c
356.8975 425.5225 356.2422 422.2061 353.3574 421.1211 c
350.4717 420.0361 347.7949 422.1035 346.3574 425.9307 c
344.9512 429.667 345.5859 433.0811 348.457 434.1602 c
f
1 D
352.7598 422.7119 m
354.9395 423.5313 354.9648 426.3018 354.0205 428.8105 c
353.0576 431.376 351.1318 433.373 349.0527 432.5693 c
346.96 431.8037 346.8281 429.0342 347.791 426.4707 c
348.7344 423.959 350.5801 421.8906 352.7598 422.7119 c
f
*U
U
U
u
u
*u
0 D
355.6279 437.0859 m
360.2705 439.7852 L
361.1221 438.3174 L
357.7334 436.3447 L
359.7109 432.9424 L
362.9492 434.8281 L
363.8047 433.3604 L
360.5625 431.4775 L
363.6455 426.1729 L
362.3955 425.4453 L
355.6279 437.0859 l
f
*U
U
U
u
u
*u
369.6719 447.3633 m
370.7451 448.4365 L
383.2715 441.9043 L
382.1523 440.79 L
379.0303 442.4707 L
375.5225 438.9814 L
377.1895 435.8506 L
376.1123 434.7783 L
369.6719 447.3633 l
f
1 D
371.4521 446.5791 m
374.7344 440.4287 L
377.5859 443.2646 L
371.4521 446.5791 l
f
*U
U
U
u
u
*u
0 D
375.1299 453.291 m
376.5605 455.3066 L
377.7158 456.9355 379.1758 458.2588 381.8027 456.3945 c
383.1396 455.4463 383.5557 454.0332 383.0986 452.9199 c
383.1289 452.8984 L
383.5791 453.1299 383.9395 453.1396 384.8018 452.9199 c
390.2803 451.373 L
389.3242 450.0283 L
384.623 451.4678 L
383.292 451.8613 383.0156 451.4697 382.5723 450.8467 c
382.0693 450.1367 L
386.9473 446.6777 L
386.1084 445.4971 L
375.1299 453.291 l
f
1 D
380.6846 451.1201 m
381.3965 452.1221 L
382.1914 453.2432 382 454.3711 380.9463 455.1211 c
379.9551 455.8252 378.9238 455.7051 378.1523 454.6182 c
377.3496 453.4873 L
380.6846 451.1201 l
f
*U
U
U
u
u
*u
0 D
382.9805 462.4834 m
381.5732 459.6797 L
380.0557 460.4414 L
383.5225 467.3457 L
385.0391 466.584 L
383.6309 463.7773 L
394.1445 458.4961 L
393.498 457.2051 L
382.9805 462.4834 l
f
*U
U
U
u
u
*u
387.8096 473.5791 m
387.2119 473.002 386.9189 472.6699 386.6826 471.9561 c
386.4277 471.1875 386.4941 470.1602 387.8301 469.7168 c
390.2852 468.9043 391.083 473.2119 395.2949 471.8174 c
398.0205 470.9131 398.5801 468.9756 397.9424 467.0527 c
397.7207 466.3799 397.2441 465.8076 396.7598 465.2666 c
395.1035 465.9678 L
395.5146 466.3496 396.1543 467.0527 396.3848 467.752 c
396.6426 468.5371 396.4229 469.8291 394.9219 470.3242 c
392.0635 471.2725 391.4863 466.8906 387.5117 468.207 c
385.2402 468.958 384.4795 470.707 385.0518 472.4355 c
385.2617 473.0684 385.6582 473.7725 386.1885 474.3311 C
387.8096 473.5791 l
f
*U
U
U
276.3076 504.4209 m
276.1958 504.4209 L
260.2583 504.4209 L
260.2583 502.1387 l
273.4961 502.1387 273.7197 502.1387 v
273.7197 501.9287 273.7197 496.749 273.7197 496.5381 c
273.4961 496.5381 257.7417 496.5381 Y
257.7417 494.2549 l
266.9097 494.2549 267.1294 494.2549 v
267.1294 494.0479 267.1294 490.6807 267.1294 490.4736 c
266.9097 490.4736 260.3101 490.4736 Y
260.3101 488.1914 l
273.4961 488.1914 273.7197 488.1914 v
273.7197 487.9746 273.7197 481.7012 Y
276.2036 481.7012 L
276.2036 490.4736 l
269.8335 490.4736 269.6177 490.4736 v
269.6177 490.6807 269.6177 494.0479 269.6177 494.2549 c
269.835 494.2549 279.0024 494.2549 Y
279.0024 496.5381 l
276.5146 496.5381 276.3076 496.5381 v
276.3076 496.7559 276.3076 504.4209 Y
f
297.8896 504.8438 m
297.8896 481.7617 L
300.374 481.7617 L
300.374 504.8438 L
300.2637 504.8438 L
297.8896 504.8438 L
f
*u
1 D
293.8579 504.8398 m
293.8579 500.9473 293.8579 500.7324 v
293.6567 500.7324 291.0908 500.7324 290.9507 500.7324 c
290.0864 503.292 288.3853 504.8223 286.3818 504.8223 c
283.3936 504.8223 281.2241 501.4863 281.2241 496.8887 c
281.2241 492.291 283.3936 488.9531 286.3818 488.9531 c
288.3193 488.9531 289.936 490.3301 290.8374 492.7256 c
290.9741 492.7256 293.6567 492.7256 293.8579 492.7256 c
293.8579 492.5059 293.8579 481.7617 Y
296.3442 481.7617 L
296.3442 504.8398 L
296.2271 504.8398 L
293.8579 504.8398 L
f
0 D
291.4424 498.4775 m
291.6514 498.4775 293.6616 498.4775 293.8579 498.4775 c
293.8579 498.2734 293.8579 495.208 293.8579 495.0039 c
293.6616 495.0039 291.6265 495.0039 291.4063 495.0039 c
291.4917 495.6172 291.5444 496.249 291.5444 496.8887 c
291.5444 497.4238 291.5078 497.9551 291.4424 498.4775 C
f
286.3818 491.2656 m
284.7788 491.2656 283.6177 493.6309 283.6177 496.8887 c
283.6177 500.1465 284.7788 502.5117 286.3818 502.5117 c
287.9863 502.5117 289.1543 500.1465 289.1543 496.8887 c
289.1543 493.6309 287.9863 491.2656 286.3818 491.2656 C
f
*U
303.2031 495.332 m
303.2031 493.0518 l
312.5088 493.0518 312.7305 493.0518 v
312.7305 492.8545 312.7305 491.2188 312.7305 491.0273 c
312.5107 491.0273 306.3896 491.0273 Y
306.3896 489.0039 l
318.6221 489.0039 318.8438 489.0039 v
318.8438 488.8154 318.8438 487.5068 318.8438 487.3193 c
318.6221 487.3193 306.3896 487.3193 Y
306.3896 481.7637 L
321.6377 481.7637 L
321.6377 483.7754 l
309.0977 483.7754 308.877 483.7754 v
308.877 483.9619 308.877 485.2363 308.877 485.4229 c
309.0977 485.4229 321.3057 485.4229 Y
321.3057 491.0273 l
315.4346 491.0273 315.2148 491.0273 v
315.2148 491.2188 315.2148 492.8545 315.2148 493.0518 c
315.4395 493.0518 324.7471 493.0518 Y
324.7471 495.332 L
324.6328 495.332 L
303.2031 495.332 L
f
329.793 495.5342 m
332.7344 496.1299 336.0098 497.0879 338.1367 499.6279 c
340.2646 497.0879 343.542 496.1299 346.4844 495.5342 C
346.5537 495.5186 L
348.0068 497.4414 L
347.8252 497.4746 l
343.1836 498.3184 340.5342 499.8438 339.708 502.1211 c
340.0371 502.1211 346.4766 502.1211 Y
346.4766 504.4033 L
346.3604 504.4033 L
329.8037 504.4033 L
329.8037 502.1211 l
336.2363 502.1211 336.5684 502.1211 v
335.7539 499.8691 333.1016 498.3477 328.4482 497.4746 C
328.2676 497.4395 L
329.7227 495.5186 L
329.793 495.5342 L
f
339.3535 497.1094 m
339.2402 497.1094 L
336.8662 497.1094 l
336.8662 494.5117 336.8662 494.3047 v
336.6455 494.3047 327.3662 494.3047 Y
327.3662 492.0264 L
348.9131 492.0264 L
348.9131 494.3047 l
339.5713 494.3047 339.3535 494.3047 v
339.3535 494.5117 339.3535 497.1094 Y
f
*u
1 D
367.0898 490.5605 m
367.0898 488.2119 367.0898 488.0078 v
366.875 488.0078 357.6475 488.0078 357.4336 488.0078 c
357.4336 488.2119 357.4336 490.5605 Y
354.9463 490.5605 L
354.9463 481.7637 L
369.5811 481.7637 L
369.5811 490.5605 L
369.4639 490.5605 L
367.0898 490.5605 L
f
0 D
357.4053 483.7568 m
357.4053 483.9541 357.4053 485.8955 357.4053 486.0898 c
357.6221 486.0898 366.8467 486.0898 367.0664 486.0898 c
367.0664 485.8955 367.0664 483.9541 367.0664 483.7568 c
366.8467 483.7568 357.6221 483.7568 357.4053 483.7568 C
f
*U
369.5811 504.8438 m
369.4639 504.8438 L
367.0898 504.8438 L
367.0898 491.8223 L
369.5811 491.8223 l
369.5811 497.2334 369.5811 497.4502 v
369.7871 497.4502 372.7861 497.4502 Y
372.7861 499.7324 l
369.7871 499.7324 369.5811 499.7324 v
369.5811 499.9463 369.5811 504.8438 Y
f
393.2227 504.8438 m
393.1064 504.8438 L
390.7354 504.8438 L
390.7354 491.415 L
393.2227 491.415 l
393.2227 497.1885 393.2227 497.4053 v
393.4336 497.4053 396.4307 497.4053 Y
396.4307 499.6846 l
393.4336 499.6846 393.2227 499.6846 v
393.2227 499.8994 393.2227 504.8438 Y
f
377.0752 489.875 m
377.0752 487.5947 l
390.5127 487.5947 390.7354 487.5947 v
390.7354 487.373 390.7354 481.7344 Y
393.2227 481.7344 L
393.2227 489.875 L
393.1064 489.875 L
377.0752 489.875 L
f
411.5244 486.1729 m
411.5244 486.3926 411.5244 494.7451 Y
411.4111 494.7451 L
409.0625 494.7451 l
409.0625 486.3926 409.0625 486.1729 v
408.8613 486.1729 406.248 486.1729 406.0439 486.1729 c
406.0439 486.3926 406.0439 494.7451 Y
403.5576 494.7451 l
403.5576 486.3926 403.5576 486.1729 v
403.3457 486.1729 398.1387 486.1729 Y
398.1387 483.8916 L
419.4521 483.8916 L
419.4521 486.1729 l
411.7451 486.1729 411.5244 486.1729 V
f
414.8672 490.501 m
417.4531 490.501 L
417.4531 503.9824 L
417.3418 503.9824 L
400.3301 503.9824 L
400.3301 501.7012 l
414.6475 501.7012 414.8672 501.7012 v
414.8672 501.4785 414.8672 490.501 Y
f
305.8193 496.5664 m
309.3145 497.2529 312.2041 498.8906 313.9766 501.1768 c
315.748 498.8906 318.6377 497.2529 322.1309 496.5664 C
322.208 496.5508 L
323.5576 498.4199 L
323.3896 498.4551 l
319.5273 499.2539 315.3672 501.5801 315.3672 504.7988 C
315.3672 504.9121 L
315.2568 504.9121 L
312.583 504.9121 L
312.583 504.7988 l
312.583 501.5801 308.4268 499.2539 304.5625 498.4551 C
304.3926 498.4199 L
305.7441 496.5508 L
305.8193 496.5664 L
f
240.0215 488.8828 m
239.9102 488.8828 L
237.5596 488.8828 L
237.5596 481.7637 L
253.0386 481.7637 L
253.0386 484.0439 l
240.2466 484.0439 240.0215 484.0439 v
240.0215 484.2627 240.0215 488.8828 Y
f
252.8643 504.8438 m
252.7505 504.8438 L
250.3789 504.8438 L
250.3789 487.9014 L
252.8643 487.9014 l
252.8643 496.2881 252.8643 496.5107 v
253.0723 496.5107 256.0718 496.5107 Y
256.0718 498.7861 l
253.0723 498.7861 252.8643 498.7861 v
252.8643 499.0068 252.8643 504.8438 Y
f
*u
1 D
246.8628 497.1113 m
246.8628 498.6787 246.0513 500.1504 244.686 501.123 c
245.2515 501.123 247.7793 501.123 Y
247.7793 503.1982 l
242.5732 503.1982 242.3579 503.1982 v
242.3579 503.3984 242.3579 505.0938 Y
242.2441 505.0938 L
239.873 505.0938 l
239.873 503.3984 239.873 503.1982 v
239.6538 503.1982 234.4487 503.1982 Y
234.4487 501.123 l
236.9756 501.123 237.5464 501.123 v
236.1768 500.1504 235.3652 498.6787 235.3652 497.1113 c
235.3652 494.2754 237.9443 491.9697 241.1128 491.9697 c
244.2856 491.9697 246.8628 494.2754 246.8628 497.1113 C
f
0 D
241.1128 494.1289 m
239.2397 494.1289 237.7188 495.4678 237.7188 497.1113 c
237.7188 498.7529 239.2397 500.0898 241.1128 500.0898 c
242.9868 500.0898 244.5122 498.7529 244.5122 497.1113 c
244.5122 495.4678 242.9868 494.1289 241.1128 494.1289 C
f
*U
*u
1 D
363.6484 497.5791 m
363.6484 498.9434 362.9385 500.2109 361.7314 501.123 c
362.2363 501.123 364.5625 501.123 Y
364.5625 503.1982 l
359.3594 503.1982 359.1445 503.1982 v
359.1445 503.3984 359.1445 505.0938 Y
359.0283 505.0938 L
356.6572 505.0938 l
356.6572 503.3984 356.6572 503.1982 v
356.4385 503.1982 351.2373 503.1982 Y
351.2373 501.123 l
353.5654 501.123 354.0674 501.123 v
352.8633 500.2129 352.1514 498.9434 352.1514 497.5791 c
352.1514 494.9307 354.7295 492.7744 357.8994 492.7744 c
361.0674 492.7744 363.6484 494.9307 363.6484 497.5791 C
f
0 D
357.8994 494.9307 m
356.0479 494.9307 354.5361 496.1172 354.5361 497.5791 c
354.5361 499.0381 356.0479 500.2275 357.8994 500.2275 c
359.752 500.2275 361.2568 499.0381 361.2568 497.5791 c
361.2568 496.1172 359.752 494.9307 357.8994 494.9307 C
f
*U
*u
1 D
375.791 497.4316 m
375.791 494.7041 378.3711 492.4824 381.542 492.4824 c
384.7109 492.4824 387.2949 494.7041 387.2949 497.4316 c
387.2949 498.8643 386.5674 500.1826 385.3213 501.123 c
385.8213 501.123 388.209 501.123 Y
388.209 503.1982 l
383.001 503.1982 382.7842 503.1982 v
382.7842 503.3984 382.7842 505.0938 Y
382.6729 505.0938 L
380.2988 505.0938 l
380.2988 503.3984 380.2988 503.1982 v
380.082 503.1982 374.877 503.1982 Y
374.877 501.123 l
377.2637 501.123 377.7617 501.123 v
376.5186 500.1826 375.791 498.8643 375.791 497.4316 C
f
0 D
381.542 494.5918 m
379.6875 494.5918 378.1826 495.8682 378.1826 497.4316 c
378.1826 498.999 379.6875 500.2705 381.542 500.2705 c
383.3975 500.2705 384.9053 498.999 384.9053 497.4316 c
384.9053 495.8682 383.3975 494.5918 381.542 494.5918 C
f
*U
*u
1 D
338.1367 490.9258 m
333.2979 490.9258 329.9189 488.9785 329.9189 486.1914 c
329.9189 483.4053 333.2979 481.4551 338.1367 481.4551 c
342.9805 481.4551 346.3604 483.4053 346.3604 486.1914 c
346.3604 488.9785 342.9805 490.9258 338.1367 490.9258 C
f
0 D
338.1367 483.6797 m
334.8877 483.6797 332.5244 484.7363 332.5244 486.1914 c
332.5244 487.6465 334.8877 488.7002 338.1367 488.7002 c
341.3945 488.7002 343.75 487.6465 343.75 486.1914 c
343.75 484.7363 341.3945 483.6797 338.1367 483.6797 C
f
*U
U
u
u
*u
0 1 0.7 0 (PANTONE 199 C) 0 x
570.0557 631.083 m
570.8018 631.083 L
570.8018 622.6826 L
569.9717 622.6826 L
569.9717 630.1445 L
568.6113 628.9526 L
568.1543 629.4941 L
570.0557 631.083 l
f
*U
*u
573.9668 623.4048 m
575.8926 625.5352 L
576.9033 626.6543 577.9141 627.9058 577.9141 628.9287 c
577.9141 629.8193 577.2646 630.4453 576.4346 630.4453 c
575.6758 630.4453 575.0742 630.2285 574.4121 629.8433 c
574.2676 630.6016 L
574.8818 630.9023 575.7002 631.167 576.3857 631.167 c
577.7461 631.167 578.8174 630.4814 578.8174 628.9648 c
578.8174 627.7134 577.5898 626.2568 576.5059 625.0654 c
574.9902 623.4048 L
579.0098 623.4048 L
579.0098 622.6826 L
573.9668 622.6826 L
573.9668 623.4048 l
f
*U
U
U
1 Ap
0 R
0 0 0 0 K
595.4141 52.8809 m
0.137695 52.8809 L
0.137695 789.8887 L
595.4141 789.8887 L
595.4141 52.8809 L
s
LB
%AI5_EndLayer--
%%PageTrailer
gsave annotatepage grestore showpage
%%Trailer
Adobe_Illustrator_AI5 /terminate get exec
Adobe_shading_AI8 /terminate get exec
Adobe_ColorImage_AI6 /terminate get exec
Adobe_pattern_AI5 /terminate get exec
AGM_Gradient /terminate get exec
Adobe_cshow /terminate get exec
Adobe_level2_AI5 /terminate get exec
%%EOF
